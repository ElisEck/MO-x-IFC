@prefix msl:    <http://www.eas.iis.fraunhofer.de/msl#> .
@prefix moont:    <http://www.eas.iis.fraunhofer.de/moont#> .
@prefix msl:    <http://www.eas.iis.fraunhofer.de/msl#> .
@prefix aix:    <http://www.eas.iis.fraunhofer.de/aix#> .
@prefix mbl:    <http://www.eas.iis.fraunhofer.de/mbl#> .
@prefix ibpsa:    <http://www.eas.iis.fraunhofer.de/ibpsa#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf:  <http://www.w3.org/2000/01/rdf#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
msl: rdf:type owl:Ontology ;
	 owl:imports msl: ;
	 owl:imports moont: .
msl:Modelica.Blocks.Continuous.Filter rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Continuous low pass, high pass, band pass or band stop IIR-filter of type CriticalDamping, Bessel, Butterworth or ChebyshevI"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.Filter moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.na.
msl:Modelica.Blocks.Continuous.Filter.na a moont:MParameterComponent;
	 moont:identifier "na";
	 moont:type xsd:Integer;
	 moont:modification "_gleich_iffilterType_gleich__gleich_Modelica.Blocks.Types.FilterType.BandPassorfilterType_gleich__gleich_Modelica.Blocks.Types.FilterType.BandStopthenorderelseifanalogFilter_gleich__gleich_Modelica.Blocks.Types.AnalogFilter.CriticalDampingthen0elseinteger(order/2)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.c1.
msl:Modelica.Blocks.Continuous.Filter.c1 a moont:MParameterComponent;
	 moont:identifier "c1";
	 moont:type xsd:Real;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.f_min.
msl:Modelica.Blocks.Continuous.Filter.f_min a moont:MParameterComponent;
	 moont:identifier "f_min";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Band of band pass/stop filter is f_min (A_gleich_-3db*gain) .. f_cut (A_gleich_-3db*gain)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.normalized.
msl:Modelica.Blocks.Continuous.Filter.normalized a moont:MParameterComponent;
	 moont:identifier "normalized";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if amplitude at f_cut _gleich_ -3db, otherwise unmodified filter"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.u_nominal.
msl:Modelica.Blocks.Continuous.Filter.u_nominal a moont:MParameterComponent;
	 moont:identifier "u_nominal";
	 moont:type xsd:Real;
	 moont:stringComment "Nominal value of input (used for scaling the states)"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.analogFilter.
msl:Modelica.Blocks.Continuous.Filter.analogFilter a moont:MParameterComponent;
	 moont:identifier "analogFilter";
	 moont:type msl:Modelica.Blocks.Types.AnalogFilter;
	 moont:stringComment "Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.AnalogFilter.CriticalDamping"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.ncr.
msl:Modelica.Blocks.Continuous.Filter.ncr a moont:MParameterComponent;
	 moont:identifier "ncr";
	 moont:type xsd:Integer;
	 moont:modification "_gleich_ifanalogFilter_gleich__gleich_Modelica.Blocks.Types.AnalogFilter.CriticalDampingthenorderelsemod(order,2)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.nc0.
msl:Modelica.Blocks.Continuous.Filter.nc0 a moont:MParameterComponent;
	 moont:identifier "nc0";
	 moont:type xsd:Integer;
	 moont:modification "_gleich_ifanalogFilter_gleich__gleich_Modelica.Blocks.Types.AnalogFilter.CriticalDampingthen0elseinteger(order/2)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.r.
msl:Modelica.Blocks.Continuous.Filter.r a moont:MParameterComponent;
	 moont:identifier "r";
	 moont:type xsd:Real;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.x_start.
msl:Modelica.Blocks.Continuous.Filter.x_start a moont:MParameterComponent;
	 moont:identifier "x_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess values of states"^^xsd:string;
	 moont:modification "_gleich_zeros(nx)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.nx.
msl:Modelica.Blocks.Continuous.Filter.nx a moont:MParameterComponent;
	 moont:identifier "nx";
	 moont:type xsd:Integer;
	 moont:modification "_gleich_iffilterType_gleich__gleich_Modelica.Blocks.Types.FilterType.LowPassorfilterType_gleich__gleich_Modelica.Blocks.Types.FilterType.HighPassthenorderelse2*order"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.ku.
msl:Modelica.Blocks.Continuous.Filter.ku a moont:MParameterComponent;
	 moont:identifier "ku";
	 moont:type xsd:Real;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.a.
msl:Modelica.Blocks.Continuous.Filter.a a moont:MParameterComponent;
	 moont:identifier "a";
	 moont:type xsd:Real;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.k1.
msl:Modelica.Blocks.Continuous.Filter.k1 a moont:MParameterComponent;
	 moont:identifier "k1";
	 moont:type xsd:Real;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.k2.
msl:Modelica.Blocks.Continuous.Filter.k2 a moont:MParameterComponent;
	 moont:identifier "k2";
	 moont:type xsd:Real;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.order.
msl:Modelica.Blocks.Continuous.Filter.order a moont:MParameterComponent;
	 moont:identifier "order";
	 moont:type xsd:Integer;
	 moont:stringComment "Order of filter"^^xsd:string;
	 moont:modification "(min_gleich_1)_gleich_2"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.y_start.
msl:Modelica.Blocks.Continuous.Filter.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value of output"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.A_ripple.
msl:Modelica.Blocks.Continuous.Filter.A_ripple a moont:MParameterComponent;
	 moont:identifier "A_ripple";
	 moont:type xsd:Real;
	 moont:stringComment "Pass band ripple for Chebyshev filter (otherwise not used); > 0 required"^^xsd:string;
	 moont:modification "(unit_gleich_\"dB\")_gleich_0.5"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.gain.
msl:Modelica.Blocks.Continuous.Filter.gain a moont:MParameterComponent;
	 moont:identifier "gain";
	 moont:type xsd:Real;
	 moont:stringComment "Gain (_gleich_ amplitude of frequency response at zero frequency)"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.init.
msl:Modelica.Blocks.Continuous.Filter.init a moont:MParameterComponent;
	 moont:identifier "init";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (no init/steady state/initial state/initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.SteadyState"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.f_cut.
msl:Modelica.Blocks.Continuous.Filter.f_cut a moont:MParameterComponent;
	 moont:identifier "f_cut";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Cut-off frequency"^^xsd:string;
.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.c0.
msl:Modelica.Blocks.Continuous.Filter.c0 a moont:MParameterComponent;
	 moont:identifier "c0";
	 moont:type xsd:Real;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.nr.
msl:Modelica.Blocks.Continuous.Filter.nr a moont:MParameterComponent;
	 moont:identifier "nr";
	 moont:type xsd:Integer;
	 moont:modification "_gleich_iffilterType_gleich__gleich_Modelica.Blocks.Types.FilterType.BandPassorfilterType_gleich__gleich_Modelica.Blocks.Types.FilterType.BandStopthen0elseifanalogFilter_gleich__gleich_Modelica.Blocks.Types.AnalogFilter.CriticalDampingthenorderelsemod(order,2)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.cr.
msl:Modelica.Blocks.Continuous.Filter.cr a moont:MParameterComponent;
	 moont:identifier "cr";
	 moont:type xsd:Real;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.filterType.
msl:Modelica.Blocks.Continuous.Filter.filterType a moont:MParameterComponent;
	 moont:identifier "filterType";
	 moont:type msl:Modelica.Blocks.Types.FilterType;
	 moont:stringComment "Type of filter (LowPass/HighPass/BandPass/BandStop)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.FilterType.LowPass"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.b.
msl:Modelica.Blocks.Continuous.Filter.b a moont:MParameterComponent;
	 moont:identifier "b";
	 moont:type xsd:Real;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.uu.
msl:Modelica.Blocks.Continuous.Filter.uu a moont:MComponent ;
	 moont:identifier "uu";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Filter moont:hasPart msl:Modelica.Blocks.Continuous.Filter.x.
msl:Modelica.Blocks.Continuous.Filter.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "Filter states"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return low pass filter roots as needed for block for given cut-off frequency"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.roots.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.b.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.b a moont:MComponent ;
	 moont:identifier "b";
	 moont:stringComment "Imaginary parts of complex conjugate eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.r.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.r a moont:MComponent ;
	 moont:identifier "r";
	 moont:stringComment "Real eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.c1_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.c1_in a moont:MComponent ;
	 moont:identifier "c1_in";
	 moont:stringComment "Coefficients of s^1 term of base filter if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.c0_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.c0_in a moont:MComponent ;
	 moont:identifier "c0_in";
	 moont:stringComment "Coefficients of s^0 term of base filter if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.a.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.a a moont:MComponent ;
	 moont:identifier "a";
	 moont:stringComment "Real parts of complex conjugate eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.ku.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.ku a moont:MComponent ;
	 moont:identifier "ku";
	 moont:stringComment "Input gain"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.cr_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.cr_in a moont:MComponent ;
	 moont:identifier "cr_in";
	 moont:stringComment "Coefficients of real poles of base filter"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.f_cut.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.f_cut a moont:MComponent ;
	 moont:identifier "f_cut";
	 moont:stringComment "Cut-off frequency"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.lowPass.cr a moont:MComponent ;
	 moont:identifier "cr";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return alpha for band pass"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.a.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.a a moont:MComponent ;
	 moont:identifier "a";
	 moont:stringComment "Coefficient of s^1"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.z_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.z_min a moont:MComponent ;
	 moont:identifier "z_min";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.b.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.b a moont:MComponent ;
	 moont:identifier "b";
	 moont:stringComment "Coefficient of s^0"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 moont:stringComment "Alpha factor to build up band pass"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.w.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.w a moont:MComponent ;
	 moont:identifier "w";
	 moont:stringComment "Bandwidth angular frequency"^^xsd:string;
	 a msl:Modelica.SIunits.AngularVelocity.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.z_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.z_max a moont:MComponent ;
	 moont:identifier "z_max";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.alpha_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.alpha_min a moont:MComponent ;
	 moont:identifier "alpha_min";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.z.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.z a moont:MComponent ;
	 moont:identifier "z";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.alpha_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.alpha_max a moont:MComponent ;
	 moont:identifier "alpha_max";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Transform filter to form with highest power of s equal 1"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "_s^1_ coefficients of polynomials (s^2 + (den2_i,2_/den2_i,1_)*s + (1/den2_i,1_))"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.cr a moont:MComponent ;
	 moont:identifier "cr";
	 moont:stringComment "_s^0_ coefficients of polynomials cr_i_*(s+1/cr_i_)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 moont:stringComment "_s^0_ coefficients of polynomials (s^2 + (den2_i,2_/den2_i,1_)*s + (1/den2_i,1_))"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.den1.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.den1 a moont:MComponent ;
	 moont:identifier "den1";
	 moont:stringComment "_s_ coefficients of polynomials (den1_i_*s + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.den2.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.toHighestPowerOne.den2 a moont:MComponent ;
	 moont:identifier "den2";
	 moont:stringComment "_s^2, s_ coefficients of polynomials (den2_i,1_*s^2 + den2_i,2_*s + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Residue of correction factor computation"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.A2.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.A2 a moont:MComponent ;
	 moont:identifier "A2";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.beta.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.beta a moont:MComponent ;
	 moont:identifier "beta";
	 moont:stringComment "Amplitude of -3db required, i.e., -3db _gleich_ 20*log(beta)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.p.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.p a moont:MComponent ;
	 moont:identifier "p";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.alpha2.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.alpha2 a moont:MComponent ;
	 moont:identifier "alpha2";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.cc1.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.cc1 a moont:MComponent ;
	 moont:identifier "cc1";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.cc2.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.cc2 a moont:MComponent ;
	 moont:identifier "cc2";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "_p_ coefficients of denominator polynomials (c1_i_*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.alpha4.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.alpha4 a moont:MComponent ;
	 moont:identifier "alpha4";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.c2.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.c2 a moont:MComponent ;
	 moont:identifier "c2";
	 moont:stringComment "_p^2, p_ coefficients of denominator polynomials (c2_i,1_*p^2 + c2_i,2_*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.residue.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.normalizationResidue.residue a moont:MComponent ;
	 moont:identifier "residue";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Derivative rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Approximated derivative block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.Derivative moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.Derivative moont:hasPart msl:Modelica.Blocks.Continuous.Derivative.x_start.
msl:Modelica.Blocks.Continuous.Derivative.x_start a moont:MParameterComponent;
	 moont:identifier "x_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value of state"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Derivative moont:hasPart msl:Modelica.Blocks.Continuous.Derivative.T.
msl:Modelica.Blocks.Continuous.Derivative.T a moont:MParameterComponent;
	 moont:identifier "T";
	 moont:type msl:SIunits.Time;
	 moont:stringComment "Time constants (T>0 required; T_gleich_0 is ideal derivative block)"^^xsd:string;
	 moont:modification "(min_gleich_Modelica.Constants.small)_gleich_0.01"^^xsd:string.
msl:Modelica.Blocks.Continuous.Derivative moont:hasPart msl:Modelica.Blocks.Continuous.Derivative.k.
msl:Modelica.Blocks.Continuous.Derivative.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Gains"^^xsd:string;
	 moont:modification "(unit_gleich_\"1\")_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Continuous.Derivative moont:hasPart msl:Modelica.Blocks.Continuous.Derivative.initType.
msl:Modelica.Blocks.Continuous.Derivative.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.Derivative moont:hasPart msl:Modelica.Blocks.Continuous.Derivative.zeroGain.
msl:Modelica.Blocks.Continuous.Derivative.zeroGain a moont:MParameterComponent;
	 moont:identifier "zeroGain";
	 moont:type xsd:Boolean;
	 moont:modification "_gleich_abs(k)<Modelica.Constants.eps"^^xsd:string.
msl:Modelica.Blocks.Continuous.Derivative moont:hasPart msl:Modelica.Blocks.Continuous.Derivative.y_start.
msl:Modelica.Blocks.Continuous.Derivative.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value of output (_gleich_ state)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Derivative moont:hasPart msl:Modelica.Blocks.Continuous.Derivative.x.
msl:Modelica.Blocks.Continuous.Derivative.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "State of block"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Derivative.x.start moont:modification "x_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.PID rdfs:subClassOf moont:MBlock;
	 moont:stringComment "PID-controller in additive description form"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.PID moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.Nd.
msl:Modelica.Blocks.Continuous.PID.Nd a moont:MParameterComponent;
	 moont:identifier "Nd";
	 moont:type xsd:Real;
	 moont:stringComment "The higher Nd, the more ideal the derivative block"^^xsd:string;
	 moont:modification "(min_gleich_Modelica.Constants.small)_gleich_10"^^xsd:string.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.initType.
msl:Modelica.Blocks.Continuous.PID.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.InitPID;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.InitPID.DoNotUse_InitialIntegratorState"^^xsd:string.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.xi_start.
msl:Modelica.Blocks.Continuous.PID.xi_start a moont:MParameterComponent;
	 moont:identifier "xi_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value for integrator output (_gleich_ integrator state)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.y_start.
msl:Modelica.Blocks.Continuous.PID.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value of output"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.Td.
msl:Modelica.Blocks.Continuous.PID.Td a moont:MParameterComponent;
	 moont:identifier "Td";
	 moont:type msl:SIunits.Time;
	 moont:stringComment "Time Constant of Derivative block"^^xsd:string;
	 moont:modification "(min_gleich_0,start_gleich_0.1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.xd_start.
msl:Modelica.Blocks.Continuous.PID.xd_start a moont:MParameterComponent;
	 moont:identifier "xd_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value for state of derivative block"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.Ti.
msl:Modelica.Blocks.Continuous.PID.Ti a moont:MParameterComponent;
	 moont:identifier "Ti";
	 moont:type msl:SIunits.Time;
	 moont:stringComment "Time Constant of Integrator"^^xsd:string;
	 moont:modification "(min_gleich_Modelica.Constants.small,start_gleich_0.5)"^^xsd:string.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.k.
msl:Modelica.Blocks.Continuous.PID.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Gain"^^xsd:string;
	 moont:modification "(unit_gleich_\"1\")_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.P.
msl:Modelica.Blocks.Continuous.PID.P a moont:MComponent ;
	 moont:identifier "P";
	 moont:stringComment "Proportional part of PID controller"^^xsd:string;
	 a msl:Modelica.Blocks.Math.Gain.
msl:Modelica.Blocks.Continuous.PID.P.k moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.I.
msl:Modelica.Blocks.Continuous.PID.I a moont:MComponent ;
	 moont:identifier "I";
	 moont:stringComment "Integral part of PID controller"^^xsd:string;
	 a msl:Modelica.Blocks.Continuous.Integrator.
msl:Modelica.Blocks.Continuous.PID.I.k moont:modification "unitTime/Ti"^^xsd:String.
msl:Modelica.Blocks.Continuous.PID.I.y_start moont:modification "xi_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.PID.I moont:modification "initType_gleich_ifinitType_gleich__gleich_InitPID.SteadyStatethenInit.SteadyStateelseifinitType_gleich__gleich_InitPID.InitialStateorinitType_gleich__gleich_InitPID.DoNotUse_InitialIntegratorStatethenInit.InitialStateelseInit.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.unitTime.
msl:Modelica.Blocks.Continuous.PID.unitTime a moont:MComponent ;
	 moont:identifier "unitTime";
	 a msl:SI.Time.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.Gain.
msl:Modelica.Blocks.Continuous.PID.Gain a moont:MComponent ;
	 moont:identifier "Gain";
	 moont:stringComment "Gain of PID controller"^^xsd:string;
	 a msl:Modelica.Blocks.Math.Gain.
msl:Modelica.Blocks.Continuous.PID.Gain.k moont:modification "k"^^xsd:String.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.Add.
msl:Modelica.Blocks.Continuous.PID.Add a moont:MComponent ;
	 moont:identifier "Add";
	 a msl:Modelica.Blocks.Math.Add3.
msl:Modelica.Blocks.Continuous.PID moont:hasPart msl:Modelica.Blocks.Continuous.PID.D.
msl:Modelica.Blocks.Continuous.PID.D a moont:MComponent ;
	 moont:identifier "D";
	 moont:stringComment "Derivative part of PID controller"^^xsd:string;
	 a msl:Modelica.Blocks.Continuous.Derivative.
msl:Modelica.Blocks.Continuous.PID.D.k moont:modification "Td/unitTime"^^xsd:String.
msl:Modelica.Blocks.Continuous.PID.D.T moont:modification "max(_Td/Nd,100*Modelica.Constants.eps_)"^^xsd:String.
msl:Modelica.Blocks.Continuous.PID.D.x_start moont:modification "xd_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.PID.D moont:modification "initType_gleich_ifinitType_gleich__gleich_InitPID.SteadyStateorinitType_gleich__gleich_InitPID.InitialOutputthenInit.SteadyStateelseifinitType_gleich__gleich_InitPID.InitialStatethenInit.InitialStateelseInit.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.PID.u moont:connectedTo msl:Modelica.Blocks.Continuous.PID.P.u.
msl:Modelica.Blocks.Continuous.PID.P moont:hasPart msl:Modelica.Blocks.Continuous.PID.P.u.
msl:Modelica.Blocks.Continuous.PID.P.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.P.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.PID.u moont:connectedTo msl:Modelica.Blocks.Continuous.PID.I.u.
msl:Modelica.Blocks.Continuous.PID.I moont:hasPart msl:Modelica.Blocks.Continuous.PID.I.u.
msl:Modelica.Blocks.Continuous.PID.I.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.I.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.PID.u moont:connectedTo msl:Modelica.Blocks.Continuous.PID.D.u.
msl:Modelica.Blocks.Continuous.PID.D moont:hasPart msl:Modelica.Blocks.Continuous.PID.D.u.
msl:Modelica.Blocks.Continuous.PID.D.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.D.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.PID.P moont:hasPart msl:Modelica.Blocks.Continuous.PID.P.y.
msl:Modelica.Blocks.Continuous.PID.P.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.P.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.PID.P.y moont:connectedTo msl:Modelica.Blocks.Continuous.PID.Add.u1.
msl:Modelica.Blocks.Continuous.PID.Add moont:hasPart msl:Modelica.Blocks.Continuous.PID.Add.u1.
msl:Modelica.Blocks.Continuous.PID.Add.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.Add.u1 moont:identifier "u1".
msl:Modelica.Blocks.Continuous.PID.I moont:hasPart msl:Modelica.Blocks.Continuous.PID.I.y.
msl:Modelica.Blocks.Continuous.PID.I.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.I.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.PID.I.y moont:connectedTo msl:Modelica.Blocks.Continuous.PID.Add.u2.
msl:Modelica.Blocks.Continuous.PID.Add moont:hasPart msl:Modelica.Blocks.Continuous.PID.Add.u2.
msl:Modelica.Blocks.Continuous.PID.Add.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.Add.u2 moont:identifier "u2".
msl:Modelica.Blocks.Continuous.PID.D moont:hasPart msl:Modelica.Blocks.Continuous.PID.D.y.
msl:Modelica.Blocks.Continuous.PID.D.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.D.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.PID.D.y moont:connectedTo msl:Modelica.Blocks.Continuous.PID.Add.u3.
msl:Modelica.Blocks.Continuous.PID.Add moont:hasPart msl:Modelica.Blocks.Continuous.PID.Add.u3.
msl:Modelica.Blocks.Continuous.PID.Add.u3 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.Add.u3 moont:identifier "u3".
msl:Modelica.Blocks.Continuous.PID.Add moont:hasPart msl:Modelica.Blocks.Continuous.PID.Add.y.
msl:Modelica.Blocks.Continuous.PID.Add.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.Add.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.PID.Add.y moont:connectedTo msl:Modelica.Blocks.Continuous.PID.Gain.u.
msl:Modelica.Blocks.Continuous.PID.Gain moont:hasPart msl:Modelica.Blocks.Continuous.PID.Gain.u.
msl:Modelica.Blocks.Continuous.PID.Gain.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.Gain.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.PID.Gain moont:hasPart msl:Modelica.Blocks.Continuous.PID.Gain.y.
msl:Modelica.Blocks.Continuous.PID.Gain.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.PID.Gain.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.PID.Gain.y moont:connectedTo msl:Modelica.Blocks.Continuous.PID.y.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Filter coefficients"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients moont:extends msl:Modelica.Icons.InternalPackage.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return band stop filter coefficients at given cut-off frequency"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.f_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.f_min a moont:MComponent ;
	 moont:identifier "f_min";
	 moont:stringComment "Band of band stop filter is f_min (A_gleich_-3db) .. f_max (A_gleich_-3db)"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.w_cut.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.w_cut a moont:MComponent ;
	 moont:identifier "w_cut";
	 moont:stringComment "Cut-off angular frequency"^^xsd:string;
	 a msl:Modelica.SIunits.AngularVelocity.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.ww.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.ww a moont:MComponent ;
	 moont:identifier "ww";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.j.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.j a moont:MComponent ;
	 moont:identifier "j";
	 a msl:Integer.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.w_band.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.w_band a moont:MComponent ;
	 moont:identifier "w_band";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c a moont:MComponent ;
	 moont:identifier "c";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c0_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c0_in a moont:MComponent ;
	 moont:identifier "c0_in";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.cr a moont:MComponent ;
	 moont:identifier "cr";
	 moont:stringComment "Coefficient of real pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.w_cut2.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.w_cut2 a moont:MComponent ;
	 moont:identifier "w_cut2";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.cr_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.cr_in a moont:MComponent ;
	 moont:identifier "cr_in";
	 moont:stringComment "Coefficients of real poles"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.f_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.f_max a moont:MComponent ;
	 moont:identifier "f_max";
	 moont:stringComment "Upper band frequency"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c1_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c1_in a moont:MComponent ;
	 moont:identifier "c1_in";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.f0.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandStop.f0 a moont:MComponent ;
	 moont:identifier "f0";
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return base filter coefficients of Bessel filter (_gleich_ low pass filter with w_cut _gleich_ 1 rad/s)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.base.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.normalized.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.normalized a moont:MComponent ;
	 moont:identifier "normalized";
	 moont:stringComment "_gleich_ true, if amplitude at f_cut _gleich_ -3db, otherwise unmodified filter"^^xsd:string;
	 a msl:Boolean.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.den1.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.den1 a moont:MComponent ;
	 moont:identifier "den1";
	 moont:stringComment "_p_ coefficients of denominator first order polynomials (a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.order.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.order a moont:MComponent ;
	 moont:identifier "order";
	 moont:stringComment "Order of filter"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.order.min moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.cr a moont:MComponent ;
	 moont:identifier "cr";
	 moont:stringComment "Coefficient of real pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.den2.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.den2 a moont:MComponent ;
	 moont:identifier "den2";
	 moont:stringComment "_p^2, p_ coefficients of denominator second order polynomials (b*p^2 + a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 moont:stringComment "Frequency correction factor"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.alpha2.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Bessel.alpha2 a moont:MComponent ;
	 moont:identifier "alpha2";
	 moont:stringComment "_gleich_ alpha*alpha"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Find interval for the root"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.c2.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.c2 a moont:MComponent ;
	 moont:identifier "c2";
	 moont:stringComment "_p^2, p_ coefficients of denominator polynomials (b*p^2 + a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.residue.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.residue a moont:MComponent ;
	 moont:identifier "residue";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.alpha_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.alpha_min a moont:MComponent ;
	 moont:identifier "alpha_min";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "_p_ coefficients of denominator polynomials (a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.alpha_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.alpha_max a moont:MComponent ;
	 moont:identifier "alpha_max";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.findInterval.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 a msl:Real.
msl:Modelica.Blocks.Continuous rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of continuous control blocks with internal states"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.Continuous moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.Continuous.LowpassButterworth rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the input signal filtered with a low pass Butterworth filter of any order"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.m.
msl:Modelica.Blocks.Continuous.LowpassButterworth.m a moont:MParameterComponent;
	 moont:identifier "m";
	 moont:type xsd:Integer;
	 moont:modification "_gleich_integer(n/2)"^^xsd:string.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.n.
msl:Modelica.Blocks.Continuous.LowpassButterworth.n a moont:MParameterComponent;
	 moont:identifier "n";
	 moont:type xsd:Integer;
	 moont:stringComment "Order of filter"^^xsd:string;
	 moont:modification "(min_gleich_1)_gleich_2"^^xsd:string.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.x1_start.
msl:Modelica.Blocks.Continuous.LowpassButterworth.x1_start a moont:MParameterComponent;
	 moont:identifier "x1_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess values of states 1 (der(x1)_gleich_x2)"^^xsd:string;
	 moont:modification "_gleich_zeros(m)"^^xsd:string.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.w.
msl:Modelica.Blocks.Continuous.LowpassButterworth.w a moont:MParameterComponent;
	 moont:identifier "w";
	 moont:type xsd:Real;
	 moont:modification "_gleich_2*pi*f"^^xsd:string.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.evenOrder.
msl:Modelica.Blocks.Continuous.LowpassButterworth.evenOrder a moont:MParameterComponent;
	 moont:identifier "evenOrder";
	 moont:type xsd:Boolean;
	 moont:modification "_gleich_2*m_gleich__gleich_n"^^xsd:string.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.y_start.
msl:Modelica.Blocks.Continuous.LowpassButterworth.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value of output (states are initialized in steady state if possible)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.xr_start.
msl:Modelica.Blocks.Continuous.LowpassButterworth.xr_start a moont:MParameterComponent;
	 moont:identifier "xr_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value of real pole for uneven order otherwise dummy"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.initType.
msl:Modelica.Blocks.Continuous.LowpassButterworth.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.x2_start.
msl:Modelica.Blocks.Continuous.LowpassButterworth.x2_start a moont:MParameterComponent;
	 moont:identifier "x2_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess values of states 2"^^xsd:string;
	 moont:modification "_gleich_zeros(m)"^^xsd:string.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.f.
msl:Modelica.Blocks.Continuous.LowpassButterworth.f a moont:MParameterComponent;
	 moont:identifier "f";
	 moont:type msl:SI.Frequency;
	 moont:stringComment "Cut-off frequency"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.x1.
msl:Modelica.Blocks.Continuous.LowpassButterworth.x1 a moont:MComponent ;
	 moont:identifier "x1";
	 moont:stringComment "states 1 of second order filters (der(x1) _gleich_ x2)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth.x1.start moont:modification "x1_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.w0.
msl:Modelica.Blocks.Continuous.LowpassButterworth.w0 a moont:MComponent ;
	 moont:identifier "w0";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.x2.
msl:Modelica.Blocks.Continuous.LowpassButterworth.x2 a moont:MComponent ;
	 moont:identifier "x2";
	 moont:stringComment "states 2 of second order filters"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth.x2.start moont:modification "x2_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.k2.
msl:Modelica.Blocks.Continuous.LowpassButterworth.k2 a moont:MComponent ;
	 moont:identifier "k2";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.poleimag.
msl:Modelica.Blocks.Continuous.LowpassButterworth.poleimag a moont:MComponent ;
	 moont:identifier "poleimag";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.xr.
msl:Modelica.Blocks.Continuous.LowpassButterworth.xr a moont:MComponent ;
	 moont:identifier "xr";
	 moont:stringComment "state of real pole for uneven order otherwise dummy"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth.xr.start moont:modification "xr_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.D.
msl:Modelica.Blocks.Continuous.LowpassButterworth.D a moont:MComponent ;
	 moont:identifier "D";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.polereal.
msl:Modelica.Blocks.Continuous.LowpassButterworth.polereal a moont:MComponent ;
	 moont:identifier "polereal";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.realpol.
msl:Modelica.Blocks.Continuous.LowpassButterworth.realpol a moont:MComponent ;
	 moont:identifier "realpol";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.z.
msl:Modelica.Blocks.Continuous.LowpassButterworth.z a moont:MComponent ;
	 moont:identifier "z";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.k1.
msl:Modelica.Blocks.Continuous.LowpassButterworth.k1 a moont:MComponent ;
	 moont:identifier "k1";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LowpassButterworth moont:hasPart msl:Modelica.Blocks.Continuous.LowpassButterworth.T.
msl:Modelica.Blocks.Continuous.LowpassButterworth.T a moont:MComponent ;
	 moont:identifier "T";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return band stop filter roots as needed for block for given cut-off frequency"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.roots.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.k1.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.k1 a moont:MComponent ;
	 moont:identifier "k1";
	 moont:stringComment "Gains of y _gleich_ k1*x1 + k2*x"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.b.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.b a moont:MComponent ;
	 moont:identifier "b";
	 moont:stringComment "Imaginary parts of complex conjugate eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.c1_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.c1_in a moont:MComponent ;
	 moont:identifier "c1_in";
	 moont:stringComment "Coefficients of s^1 term of base filter if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.a.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.a a moont:MComponent ;
	 moont:identifier "a";
	 moont:stringComment "Real parts of complex conjugate eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.c0_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.c0_in a moont:MComponent ;
	 moont:identifier "c0_in";
	 moont:stringComment "Coefficients of s^0 term of base filter if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.k2.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.k2 a moont:MComponent ;
	 moont:identifier "k2";
	 moont:stringComment "Gains of y _gleich_ k1*x1 + k2*x"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.cr a moont:MComponent ;
	 moont:identifier "cr";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.cn.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.cn a moont:MComponent ;
	 moont:identifier "cn";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.bb.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.bb a moont:MComponent ;
	 moont:identifier "bb";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.cr_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.cr_in a moont:MComponent ;
	 moont:identifier "cr_in";
	 moont:stringComment "Coefficients of real poles of base filter"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.f_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.f_max a moont:MComponent ;
	 moont:identifier "f_max";
	 moont:stringComment "Upper band frequency"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.ku.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.ku a moont:MComponent ;
	 moont:identifier "ku";
	 moont:stringComment "Gains of input terms"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.f_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandStop.f_min a moont:MComponent ;
	 moont:identifier "f_min";
	 moont:stringComment "Band of band stop filter is f_min (A_gleich_-3db) .. f_max (A_gleich_-3db)"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return high pass filter roots as needed for block for given cut-off frequency"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.roots.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.ku.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.ku a moont:MComponent ;
	 moont:identifier "ku";
	 moont:stringComment "Gains of input terms"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.ba2.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.ba2 a moont:MComponent ;
	 moont:identifier "ba2";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.c0_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.c0_in a moont:MComponent ;
	 moont:identifier "c0_in";
	 moont:stringComment "Coefficients of s^0 term of base filter if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.k1.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.k1 a moont:MComponent ;
	 moont:identifier "k1";
	 moont:stringComment "Gains of y _gleich_ k1*x1 + k2*x + u"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.r.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.r a moont:MComponent ;
	 moont:identifier "r";
	 moont:stringComment "Real eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.c1_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.c1_in a moont:MComponent ;
	 moont:identifier "c1_in";
	 moont:stringComment "Coefficients of s^1 term of base filter if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.cr a moont:MComponent ;
	 moont:identifier "cr";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.b.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.b a moont:MComponent ;
	 moont:identifier "b";
	 moont:stringComment "Imaginary parts of complex conjugate eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.cr_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.cr_in a moont:MComponent ;
	 moont:identifier "cr_in";
	 moont:stringComment "Coefficients of real poles of base filter"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.a.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.a a moont:MComponent ;
	 moont:identifier "a";
	 moont:stringComment "Real parts of complex conjugate eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.k2.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.k2 a moont:MComponent ;
	 moont:identifier "k2";
	 moont:stringComment "Gains of y _gleich_ k1*x1 + k2*x + u"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.f_cut.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.highPass.f_cut a moont:MComponent ;
	 moont:identifier "f_cut";
	 moont:stringComment "Cut-off frequency"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Solve f(u) _gleich_ 0; f(u_min) and f(u_max) must have different signs"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.u_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.u_max a moont:MComponent ;
	 moont:identifier "u_max";
	 moont:stringComment "Upper bound of search interval"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.u_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.u_min a moont:MComponent ;
	 moont:identifier "u_min";
	 moont:stringComment "Lower bound of search interval"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.tolerance.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.tolerance a moont:MComponent ;
	 moont:identifier "tolerance";
	 moont:stringComment "Relative tolerance of solution u"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.tol.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.tol a moont:MComponent ;
	 moont:identifier "tol";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.s.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.s a moont:MComponent ;
	 moont:identifier "s";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.fc.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.fc a moont:MComponent ;
	 moont:identifier "fc";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.u.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Value of independent variable so that f(u) _gleich_ 0"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.d.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.d a moont:MComponent ;
	 moont:identifier "d";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.e.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.e a moont:MComponent ;
	 moont:identifier "e";
	 moont:stringComment "b - a"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.eps.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.eps a moont:MComponent ;
	 moont:identifier "eps";
	 moont:stringComment "machine epsilon"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.c.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.c a moont:MComponent ;
	 moont:identifier "c";
	 moont:stringComment "Intermediate point a <_gleich_ c <_gleich_ b"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.found.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.found a moont:MComponent ;
	 moont:identifier "found";
	 a msl:Boolean.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.c2.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.c2 a moont:MComponent ;
	 moont:identifier "c2";
	 moont:stringComment "_p^2, p_ coefficients of denominator polynomials (c2_i,1_*p^2 + c2_i,2_*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.a.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.a a moont:MComponent ;
	 moont:identifier "a";
	 moont:stringComment "Current best minimum interval value"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.m.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.m a moont:MComponent ;
	 moont:identifier "m";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.b.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.b a moont:MComponent ;
	 moont:identifier "b";
	 moont:stringComment "Current best maximum interval value"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "_p_ coefficients of denominator polynomials (c1_i_*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.q.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.q a moont:MComponent ;
	 moont:identifier "q";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.fa.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.fa a moont:MComponent ;
	 moont:identifier "fa";
	 moont:stringComment "_gleich_ f(a)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.fb.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.fb a moont:MComponent ;
	 moont:identifier "fb";
	 moont:stringComment "_gleich_ f(b)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.p.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.p a moont:MComponent ;
	 moont:identifier "p";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.r.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.solveOneNonlinearEquation.r a moont:MComponent ;
	 moont:identifier "r";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Compute correction factor of low pass filter such that amplitude at cut-off frequency is -3db (_gleich_10^(-3/20) _gleich_ 0.70794...)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.alpha_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.alpha_min a moont:MComponent ;
	 moont:identifier "alpha_min";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 moont:stringComment "Correction factor (replace p by alpha*p)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "_p_ coefficients of denominator polynomials (c1_i}*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.c2.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.c2 a moont:MComponent ;
	 moont:identifier "c2";
	 moont:stringComment "_p^2, p_ coefficients of denominator polynomials (c2_i,1_*p^2 + c2_i,2_*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.alpha_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.normalizationFactor.alpha_max a moont:MComponent ;
	 moont:identifier "alpha_max";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.PI rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Proportional-Integral controller"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.PI moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.PI moont:hasPart msl:Modelica.Blocks.Continuous.PI.k.
msl:Modelica.Blocks.Continuous.PI.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Gain"^^xsd:string;
	 moont:modification "(unit_gleich_\"1\")_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Continuous.PI moont:hasPart msl:Modelica.Blocks.Continuous.PI.initType.
msl:Modelica.Blocks.Continuous.PI.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.PI moont:hasPart msl:Modelica.Blocks.Continuous.PI.T.
msl:Modelica.Blocks.Continuous.PI.T a moont:MParameterComponent;
	 moont:identifier "T";
	 moont:type msl:SIunits.Time;
	 moont:stringComment "Time Constant (T>0 required)"^^xsd:string;
	 moont:modification "(start_gleich_1,min_gleich_Modelica.Constants.small)"^^xsd:string.
msl:Modelica.Blocks.Continuous.PI moont:hasPart msl:Modelica.Blocks.Continuous.PI.y_start.
msl:Modelica.Blocks.Continuous.PI.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value of output"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.PI moont:hasPart msl:Modelica.Blocks.Continuous.PI.x_start.
msl:Modelica.Blocks.Continuous.PI.x_start a moont:MParameterComponent;
	 moont:identifier "x_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value of state"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.PI moont:hasPart msl:Modelica.Blocks.Continuous.PI.x.
msl:Modelica.Blocks.Continuous.PI.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "State of block"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.PI.x.start moont:modification "x_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.Internal.Filter rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Internal utility functions for filters that should not be directly used"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.
msl:Modelica.Blocks.Continuous.Internal.Filter moont:extends msl:Modelica.Icons.InternalPackage.
msl:Modelica.Blocks.Continuous.Integrator rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the integral of the input signal with optional reset"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.Integrator moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.Integrator moont:hasPart msl:Modelica.Blocks.Continuous.Integrator.k.
msl:Modelica.Blocks.Continuous.Integrator.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Integrator gain"^^xsd:string;
	 moont:modification "(unit_gleich_\"1\")_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Continuous.Integrator moont:hasPart msl:Modelica.Blocks.Continuous.Integrator.initType.
msl:Modelica.Blocks.Continuous.Integrator.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3,4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.InitialState"^^xsd:string.
msl:Modelica.Blocks.Continuous.Integrator moont:hasPart msl:Modelica.Blocks.Continuous.Integrator.use_set.
msl:Modelica.Blocks.Continuous.Integrator.use_set a moont:MParameterComponent;
	 moont:identifier "use_set";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_true, if set port enabled and used as reinitialization value when reset"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Continuous.Integrator moont:hasPart msl:Modelica.Blocks.Continuous.Integrator.use_reset.
msl:Modelica.Blocks.Continuous.Integrator.use_reset a moont:MParameterComponent;
	 moont:identifier "use_reset";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_true, if reset port enabled"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Continuous.Integrator moont:hasPart msl:Modelica.Blocks.Continuous.Integrator.y_start.
msl:Modelica.Blocks.Continuous.Integrator.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value of output (_gleich_ state)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Integrator moont:hasPart msl:Modelica.Blocks.Continuous.Integrator.local_set.
msl:Modelica.Blocks.Continuous.Integrator.local_set a moont:MComponent ;
	 moont:identifier "local_set";
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Continuous.Integrator moont:hasPart msl:Modelica.Blocks.Continuous.Integrator.reset.
msl:Modelica.Blocks.Continuous.Integrator.reset a moont:MComponent ;
	 moont:identifier "reset";
	 moont:stringComment "Optional connector of reset signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Continuous.Integrator moont:hasPart msl:Modelica.Blocks.Continuous.Integrator.local_reset.
msl:Modelica.Blocks.Continuous.Integrator.local_reset a moont:MComponent ;
	 moont:identifier "local_reset";
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Continuous.Integrator moont:hasPart msl:Modelica.Blocks.Continuous.Integrator.set.
msl:Modelica.Blocks.Continuous.Integrator.set a moont:MComponent ;
	 moont:identifier "set";
	 moont:stringComment "Optional connector of set signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Continuous.Integrator.reset moont:connectedTo msl:Modelica.Blocks.Continuous.Integrator.local_reset.
msl:Modelica.Blocks.Continuous.Integrator.set moont:connectedTo msl:Modelica.Blocks.Continuous.Integrator.local_set.
msl:Modelica.Blocks.Continuous.LimIntegrator rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Integrator with limited value of the output and optional reset"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.outMin.
msl:Modelica.Blocks.Continuous.LimIntegrator.outMin a moont:MParameterComponent;
	 moont:identifier "outMin";
	 moont:type xsd:Real;
	 moont:stringComment "Lower limit of output"^^xsd:string;
	 moont:modification "_gleich_-outMax"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.outMax.
msl:Modelica.Blocks.Continuous.LimIntegrator.outMax a moont:MParameterComponent;
	 moont:identifier "outMax";
	 moont:type xsd:Real;
	 moont:stringComment "Upper limit of output"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.initType.
msl:Modelica.Blocks.Continuous.LimIntegrator.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3/4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.InitialState"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.use_reset.
msl:Modelica.Blocks.Continuous.LimIntegrator.use_reset a moont:MParameterComponent;
	 moont:identifier "use_reset";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_true, if reset port enabled"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.use_set.
msl:Modelica.Blocks.Continuous.LimIntegrator.use_set a moont:MParameterComponent;
	 moont:identifier "use_set";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_true, if set port enabled and used as reinitialization value when reset"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.k.
msl:Modelica.Blocks.Continuous.LimIntegrator.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Integrator gain"^^xsd:string;
	 moont:modification "(unit_gleich_\"1\")_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.limitsAtInit.
msl:Modelica.Blocks.Continuous.LimIntegrator.limitsAtInit a moont:MParameterComponent;
	 moont:identifier "limitsAtInit";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ false, if limits are ignored during initialization (i.e., der(y)_gleich_k*u)"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.strict.
msl:Modelica.Blocks.Continuous.LimIntegrator.strict a moont:MParameterComponent;
	 moont:identifier "strict";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if strict limits with noEvent(..)"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.y_start.
msl:Modelica.Blocks.Continuous.LimIntegrator.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value of output (must be in the limits outMin .. outMax)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.local_set.
msl:Modelica.Blocks.Continuous.LimIntegrator.local_set a moont:MComponent ;
	 moont:identifier "local_set";
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.reset.
msl:Modelica.Blocks.Continuous.LimIntegrator.reset a moont:MComponent ;
	 moont:identifier "reset";
	 moont:stringComment "Optional connector of reset signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.local_reset.
msl:Modelica.Blocks.Continuous.LimIntegrator.local_reset a moont:MComponent ;
	 moont:identifier "local_reset";
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Continuous.LimIntegrator moont:hasPart msl:Modelica.Blocks.Continuous.LimIntegrator.set.
msl:Modelica.Blocks.Continuous.LimIntegrator.set a moont:MComponent ;
	 moont:identifier "set";
	 moont:stringComment "Optional connector of set signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Continuous.LimIntegrator.reset moont:connectedTo msl:Modelica.Blocks.Continuous.LimIntegrator.local_reset.
msl:Modelica.Blocks.Continuous.LimIntegrator.set moont:connectedTo msl:Modelica.Blocks.Continuous.LimIntegrator.local_set.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return band pass filter roots as needed for block for given cut-off frequency"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.roots.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.k1.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.k1 a moont:MComponent ;
	 moont:identifier "k1";
	 moont:stringComment "Gains of y _gleich_ k1*x1 + k2*x"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.cr_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.cr_in a moont:MComponent ;
	 moont:identifier "cr_in";
	 moont:stringComment "Coefficients of real poles of base filter"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.f_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.f_max a moont:MComponent ;
	 moont:identifier "f_max";
	 moont:stringComment "Upper band frequency"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.cr a moont:MComponent ;
	 moont:identifier "cr";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.cn.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.cn a moont:MComponent ;
	 moont:identifier "cn";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.ku.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.ku a moont:MComponent ;
	 moont:identifier "ku";
	 moont:stringComment "Gains of input terms"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.b.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.b a moont:MComponent ;
	 moont:identifier "b";
	 moont:stringComment "Imaginary parts of complex conjugate eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.bb.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.bb a moont:MComponent ;
	 moont:identifier "bb";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.c0_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.c0_in a moont:MComponent ;
	 moont:identifier "c0_in";
	 moont:stringComment "Coefficients of s^0 term of base filter if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.c1_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.c1_in a moont:MComponent ;
	 moont:identifier "c1_in";
	 moont:stringComment "Coefficients of s^1 term of base filter if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.a.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.a a moont:MComponent ;
	 moont:identifier "a";
	 moont:stringComment "Real parts of complex conjugate eigenvalues"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.f_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.f_min a moont:MComponent ;
	 moont:identifier "f_min";
	 moont:stringComment "Band of band pass filter is f_min (A_gleich_-3db) .. f_max (A_gleich_-3db)"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.k2.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.k2 a moont:MComponent ;
	 moont:identifier "k2";
	 moont:stringComment "Gains of y _gleich_ k1*x1 + k2*x"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots.bandPass.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Solve f(u) _gleich_ 0; f(u_min) and f(u_max) must have different signs"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.c.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.c a moont:MComponent ;
	 moont:identifier "c";
	 moont:stringComment "Intermediate point a <_gleich_ c <_gleich_ b"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.m.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.m a moont:MComponent ;
	 moont:identifier "m";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.r.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.r a moont:MComponent ;
	 moont:identifier "r";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.u.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Value of independent variable so that f(u) _gleich_ 0"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.d.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.d a moont:MComponent ;
	 moont:identifier "d";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.found.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.found a moont:MComponent ;
	 moont:identifier "found";
	 a msl:Boolean.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.b.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.b a moont:MComponent ;
	 moont:identifier "b";
	 moont:stringComment "Current best maximum interval value"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.fa.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.fa a moont:MComponent ;
	 moont:identifier "fa";
	 moont:stringComment "_gleich_ f(a)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.p.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.p a moont:MComponent ;
	 moont:identifier "p";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.fb.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.fb a moont:MComponent ;
	 moont:identifier "fb";
	 moont:stringComment "_gleich_ f(b)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.u_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.u_max a moont:MComponent ;
	 moont:identifier "u_max";
	 moont:stringComment "Upper bound of search interval"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.u_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.u_min a moont:MComponent ;
	 moont:identifier "u_min";
	 moont:stringComment "Lower bound of search interval"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.tolerance.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.tolerance a moont:MComponent ;
	 moont:identifier "tolerance";
	 moont:stringComment "Relative tolerance of solution u"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.fc.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.fc a moont:MComponent ;
	 moont:identifier "fc";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.bb.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.bb a moont:MComponent ;
	 moont:identifier "bb";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.ww.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.ww a moont:MComponent ;
	 moont:identifier "ww";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.tol.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.tol a moont:MComponent ;
	 moont:identifier "tol";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.a.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.a a moont:MComponent ;
	 moont:identifier "a";
	 moont:stringComment "Current best minimum interval value"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.q.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.q a moont:MComponent ;
	 moont:identifier "q";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.eps.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.eps a moont:MComponent ;
	 moont:identifier "eps";
	 moont:stringComment "machine epsilon"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.s.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.s a moont:MComponent ;
	 moont:identifier "s";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.e.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.e a moont:MComponent ;
	 moont:identifier "e";
	 moont:stringComment "b - a"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.aa.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.solveOneNonlinearEquation.aa a moont:MComponent ;
	 moont:identifier "aa";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Utility functions for filter computations"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities moont:extends msl:Modelica.Icons.InternalPackage.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return base filter coefficients of CriticalDamping filter (_gleich_ low pass filter with w_cut _gleich_ 1 rad/s)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.base.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.order.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.order a moont:MComponent ;
	 moont:identifier "order";
	 moont:stringComment "Order of filter"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.order.min moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.den1.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.den1 a moont:MComponent ;
	 moont:identifier "den1";
	 moont:stringComment "_p_ coefficients of denominator first order polynomials (a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.alpha2.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.alpha2 a moont:MComponent ;
	 moont:identifier "alpha2";
	 moont:stringComment "_gleich_ alpha*alpha"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.cr a moont:MComponent ;
	 moont:identifier "cr";
	 moont:stringComment "Coefficients of real poles"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.den2.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.den2 a moont:MComponent ;
	 moont:identifier "den2";
	 moont:stringComment "_p^2, p_ coefficients of denominator second order polynomials (b*p^2 + a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 moont:stringComment "Frequency correction factor"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.normalized.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.CriticalDamping.normalized a moont:MComponent ;
	 moont:identifier "normalized";
	 moont:stringComment "_gleich_ true, if amplitude at f_cut _gleich_ -3db, otherwise unmodified filter"^^xsd:string;
	 a msl:Boolean.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return base filter coefficients of Butterworth filter (_gleich_ low pass filter with w_cut _gleich_ 1 rad/s)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.base.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 moont:stringComment "Frequency correction factor"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.normalized.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.normalized a moont:MComponent ;
	 moont:identifier "normalized";
	 moont:stringComment "_gleich_ true, if amplitude at f_cut _gleich_ -3db, otherwise unmodified filter"^^xsd:string;
	 a msl:Boolean.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.order.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.order a moont:MComponent ;
	 moont:identifier "order";
	 moont:stringComment "Order of filter"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.order.min moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.den2.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.den2 a moont:MComponent ;
	 moont:identifier "den2";
	 moont:stringComment "_p^2, p_ coefficients of denominator second order polynomials (b*p^2 + a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.den1.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.den1 a moont:MComponent ;
	 moont:identifier "den1";
	 moont:stringComment "_p_ coefficients of denominator first order polynomials (a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.cr a moont:MComponent ;
	 moont:identifier "cr";
	 moont:stringComment "Coefficient of real pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.alpha2.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.Butterworth.alpha2 a moont:MComponent ;
	 moont:identifier "alpha2";
	 moont:stringComment "_gleich_ alpha*alpha"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Internal utility functions and blocks that should not be directly utilized by the user"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.Internal moont:extends msl:Modelica.Icons.InternalPackage.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return band pass filter coefficients at given cut-off frequency"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.f_min.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.f_min a moont:MComponent ;
	 moont:identifier "f_min";
	 moont:stringComment "Band of band pass filter is f_min (A_gleich_-3db) .. f_max (A_gleich_-3db)"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.f0.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.f0 a moont:MComponent ;
	 moont:identifier "f0";
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.w_cut.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.w_cut a moont:MComponent ;
	 moont:identifier "w_cut";
	 moont:stringComment "Cut-off angular frequency"^^xsd:string;
	 a msl:Modelica.SIunits.AngularVelocity.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.w_band.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.w_band a moont:MComponent ;
	 moont:identifier "w_band";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c0_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c0_in a moont:MComponent ;
	 moont:identifier "c0_in";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c1_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c1_in a moont:MComponent ;
	 moont:identifier "c1_in";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.f_max.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.f_max a moont:MComponent ;
	 moont:identifier "f_max";
	 moont:stringComment "Upper band frequency"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.j.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.j a moont:MComponent ;
	 moont:identifier "j";
	 a msl:Integer.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.cr_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.cr_in a moont:MComponent ;
	 moont:identifier "cr_in";
	 moont:stringComment "Coefficients of real poles"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.w_cut2.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.w_cut2 a moont:MComponent ;
	 moont:identifier "w_cut2";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.cn.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.cn a moont:MComponent ;
	 moont:identifier "cn";
	 moont:stringComment "Numerator coefficient of the PT2 terms"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.cr a moont:MComponent ;
	 moont:identifier "cr";
	 moont:stringComment "Coefficient of real pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.bandPass.c a moont:MComponent ;
	 moont:identifier "c";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.FirstOrder rdfs:subClassOf moont:MBlock;
	 moont:stringComment "First order transfer function block (_gleich_ 1 pole)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.FirstOrder moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.FirstOrder moont:hasPart msl:Modelica.Blocks.Continuous.FirstOrder.k.
msl:Modelica.Blocks.Continuous.FirstOrder.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Gain"^^xsd:string;
	 moont:modification "(unit_gleich_\"1\")_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Continuous.FirstOrder moont:hasPart msl:Modelica.Blocks.Continuous.FirstOrder.initType.
msl:Modelica.Blocks.Continuous.FirstOrder.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3/4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.FirstOrder moont:hasPart msl:Modelica.Blocks.Continuous.FirstOrder.T.
msl:Modelica.Blocks.Continuous.FirstOrder.T a moont:MParameterComponent;
	 moont:identifier "T";
	 moont:type msl:SIunits.Time;
	 moont:stringComment "Time Constant"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.FirstOrder moont:hasPart msl:Modelica.Blocks.Continuous.FirstOrder.y_start.
msl:Modelica.Blocks.Continuous.FirstOrder.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value of output (_gleich_ state)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.TransferFunction rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Linear transfer function"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.TransferFunction moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.na.
msl:Modelica.Blocks.Continuous.TransferFunction.na a moont:MParameterComponent;
	 moont:identifier "na";
	 moont:type xsd:Integer;
	 moont:stringComment "Size of Denominator of transfer function."^^xsd:string;
	 moont:modification "_gleich_size(a,1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.b.
msl:Modelica.Blocks.Continuous.TransferFunction.b a moont:MParameterComponent;
	 moont:identifier "b";
	 moont:type xsd:Real;
	 moont:stringComment "Numerator coefficients of transfer function (e.g., 2*s+3 is specified as {2,3})"^^xsd:string;
	 moont:modification "_gleich_{1}"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.initType.
msl:Modelica.Blocks.Continuous.TransferFunction.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.nb.
msl:Modelica.Blocks.Continuous.TransferFunction.nb a moont:MParameterComponent;
	 moont:identifier "nb";
	 moont:type xsd:Integer;
	 moont:stringComment "Size of Numerator of transfer function."^^xsd:string;
	 moont:modification "_gleich_size(b,1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.a.
msl:Modelica.Blocks.Continuous.TransferFunction.a a moont:MParameterComponent;
	 moont:identifier "a";
	 moont:type xsd:Real;
	 moont:stringComment "Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6})"^^xsd:string;
	 moont:modification "_gleich_{1}"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.bb.
msl:Modelica.Blocks.Continuous.TransferFunction.bb a moont:MParameterComponent;
	 moont:identifier "bb";
	 moont:type xsd:Real;
	 moont:modification "_gleich_vector(_zeros(max(0,na-nb),1);b_)"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.x_start.
msl:Modelica.Blocks.Continuous.TransferFunction.x_start a moont:MParameterComponent;
	 moont:identifier "x_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess values of states"^^xsd:string;
	 moont:modification "_gleich_zeros(nx)"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.y_start.
msl:Modelica.Blocks.Continuous.TransferFunction.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value of output (derivatives of y are zero up to nx-1-th derivative)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.a_end.
msl:Modelica.Blocks.Continuous.TransferFunction.a_end a moont:MParameterComponent;
	 moont:identifier "a_end";
	 moont:type xsd:Real;
	 moont:modification "_gleich_ifa_end_>100*Modelica.Constants.eps*sqrt(a*a)thena_end_else1.0"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.d.
msl:Modelica.Blocks.Continuous.TransferFunction.d a moont:MParameterComponent;
	 moont:identifier "d";
	 moont:type xsd:Real;
	 moont:modification "_gleich_bb_1_/a_1_"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.nx.
msl:Modelica.Blocks.Continuous.TransferFunction.nx a moont:MParameterComponent;
	 moont:identifier "nx";
	 moont:type xsd:Integer;
	 moont:modification "_gleich_size(a,1)-1"^^xsd:string.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.x.
msl:Modelica.Blocks.Continuous.TransferFunction.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "State of transfer function from controller canonical form"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.TransferFunction.x.start moont:modification "x_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.TransferFunction moont:hasPart msl:Modelica.Blocks.Continuous.TransferFunction.x_scaled.
msl:Modelica.Blocks.Continuous.TransferFunction.x_scaled a moont:MComponent ;
	 moont:identifier "x_scaled";
	 moont:stringComment "Scaled vector x"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.StateSpace rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Linear state space system"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.StateSpace moont:extends msl:Modelica.Blocks.Interfaces.MIMO.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.initType.
msl:Modelica.Blocks.Continuous.StateSpace.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.x_start.
msl:Modelica.Blocks.Continuous.StateSpace.x_start a moont:MParameterComponent;
	 moont:identifier "x_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess values of states"^^xsd:string;
	 moont:modification "_gleich_zeros(nx)"^^xsd:string.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.D.
msl:Modelica.Blocks.Continuous.StateSpace.D a moont:MParameterComponent;
	 moont:identifier "D";
	 moont:type xsd:Real;
	 moont:stringComment "Matrix D of state space model"^^xsd:string;
	 moont:modification "_gleich_zeros(size(C,1),size(B,2))"^^xsd:string.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.y_start.
msl:Modelica.Blocks.Continuous.StateSpace.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial values of outputs (remaining states are in steady state if possible)"^^xsd:string;
	 moont:modification "_gleich_zeros(ny)"^^xsd:string.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.C.
msl:Modelica.Blocks.Continuous.StateSpace.C a moont:MParameterComponent;
	 moont:identifier "C";
	 moont:type xsd:Real;
	 moont:stringComment "Matrix C of state space model (e.g., C_gleich__1, 1_)"^^xsd:string;
	 moont:modification "_gleich__1,1_"^^xsd:string.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.A.
msl:Modelica.Blocks.Continuous.StateSpace.A a moont:MParameterComponent;
	 moont:identifier "A";
	 moont:type xsd:Real;
	 moont:stringComment "Matrix A of state space model (e.g., A_gleich__1, 0; 0, 1_)"^^xsd:string;
	 moont:modification "_gleich__1,0;0,1_"^^xsd:string.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.ny.
msl:Modelica.Blocks.Continuous.StateSpace.ny a moont:MParameterComponent;
	 moont:identifier "ny";
	 moont:type xsd:Integer;
	 moont:stringComment "number of outputs"^^xsd:string;
	 moont:modification "_gleich_size(C,1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.B.
msl:Modelica.Blocks.Continuous.StateSpace.B a moont:MParameterComponent;
	 moont:identifier "B";
	 moont:type xsd:Real;
	 moont:stringComment "Matrix B of state space model (e.g., B_gleich__1; 1_)"^^xsd:string;
	 moont:modification "_gleich__1;1_"^^xsd:string.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.nx.
msl:Modelica.Blocks.Continuous.StateSpace.nx a moont:MParameterComponent;
	 moont:identifier "nx";
	 moont:type xsd:Integer;
	 moont:stringComment "number of states"^^xsd:string;
	 moont:modification "_gleich_size(A,1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.StateSpace moont:hasPart msl:Modelica.Blocks.Continuous.StateSpace.x.
msl:Modelica.Blocks.Continuous.StateSpace.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "State vector"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.StateSpace.x.start moont:modification "x_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.Der rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Derivative of input (_gleich_ analytic differentiations)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.Der moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.Internal.Filter.base rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Prototype low pass filters with cut-off frequency of 1 rad/s (other filters are derived by transformation from these base filters)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.
msl:Modelica.Blocks.Continuous.Internal.Filter.base moont:extends msl:Modelica.Icons.InternalPackage.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return base filter coefficients of Chebyshev I filter (_gleich_ low pass filter with w_cut _gleich_ 1 rad/s)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.base.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.A_ripple.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.A_ripple a moont:MComponent ;
	 moont:identifier "A_ripple";
	 moont:stringComment "Pass band ripple in _dB_"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.normalized.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.normalized a moont:MComponent ;
	 moont:identifier "normalized";
	 moont:stringComment "_gleich_ true, if amplitude at f_cut _gleich_ -3db, otherwise unmodified filter"^^xsd:string;
	 a msl:Boolean.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.epsilon.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.epsilon a moont:MComponent ;
	 moont:identifier "epsilon";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.order.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.order a moont:MComponent ;
	 moont:identifier "order";
	 moont:stringComment "Order of filter"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.order.min moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.cr a moont:MComponent ;
	 moont:identifier "cr";
	 moont:stringComment "Coefficient of real pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.fac.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.fac a moont:MComponent ;
	 moont:identifier "fac";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 moont:stringComment "Frequency correction factor"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.den1.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.den1 a moont:MComponent ;
	 moont:identifier "den1";
	 moont:stringComment "_p_ coefficients of denominator first order polynomials (a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.den2.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.den2 a moont:MComponent ;
	 moont:identifier "den2";
	 moont:stringComment "_p^2, p_ coefficients of denominator second order polynomials (b*p^2 + a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.alpha2.
msl:Modelica.Blocks.Continuous.Internal.Filter.base.ChebyshevI.alpha2 a moont:MComponent ;
	 moont:identifier "alpha2";
	 moont:stringComment "_gleich_ alpha*alpha"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Filter roots and gain as needed for block implementations"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.
msl:Modelica.Blocks.Continuous.Internal.Filter.roots moont:extends msl:Modelica.Icons.InternalPackage.
msl:Modelica.Blocks.Continuous.SecondOrder rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Second order transfer function block (_gleich_ 2 poles)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.SecondOrder moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.SecondOrder moont:hasPart msl:Modelica.Blocks.Continuous.SecondOrder.k.
msl:Modelica.Blocks.Continuous.SecondOrder.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Gain"^^xsd:string;
	 moont:modification "(unit_gleich_\"1\")_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Continuous.SecondOrder moont:hasPart msl:Modelica.Blocks.Continuous.SecondOrder.yd_start.
msl:Modelica.Blocks.Continuous.SecondOrder.yd_start a moont:MParameterComponent;
	 moont:identifier "yd_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value of derivative of output (_gleich_ state)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.SecondOrder moont:hasPart msl:Modelica.Blocks.Continuous.SecondOrder.initType.
msl:Modelica.Blocks.Continuous.SecondOrder.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3/4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.SecondOrder moont:hasPart msl:Modelica.Blocks.Continuous.SecondOrder.y_start.
msl:Modelica.Blocks.Continuous.SecondOrder.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value of output (_gleich_ state)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.SecondOrder moont:hasPart msl:Modelica.Blocks.Continuous.SecondOrder.w.
msl:Modelica.Blocks.Continuous.SecondOrder.w a moont:MParameterComponent;
	 moont:identifier "w";
	 moont:type xsd:Real;
	 moont:stringComment "Angular frequency"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.SecondOrder moont:hasPart msl:Modelica.Blocks.Continuous.SecondOrder.D.
msl:Modelica.Blocks.Continuous.SecondOrder.D a moont:MParameterComponent;
	 moont:identifier "D";
	 moont:type xsd:Real;
	 moont:stringComment "Damping"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.SecondOrder moont:hasPart msl:Modelica.Blocks.Continuous.SecondOrder.yd.
msl:Modelica.Blocks.Continuous.SecondOrder.yd a moont:MComponent ;
	 moont:identifier "yd";
	 moont:stringComment "Derivative of y"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.SecondOrder.yd.start moont:modification "yd_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID rdfs:subClassOf moont:MBlock;
	 moont:stringComment "P, PI, PD, and PID controller with limited output, anti-windup compensation, setpoint weighting and optional feed-forward"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.LimPID moont:extends msl:Modelica.Blocks.Interfaces.SVcontrol.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.initType.
msl:Modelica.Blocks.Continuous.LimPID.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica..Modelica.Blocks.Types.InitPID;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)"^^xsd:string;
	 moont:modification "_gleich_.Modelica.Blocks.Types.InitPID.DoNotUse_InitialIntegratorState"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.Ni.
msl:Modelica.Blocks.Continuous.LimPID.Ni a moont:MParameterComponent;
	 moont:identifier "Ni";
	 moont:type xsd:Real;
	 moont:stringComment "Ni*Ti is time constant of anti-windup compensation"^^xsd:string;
	 moont:modification "(min_gleich_100*Modelica.Constants.eps)_gleich_0.9"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.withFeedForward.
msl:Modelica.Blocks.Continuous.LimPID.withFeedForward a moont:MParameterComponent;
	 moont:identifier "withFeedForward";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use feed-forward input?"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.with_I.
msl:Modelica.Blocks.Continuous.LimPID.with_I a moont:MParameterComponent;
	 moont:identifier "with_I";
	 moont:type xsd:Boolean;
	 moont:modification "_gleich_controllerType_gleich__gleich_SimpleController.PIorcontrollerType_gleich__gleich_SimpleController.PID"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.with_D.
msl:Modelica.Blocks.Continuous.LimPID.with_D a moont:MParameterComponent;
	 moont:identifier "with_D";
	 moont:type xsd:Boolean;
	 moont:modification "_gleich_controllerType_gleich__gleich_SimpleController.PDorcontrollerType_gleich__gleich_SimpleController.PID"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.k.
msl:Modelica.Blocks.Continuous.LimPID.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Gain of controller"^^xsd:string;
	 moont:modification "(min_gleich_0,unit_gleich_\"1\")_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.limitsAtInit.
msl:Modelica.Blocks.Continuous.LimPID.limitsAtInit a moont:MParameterComponent;
	 moont:identifier "limitsAtInit";
	 moont:type xsd:Boolean;
	 moont:stringComment "Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator)"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.yMax.
msl:Modelica.Blocks.Continuous.LimPID.yMax a moont:MParameterComponent;
	 moont:identifier "yMax";
	 moont:type xsd:Real;
	 moont:stringComment "Upper limit of output"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.Td.
msl:Modelica.Blocks.Continuous.LimPID.Td a moont:MParameterComponent;
	 moont:identifier "Td";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Time constant of Derivative block"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_0.1"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.xi_start.
msl:Modelica.Blocks.Continuous.LimPID.xi_start a moont:MParameterComponent;
	 moont:identifier "xi_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value for integrator output (_gleich_ integrator state)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.Nd.
msl:Modelica.Blocks.Continuous.LimPID.Nd a moont:MParameterComponent;
	 moont:identifier "Nd";
	 moont:type xsd:Real;
	 moont:stringComment "The higher Nd, the more ideal the derivative block"^^xsd:string;
	 moont:modification "(min_gleich_100*Modelica.Constants.eps)_gleich_10"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.y_start.
msl:Modelica.Blocks.Continuous.LimPID.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value of output"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.kFF.
msl:Modelica.Blocks.Continuous.LimPID.kFF a moont:MParameterComponent;
	 moont:identifier "kFF";
	 moont:type xsd:Real;
	 moont:stringComment "Gain of feed-forward input"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.yMin.
msl:Modelica.Blocks.Continuous.LimPID.yMin a moont:MParameterComponent;
	 moont:identifier "yMin";
	 moont:type xsd:Real;
	 moont:stringComment "Lower limit of output"^^xsd:string;
	 moont:modification "_gleich_-yMax"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.wp.
msl:Modelica.Blocks.Continuous.LimPID.wp a moont:MParameterComponent;
	 moont:identifier "wp";
	 moont:type xsd:Real;
	 moont:stringComment "Set-point weight for Proportional block (0..1)"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.wd.
msl:Modelica.Blocks.Continuous.LimPID.wd a moont:MParameterComponent;
	 moont:identifier "wd";
	 moont:type xsd:Real;
	 moont:stringComment "Set-point weight for Derivative block (0..1)"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_0"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.xd_start.
msl:Modelica.Blocks.Continuous.LimPID.xd_start a moont:MParameterComponent;
	 moont:identifier "xd_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value for state of derivative block"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.controllerType.
msl:Modelica.Blocks.Continuous.LimPID.controllerType a moont:MParameterComponent;
	 moont:identifier "controllerType";
	 moont:type msl:Modelica..Modelica.Blocks.Types.SimpleController;
	 moont:stringComment "Type of controller"^^xsd:string;
	 moont:modification "_gleich_.Modelica.Blocks.Types.SimpleController.PID"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.homotopyType.
msl:Modelica.Blocks.Continuous.LimPID.homotopyType a moont:MParameterComponent;
	 moont:identifier "homotopyType";
	 moont:type msl:Modelica.Blocks.Types.LimiterHomotopy;
	 moont:stringComment "Simplified model for homotopy-based initialization"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.LimiterHomotopy.Linear"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.strict.
msl:Modelica.Blocks.Continuous.LimPID.strict a moont:MParameterComponent;
	 moont:identifier "strict";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if strict limits with noEvent(..)"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.Ti.
msl:Modelica.Blocks.Continuous.LimPID.Ti a moont:MParameterComponent;
	 moont:identifier "Ti";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Time constant of Integrator block"^^xsd:string;
	 moont:modification "(min_gleich_Modelica.Constants.small)_gleich_0.5"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.P.
msl:Modelica.Blocks.Continuous.LimPID.P a moont:MComponent ;
	 moont:identifier "P";
	 a msl:Modelica.Blocks.Math.Gain.
msl:Modelica.Blocks.Continuous.LimPID.P.k moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.Dzero.
msl:Modelica.Blocks.Continuous.LimPID.Dzero a moont:MComponent ;
	 moont:identifier "Dzero";
	 a msl:Modelica.Blocks.Sources.Constant.
msl:Modelica.Blocks.Continuous.LimPID.Dzero.k moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addP.
msl:Modelica.Blocks.Continuous.LimPID.addP a moont:MComponent ;
	 moont:identifier "addP";
	 a msl:Modelica.Blocks.Math.Add.
msl:Modelica.Blocks.Continuous.LimPID.addP.k1 moont:modification "wp"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.addP.k2 moont:modification "-1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.gainPID.
msl:Modelica.Blocks.Continuous.LimPID.gainPID a moont:MComponent ;
	 moont:identifier "gainPID";
	 a msl:Modelica.Blocks.Math.Gain.
msl:Modelica.Blocks.Continuous.LimPID.gainPID.k moont:modification "k"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.gainTrack.
msl:Modelica.Blocks.Continuous.LimPID.gainTrack a moont:MComponent ;
	 moont:identifier "gainTrack";
	 a msl:Modelica.Blocks.Math.Gain.
msl:Modelica.Blocks.Continuous.LimPID.gainTrack.k moont:modification "1/(k*Ni)"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addD.
msl:Modelica.Blocks.Continuous.LimPID.addD a moont:MComponent ;
	 moont:identifier "addD";
	 a msl:Modelica.Blocks.Math.Add.
msl:Modelica.Blocks.Continuous.LimPID.addD.k1 moont:modification "wd"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.addD.k2 moont:modification "-1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addI.
msl:Modelica.Blocks.Continuous.LimPID.addI a moont:MComponent ;
	 moont:identifier "addI";
	 a msl:Modelica.Blocks.Math.Add3.
msl:Modelica.Blocks.Continuous.LimPID.addI.k2 moont:modification "-1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addFF.
msl:Modelica.Blocks.Continuous.LimPID.addFF a moont:MComponent ;
	 moont:identifier "addFF";
	 a msl:Modelica.Blocks.Math.Add.
msl:Modelica.Blocks.Continuous.LimPID.addFF.k1 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID.addFF.k2 moont:modification "kFF"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.unitTime.
msl:Modelica.Blocks.Continuous.LimPID.unitTime a moont:MComponent ;
	 moont:identifier "unitTime";
	 a msl:Modelica.SIunits.Time.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.D.
msl:Modelica.Blocks.Continuous.LimPID.D a moont:MComponent ;
	 moont:identifier "D";
	 a msl:Modelica.Blocks.Continuous.Derivative.
msl:Modelica.Blocks.Continuous.LimPID.D.k moont:modification "Td/unitTime"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.D.T moont:modification "max(_Td/Nd,1.e-14_)"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.D.x_start moont:modification "xd_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.D moont:modification "initType_gleich_ifinitType_gleich__gleich_InitPID.SteadyStateorinitType_gleich__gleich_InitPID.InitialOutputthenInit.SteadyStateelseifinitType_gleich__gleich_InitPID.InitialStatethenInit.InitialStateelseInit.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.I.
msl:Modelica.Blocks.Continuous.LimPID.I a moont:MComponent ;
	 moont:identifier "I";
	 a msl:Modelica.Blocks.Continuous.Integrator.
msl:Modelica.Blocks.Continuous.LimPID.I.k moont:modification "unitTime/Ti"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.I.y_start moont:modification "xi_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.I moont:modification "initType_gleich_ifinitType_gleich__gleich_InitPID.SteadyStatethenInit.SteadyStateelseifinitType_gleich__gleich_InitPID.InitialStateorinitType_gleich__gleich_InitPID.DoNotUse_InitialIntegratorStatethenInit.InitialStateelseInit.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addSat.
msl:Modelica.Blocks.Continuous.LimPID.addSat a moont:MComponent ;
	 moont:identifier "addSat";
	 a msl:Modelica.Blocks.Math.Add.
msl:Modelica.Blocks.Continuous.LimPID.addSat.k1 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID.addSat.k2 moont:modification "-1.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.limiter.
msl:Modelica.Blocks.Continuous.LimPID.limiter a moont:MComponent ;
	 moont:identifier "limiter";
	 a msl:Modelica.Blocks.Nonlinear.Limiter.
msl:Modelica.Blocks.Continuous.LimPID.limiter.uMax moont:modification "yMax"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.limiter.uMin moont:modification "yMin"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.limiter.strict moont:modification "strict"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.limiter.limitsAtInit moont:modification "limitsAtInit"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID.limiter.homotopyType moont:modification "homotopyType"^^xsd:String.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addPID.
msl:Modelica.Blocks.Continuous.LimPID.addPID a moont:MComponent ;
	 moont:identifier "addPID";
	 a msl:Modelica.Blocks.Math.Add3.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.controlError.
msl:Modelica.Blocks.Continuous.LimPID.controlError a moont:MComponent ;
	 moont:identifier "controlError";
	 moont:stringComment "Control error (set point - measurement)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.u_ff.
msl:Modelica.Blocks.Continuous.LimPID.u_ff a moont:MComponent ;
	 moont:identifier "u_ff";
	 moont:stringComment "Optional connector of feed-forward input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.FFzero.
msl:Modelica.Blocks.Continuous.LimPID.FFzero a moont:MComponent ;
	 moont:identifier "FFzero";
	 a msl:Modelica.Blocks.Sources.Constant.
msl:Modelica.Blocks.Continuous.LimPID.FFzero.k moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.Izero.
msl:Modelica.Blocks.Continuous.LimPID.Izero a moont:MComponent ;
	 moont:identifier "Izero";
	 a msl:Modelica.Blocks.Sources.Constant.
msl:Modelica.Blocks.Continuous.LimPID.Izero.k moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.LimPID.u_s moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addP.u1.
msl:Modelica.Blocks.Continuous.LimPID.addP moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addP.u1.
msl:Modelica.Blocks.Continuous.LimPID.addP.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addP.u1 moont:identifier "u1".
msl:Modelica.Blocks.Continuous.LimPID.u_s moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addD.u1.
msl:Modelica.Blocks.Continuous.LimPID.addD moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addD.u1.
msl:Modelica.Blocks.Continuous.LimPID.addD.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addD.u1 moont:identifier "u1".
msl:Modelica.Blocks.Continuous.LimPID.u_s moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addI.u1.
msl:Modelica.Blocks.Continuous.LimPID.addI moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addI.u1.
msl:Modelica.Blocks.Continuous.LimPID.addI.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addI.u1 moont:identifier "u1".
msl:Modelica.Blocks.Continuous.LimPID.addP moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addP.y.
msl:Modelica.Blocks.Continuous.LimPID.addP.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addP.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.addP.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.P.u.
msl:Modelica.Blocks.Continuous.LimPID.P moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.P.u.
msl:Modelica.Blocks.Continuous.LimPID.P.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.P.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.LimPID.addD moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addD.y.
msl:Modelica.Blocks.Continuous.LimPID.addD.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addD.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.addD.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.D.u.
msl:Modelica.Blocks.Continuous.LimPID.D moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.D.u.
msl:Modelica.Blocks.Continuous.LimPID.D.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.D.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.LimPID.addI moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addI.y.
msl:Modelica.Blocks.Continuous.LimPID.addI.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addI.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.addI.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.I.u.
msl:Modelica.Blocks.Continuous.LimPID.I moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.I.u.
msl:Modelica.Blocks.Continuous.LimPID.I.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.I.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.LimPID.P moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.P.y.
msl:Modelica.Blocks.Continuous.LimPID.P.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.P.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.P.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addPID.u1.
msl:Modelica.Blocks.Continuous.LimPID.addPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addPID.u1.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u1 moont:identifier "u1".
msl:Modelica.Blocks.Continuous.LimPID.D moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.D.y.
msl:Modelica.Blocks.Continuous.LimPID.D.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.D.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.D.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addPID.u2.
msl:Modelica.Blocks.Continuous.LimPID.addPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addPID.u2.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u2 moont:identifier "u2".
msl:Modelica.Blocks.Continuous.LimPID.I moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.I.y.
msl:Modelica.Blocks.Continuous.LimPID.I.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.I.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.I.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addPID.u3.
msl:Modelica.Blocks.Continuous.LimPID.addPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addPID.u3.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u3 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u3 moont:identifier "u3".
msl:Modelica.Blocks.Continuous.LimPID.limiter moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.limiter.y.
msl:Modelica.Blocks.Continuous.LimPID.limiter.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.limiter.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.limiter.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addSat.u1.
msl:Modelica.Blocks.Continuous.LimPID.addSat moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addSat.u1.
msl:Modelica.Blocks.Continuous.LimPID.addSat.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addSat.u1 moont:identifier "u1".
msl:Modelica.Blocks.Continuous.LimPID.limiter moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.limiter.y.
msl:Modelica.Blocks.Continuous.LimPID.limiter.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.limiter.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.limiter.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.y.
msl:Modelica.Blocks.Continuous.LimPID.addSat moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addSat.y.
msl:Modelica.Blocks.Continuous.LimPID.addSat.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addSat.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.addSat.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.gainTrack.u.
msl:Modelica.Blocks.Continuous.LimPID.gainTrack moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.gainTrack.u.
msl:Modelica.Blocks.Continuous.LimPID.gainTrack.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.gainTrack.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.LimPID.gainTrack moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.gainTrack.y.
msl:Modelica.Blocks.Continuous.LimPID.gainTrack.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.gainTrack.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.gainTrack.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addI.u3.
msl:Modelica.Blocks.Continuous.LimPID.addI moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addI.u3.
msl:Modelica.Blocks.Continuous.LimPID.addI.u3 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addI.u3 moont:identifier "u3".
msl:Modelica.Blocks.Continuous.LimPID.u_m moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addP.u2.
msl:Modelica.Blocks.Continuous.LimPID.addP moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addP.u2.
msl:Modelica.Blocks.Continuous.LimPID.addP.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addP.u2 moont:identifier "u2".
msl:Modelica.Blocks.Continuous.LimPID.u_m moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addD.u2.
msl:Modelica.Blocks.Continuous.LimPID.addD moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addD.u2.
msl:Modelica.Blocks.Continuous.LimPID.addD.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addD.u2 moont:identifier "u2".
msl:Modelica.Blocks.Continuous.LimPID.u_m moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addI.u2.
msl:Modelica.Blocks.Continuous.LimPID.addI moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addI.u2.
msl:Modelica.Blocks.Continuous.LimPID.addI.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addI.u2 moont:identifier "u2".
msl:Modelica.Blocks.Continuous.LimPID.Dzero moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.Dzero.y.
msl:Modelica.Blocks.Continuous.LimPID.Dzero.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.Dzero.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.Dzero.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addPID.u2.
msl:Modelica.Blocks.Continuous.LimPID.addPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addPID.u2.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u2 moont:identifier "u2".
msl:Modelica.Blocks.Continuous.LimPID.Izero moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.Izero.y.
msl:Modelica.Blocks.Continuous.LimPID.Izero.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.Izero.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.Izero.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addPID.u3.
msl:Modelica.Blocks.Continuous.LimPID.addPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addPID.u3.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u3 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addPID.u3 moont:identifier "u3".
msl:Modelica.Blocks.Continuous.LimPID.addPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addPID.y.
msl:Modelica.Blocks.Continuous.LimPID.addPID.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addPID.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.addPID.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.gainPID.u.
msl:Modelica.Blocks.Continuous.LimPID.gainPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.gainPID.u.
msl:Modelica.Blocks.Continuous.LimPID.gainPID.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.gainPID.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.LimPID.addFF moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addFF.y.
msl:Modelica.Blocks.Continuous.LimPID.addFF.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addFF.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.addFF.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.limiter.u.
msl:Modelica.Blocks.Continuous.LimPID.limiter moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.limiter.u.
msl:Modelica.Blocks.Continuous.LimPID.limiter.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.limiter.u moont:identifier "u".
msl:Modelica.Blocks.Continuous.LimPID.gainPID moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.gainPID.y.
msl:Modelica.Blocks.Continuous.LimPID.gainPID.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.gainPID.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.gainPID.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addFF.u1.
msl:Modelica.Blocks.Continuous.LimPID.addFF moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addFF.u1.
msl:Modelica.Blocks.Continuous.LimPID.addFF.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addFF.u1 moont:identifier "u1".
msl:Modelica.Blocks.Continuous.LimPID.FFzero moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.FFzero.y.
msl:Modelica.Blocks.Continuous.LimPID.FFzero.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.FFzero.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.FFzero.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addFF.u2.
msl:Modelica.Blocks.Continuous.LimPID.addFF moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addFF.u2.
msl:Modelica.Blocks.Continuous.LimPID.addFF.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addFF.u2 moont:identifier "u2".
msl:Modelica.Blocks.Continuous.LimPID.addFF moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addFF.u2.
msl:Modelica.Blocks.Continuous.LimPID.addFF.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addFF.u2 moont:identifier "u2".
msl:Modelica.Blocks.Continuous.LimPID.addFF.u2 moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.u_ff.
msl:Modelica.Blocks.Continuous.LimPID.addFF moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addFF.y.
msl:Modelica.Blocks.Continuous.LimPID.addFF.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addFF.y moont:identifier "y".
msl:Modelica.Blocks.Continuous.LimPID.addFF.y moont:connectedTo msl:Modelica.Blocks.Continuous.LimPID.addSat.u2.
msl:Modelica.Blocks.Continuous.LimPID.addSat moont:hasPart msl:Modelica.Blocks.Continuous.LimPID.addSat.u2.
msl:Modelica.Blocks.Continuous.LimPID.addSat.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Continuous.LimPID.addSat.u2 moont:identifier "u2".
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return coefficients of normalized low pass Bessel filter (_gleich_ gain at cut-off frequency 1 rad/s is decreased 3dB)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients.alpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients.alpha a moont:MComponent ;
	 moont:identifier "alpha";
	 moont:stringComment "Normalization factor"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "_p_ coefficients of Bessel denominator polynomials (a*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients.order.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients.order a moont:MComponent ;
	 moont:identifier "order";
	 moont:stringComment "Order of filter in the range 1..41"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients.c2.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.BesselBaseCoefficients.c2 a moont:MComponent ;
	 moont:identifier "c2";
	 moont:stringComment "_p^2, p_ coefficients of Bessel denominator polynomials (b2*p^2 + b1*p + 1)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.CriticalDamping rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the input signal filtered with an n-th order filter with critical damping"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.CriticalDamping.f.
msl:Modelica.Blocks.Continuous.CriticalDamping.f a moont:MParameterComponent;
	 moont:identifier "f";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Cut-off frequency"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.CriticalDamping.initType.
msl:Modelica.Blocks.Continuous.CriticalDamping.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.NoInit"^^xsd:string.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.CriticalDamping.y_start.
msl:Modelica.Blocks.Continuous.CriticalDamping.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value of output (remaining states are in steady state)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.CriticalDamping.normalized.
msl:Modelica.Blocks.Continuous.CriticalDamping.normalized a moont:MParameterComponent;
	 moont:identifier "normalized";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if amplitude at f_cut is 3 dB, otherwise unmodified filter"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.CriticalDamping.n.
msl:Modelica.Blocks.Continuous.CriticalDamping.n a moont:MParameterComponent;
	 moont:identifier "n";
	 moont:type xsd:Integer;
	 moont:stringComment "Order of filter"^^xsd:string;
	 moont:modification "2.0"^^xsd:Real.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.CriticalDamping.w.
msl:Modelica.Blocks.Continuous.CriticalDamping.w a moont:MParameterComponent;
	 moont:identifier "w";
	 moont:type xsd:Real;
	 moont:modification "_gleich_2*Modelica.Constants.pi*f/alpha"^^xsd:string.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.CriticalDamping.x_start.
msl:Modelica.Blocks.Continuous.CriticalDamping.x_start a moont:MParameterComponent;
	 moont:identifier "x_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess values of states"^^xsd:string;
	 moont:modification "_gleich_zeros(n)"^^xsd:string.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.CriticalDamping.alpha.
msl:Modelica.Blocks.Continuous.CriticalDamping.alpha a moont:MParameterComponent;
	 moont:identifier "alpha";
	 moont:type xsd:Real;
	 moont:stringComment "Frequency correction factor for normalized filter"^^xsd:string;
	 moont:modification "_gleich_ifnormalizedthensqrt(2^(1/n)-1)else1.0"^^xsd:string.
msl:Modelica.Blocks.Continuous.CriticalDamping moont:hasPart msl:Modelica.Blocks.Continuous.CriticalDamping.x.
msl:Modelica.Blocks.Continuous.CriticalDamping.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "Filter states"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.CriticalDamping.x.start moont:modification "x_start"^^xsd:String.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return high pass filter coefficients at given cut-off frequency"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.cr a moont:MComponent ;
	 moont:identifier "cr";
	 moont:stringComment "Coefficient of real pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.c1_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.c1_in a moont:MComponent ;
	 moont:identifier "c1_in";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.f_cut.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.f_cut a moont:MComponent ;
	 moont:identifier "f_cut";
	 moont:stringComment "Cut-off frequency"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.w_cut2.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.w_cut2 a moont:MComponent ;
	 moont:identifier "w_cut2";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.c0_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.c0_in a moont:MComponent ;
	 moont:identifier "c0_in";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.w_cut.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.w_cut a moont:MComponent ;
	 moont:identifier "w_cut";
	 moont:stringComment "Cut-off angular frequency"^^xsd:string;
	 a msl:Modelica.SIunits.AngularVelocity.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.cr_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.highPass.cr_in a moont:MComponent ;
	 moont:identifier "cr_in";
	 moont:stringComment "Coefficients of real poles"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Residue of non-linear equation"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.z.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.z a moont:MComponent ;
	 moont:identifier "z";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.b.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.b a moont:MComponent ;
	 moont:identifier "b";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.res.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.res a moont:MComponent ;
	 moont:identifier "res";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.a.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.a a moont:MComponent ;
	 moont:identifier "a";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.w.
msl:Modelica.Blocks.Continuous.Internal.Filter.Utilities.bandPassAlpha.residue.w a moont:MComponent ;
	 moont:identifier "w";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return low pass filter coefficients at given cut-off frequency"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.c0_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.c0_in a moont:MComponent ;
	 moont:identifier "c0_in";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.w_cut.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.w_cut a moont:MComponent ;
	 moont:identifier "w_cut";
	 moont:stringComment "Cut-off angular frequency"^^xsd:string;
	 a msl:Modelica.SIunits.AngularVelocity.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.cr.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.cr a moont:MComponent ;
	 moont:identifier "cr";
	 moont:stringComment "Coefficient of real pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.cr_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.cr_in a moont:MComponent ;
	 moont:identifier "cr_in";
	 moont:stringComment "Coefficients of real poles"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.f_cut.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.f_cut a moont:MComponent ;
	 moont:identifier "f_cut";
	 moont:stringComment "Cut-off frequency"^^xsd:string;
	 a msl:Modelica.SIunits.Frequency.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.c0.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.c0 a moont:MComponent ;
	 moont:identifier "c0";
	 moont:stringComment "Coefficients of s^0 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.w_cut2.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.w_cut2 a moont:MComponent ;
	 moont:identifier "w_cut2";
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.c1.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.c1 a moont:MComponent ;
	 moont:identifier "c1";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass moont:hasPart msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.c1_in.
msl:Modelica.Blocks.Continuous.Internal.Filter.coefficients.lowPass.c1_in a moont:MComponent ;
	 moont:identifier "c1_in";
	 moont:stringComment "Coefficients of s^1 term if conjugate complex pole"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Discrete.FirstOrderHold rdfs:subClassOf moont:MBlock;
	 moont:stringComment "First order hold of a sampled-data system"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Discrete.
msl:Modelica.Blocks.Discrete.FirstOrderHold moont:extends msl:Modelica.Blocks.Interfaces.DiscreteSISO.
msl:Modelica.Blocks.Discrete.FirstOrderHold moont:hasPart msl:Modelica.Blocks.Discrete.FirstOrderHold.c.
msl:Modelica.Blocks.Discrete.FirstOrderHold.c a moont:MComponent ;
	 moont:identifier "c";
	 a msl:Real.
msl:Modelica.Blocks.Discrete.FirstOrderHold moont:hasPart msl:Modelica.Blocks.Discrete.FirstOrderHold.uSample.
msl:Modelica.Blocks.Discrete.FirstOrderHold.uSample a moont:MComponent ;
	 moont:identifier "uSample";
	 a msl:Real.
msl:Modelica.Blocks.Discrete.FirstOrderHold moont:hasPart msl:Modelica.Blocks.Discrete.FirstOrderHold.pre_uSample.
msl:Modelica.Blocks.Discrete.FirstOrderHold.pre_uSample a moont:MComponent ;
	 moont:identifier "pre_uSample";
	 a msl:Real.
msl:Modelica.Blocks.Discrete.FirstOrderHold moont:hasPart msl:Modelica.Blocks.Discrete.FirstOrderHold.tSample.
msl:Modelica.Blocks.Discrete.FirstOrderHold.tSample a moont:MComponent ;
	 moont:identifier "tSample";
	 a msl:Modelica.SIunits.Time.
msl:Modelica.Blocks.Discrete.TriggeredMax rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Compute maximum, absolute value of continuous signal at trigger instants"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Discrete.
msl:Modelica.Blocks.Discrete.TriggeredMax moont:extends msl:Modelica.Blocks.Icons.DiscreteBlock.
msl:Modelica.Blocks.Discrete.TriggeredMax moont:hasPart msl:Modelica.Blocks.Discrete.TriggeredMax.trigger.
msl:Modelica.Blocks.Discrete.TriggeredMax.trigger a moont:MComponent ;
	 moont:identifier "trigger";
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Discrete.TriggeredMax moont:hasPart msl:Modelica.Blocks.Discrete.TriggeredMax.u.
msl:Modelica.Blocks.Discrete.TriggeredMax.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector with a Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Discrete.TriggeredMax moont:hasPart msl:Modelica.Blocks.Discrete.TriggeredMax.y.
msl:Modelica.Blocks.Discrete.TriggeredMax.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector with a Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Discrete.Sampler rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Ideal sampling of continuous signals"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Discrete.
msl:Modelica.Blocks.Discrete.Sampler moont:extends msl:Modelica.Blocks.Interfaces.DiscreteSISO.
msl:Modelica.Blocks.Discrete rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of discrete input/output blocks with fixed sample period"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.Discrete moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.Discrete.ZeroOrderHold rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Zero order hold of a sampled-data system"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Discrete.
msl:Modelica.Blocks.Discrete.ZeroOrderHold moont:extends msl:Modelica.Blocks.Interfaces.DiscreteSISO.
msl:Modelica.Blocks.Discrete.ZeroOrderHold moont:hasPart msl:Modelica.Blocks.Discrete.ZeroOrderHold.ySample.
msl:Modelica.Blocks.Discrete.ZeroOrderHold.ySample a moont:MComponent ;
	 moont:identifier "ySample";
	 a msl:Real.
msl:Modelica.Blocks.Discrete.ZeroOrderHold.ySample.start moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Discrete.ZeroOrderHold.ySample.fixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Discrete.UnitDelay rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Unit Delay Block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Discrete.
msl:Modelica.Blocks.Discrete.UnitDelay moont:extends msl:Modelica.Blocks.Interfaces.DiscreteSISO.
msl:Modelica.Blocks.Discrete.UnitDelay moont:hasPart msl:Modelica.Blocks.Discrete.UnitDelay.y_start.
msl:Modelica.Blocks.Discrete.UnitDelay.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value of output signal"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Discrete.TransferFunction rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Discrete Transfer Function block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Discrete.
msl:Modelica.Blocks.Discrete.TransferFunction moont:extends msl:Modelica.Blocks.Interfaces.DiscreteSISO.
msl:Modelica.Blocks.Discrete.TransferFunction moont:hasPart msl:Modelica.Blocks.Discrete.TransferFunction.nb.
msl:Modelica.Blocks.Discrete.TransferFunction.nb a moont:MParameterComponent;
	 moont:identifier "nb";
	 moont:type xsd:Integer;
	 moont:stringComment "Size of Numerator of transfer function"^^xsd:string;
	 moont:modification "_gleich_size(b,1)"^^xsd:string.
msl:Modelica.Blocks.Discrete.TransferFunction moont:hasPart msl:Modelica.Blocks.Discrete.TransferFunction.b.
msl:Modelica.Blocks.Discrete.TransferFunction.b a moont:MParameterComponent;
	 moont:identifier "b";
	 moont:type xsd:Real;
	 moont:stringComment "Numerator coefficients of transfer function."^^xsd:string;
	 moont:modification "_gleich_{1}"^^xsd:string.
msl:Modelica.Blocks.Discrete.TransferFunction moont:hasPart msl:Modelica.Blocks.Discrete.TransferFunction.na.
msl:Modelica.Blocks.Discrete.TransferFunction.na a moont:MParameterComponent;
	 moont:identifier "na";
	 moont:type xsd:Integer;
	 moont:stringComment "Size of Denominator of transfer function"^^xsd:string;
	 moont:modification "_gleich_size(a,1)"^^xsd:string.
msl:Modelica.Blocks.Discrete.TransferFunction moont:hasPart msl:Modelica.Blocks.Discrete.TransferFunction.a.
msl:Modelica.Blocks.Discrete.TransferFunction.a a moont:MParameterComponent;
	 moont:identifier "a";
	 moont:type xsd:Real;
	 moont:stringComment "Denominator coefficients of transfer function."^^xsd:string;
	 moont:modification "_gleich_{1}"^^xsd:string.
msl:Modelica.Blocks.Discrete.TransferFunction moont:hasPart msl:Modelica.Blocks.Discrete.TransferFunction.x1.
msl:Modelica.Blocks.Discrete.TransferFunction.x1 a moont:MComponent ;
	 moont:identifier "x1";
	 a msl:Real.
msl:Modelica.Blocks.Discrete.TransferFunction.x1.start moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Discrete.TransferFunction.x1.fixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Discrete.TransferFunction moont:hasPart msl:Modelica.Blocks.Discrete.TransferFunction.xext.
msl:Modelica.Blocks.Discrete.TransferFunction.xext a moont:MComponent ;
	 moont:identifier "xext";
	 a msl:Real.
msl:Modelica.Blocks.Discrete.TransferFunction.xext.eachstart moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Discrete.TransferFunction.xext.eachfixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Discrete.TransferFunction moont:hasPart msl:Modelica.Blocks.Discrete.TransferFunction.x.
msl:Modelica.Blocks.Discrete.TransferFunction.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "State of transfer function from controller canonical form"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Discrete.TransferFunction.x.eachstart moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Discrete.TransferFunction.x.eachfixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Discrete.StateSpace rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Discrete State Space block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Discrete.
msl:Modelica.Blocks.Discrete.StateSpace moont:extends msl:Modelica.Blocks.Interfaces.DiscreteMIMO.
msl:Modelica.Blocks.Discrete.StateSpace moont:hasPart msl:Modelica.Blocks.Discrete.StateSpace.A.
msl:Modelica.Blocks.Discrete.StateSpace.A a moont:MParameterComponent;
	 moont:identifier "A";
	 moont:type xsd:Real;
	 moont:stringComment "Matrix A of state space model"^^xsd:string;
	 moont:modification "_gleich__1,0;0,1_"^^xsd:string.
msl:Modelica.Blocks.Discrete.StateSpace moont:hasPart msl:Modelica.Blocks.Discrete.StateSpace.C.
msl:Modelica.Blocks.Discrete.StateSpace.C a moont:MParameterComponent;
	 moont:identifier "C";
	 moont:type xsd:Real;
	 moont:stringComment "Matrix C of state space model"^^xsd:string;
	 moont:modification "_gleich__1,1_"^^xsd:string.
msl:Modelica.Blocks.Discrete.StateSpace moont:hasPart msl:Modelica.Blocks.Discrete.StateSpace.B.
msl:Modelica.Blocks.Discrete.StateSpace.B a moont:MParameterComponent;
	 moont:identifier "B";
	 moont:type xsd:Real;
	 moont:stringComment "Matrix B of state space model"^^xsd:string;
	 moont:modification "_gleich__1;1_"^^xsd:string.
msl:Modelica.Blocks.Discrete.StateSpace moont:hasPart msl:Modelica.Blocks.Discrete.StateSpace.D.
msl:Modelica.Blocks.Discrete.StateSpace.D a moont:MParameterComponent;
	 moont:identifier "D";
	 moont:type xsd:Real;
	 moont:stringComment "Matrix D of state space model"^^xsd:string;
	 moont:modification "_gleich_zeros(size(C,1),size(B,2))"^^xsd:string.
msl:Modelica.Blocks.Discrete.StateSpace moont:hasPart msl:Modelica.Blocks.Discrete.StateSpace.x.
msl:Modelica.Blocks.Discrete.StateSpace.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "State vector"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Discrete.TriggeredSampler rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Triggered sampling of continuous signals"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Discrete.
msl:Modelica.Blocks.Discrete.TriggeredSampler moont:extends msl:Modelica.Blocks.Icons.DiscreteBlock.
msl:Modelica.Blocks.Discrete.TriggeredSampler moont:hasPart msl:Modelica.Blocks.Discrete.TriggeredSampler.y_start.
msl:Modelica.Blocks.Discrete.TriggeredSampler.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "initial value of output signal"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Discrete.TriggeredSampler moont:hasPart msl:Modelica.Blocks.Discrete.TriggeredSampler.y.
msl:Modelica.Blocks.Discrete.TriggeredSampler.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector with a Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Discrete.TriggeredSampler moont:hasPart msl:Modelica.Blocks.Discrete.TriggeredSampler.u.
msl:Modelica.Blocks.Discrete.TriggeredSampler.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector with a Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Discrete.TriggeredSampler moont:hasPart msl:Modelica.Blocks.Discrete.TriggeredSampler.trigger.
msl:Modelica.Blocks.Discrete.TriggeredSampler.trigger a moont:MComponent ;
	 moont:identifier "trigger";
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Icons.DiscreteBlock rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Graphical layout of discrete block component icon"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Icons;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Icons.BooleanBlock rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Basic graphical layout of Boolean block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Icons;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Icons.PartialBooleanBlock rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Basic graphical layout of logical block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Icons;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Icons.Block rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Basic graphical layout of input/output block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Icons;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Icons.IntegerBlock rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Basic graphical layout of Integer block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Icons;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Icons rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Icons for Blocks"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.Icons moont:extends msl:Modelica.Icons.IconsPackage.
msl:Modelica.Blocks.Interaction.Show.RealValue rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Show Real value from numberPort or from number input field in diagram layer dynamically"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interaction.Show.
msl:Modelica.Blocks.Interaction.Show.RealValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.RealValue.significantDigits.
msl:Modelica.Blocks.Interaction.Show.RealValue.significantDigits a moont:MParameterComponent;
	 moont:identifier "significantDigits";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of significant digits to be shown"^^xsd:string;
	 moont:modification "(min_gleich_1)_gleich_2"^^xsd:string.
msl:Modelica.Blocks.Interaction.Show.RealValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.RealValue.use_numberPort.
msl:Modelica.Blocks.Interaction.Show.RealValue.use_numberPort a moont:MParameterComponent;
	 moont:identifier "use_numberPort";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if numberPort enabled"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interaction.Show.RealValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.RealValue.number.
msl:Modelica.Blocks.Interaction.Show.RealValue.number a moont:MComponent ;
	 moont:identifier "number";
	 moont:stringComment "Number to visualize if use_numberPort_gleich_false (time varying)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interaction.Show.RealValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.RealValue.numberPort.
msl:Modelica.Blocks.Interaction.Show.RealValue.numberPort a moont:MComponent ;
	 moont:identifier "numberPort";
	 moont:stringComment "Number to be shown in diagram layer if use_numberPort _gleich_ true"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interaction.Show.RealValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.RealValue.showNumber.
msl:Modelica.Blocks.Interaction.Show.RealValue.showNumber a moont:MComponent ;
	 moont:identifier "showNumber";
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interaction.Show.RealValue.numberPort moont:connectedTo msl:Modelica.Blocks.Interaction.Show.RealValue.showNumber.
msl:Modelica.Blocks.Interaction.Show.IntegerValue rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Show Integer value from numberPort or from number input field in diagram layer dynamically"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interaction.Show.
msl:Modelica.Blocks.Interaction.Show.IntegerValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.IntegerValue.use_numberPort.
msl:Modelica.Blocks.Interaction.Show.IntegerValue.use_numberPort a moont:MParameterComponent;
	 moont:identifier "use_numberPort";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if numberPort enabled"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interaction.Show.IntegerValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.IntegerValue.showNumber.
msl:Modelica.Blocks.Interaction.Show.IntegerValue.showNumber a moont:MComponent ;
	 moont:identifier "showNumber";
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.Interaction.Show.IntegerValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.IntegerValue.numberPort.
msl:Modelica.Blocks.Interaction.Show.IntegerValue.numberPort a moont:MComponent ;
	 moont:identifier "numberPort";
	 moont:stringComment "Number to be shown in diagram layer if use_numberPort _gleich_ true"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerInput.
msl:Modelica.Blocks.Interaction.Show.IntegerValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.IntegerValue.number.
msl:Modelica.Blocks.Interaction.Show.IntegerValue.number a moont:MComponent ;
	 moont:identifier "number";
	 moont:stringComment "Number to visualize if use_numberPort_gleich_false (time varying)"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Interaction.Show.IntegerValue.numberPort moont:connectedTo msl:Modelica.Blocks.Interaction.Show.IntegerValue.showNumber.
msl:Modelica.Blocks.Interaction.Show.BooleanValue rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Show Boolean value from numberPort or from number input field in diagram layer dynamically"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interaction.Show.
msl:Modelica.Blocks.Interaction.Show.BooleanValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.BooleanValue.use_activePort.
msl:Modelica.Blocks.Interaction.Show.BooleanValue.use_activePort a moont:MParameterComponent;
	 moont:identifier "use_activePort";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if activePort enabled"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interaction.Show.BooleanValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.BooleanValue.active.
msl:Modelica.Blocks.Interaction.Show.BooleanValue.active a moont:MComponent ;
	 moont:identifier "active";
	 moont:stringComment "Boolean variable to visualize if use_activePort_gleich_false (time varying)"^^xsd:string;
	 a msl:Boolean.
msl:Modelica.Blocks.Interaction.Show.BooleanValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.BooleanValue.activePort.
msl:Modelica.Blocks.Interaction.Show.BooleanValue.activePort a moont:MComponent ;
	 moont:identifier "activePort";
	 moont:stringComment "Boolean variable to be shown in diagram layer if use_activePort _gleich_ true"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interaction.Show.BooleanValue moont:hasPart msl:Modelica.Blocks.Interaction.Show.BooleanValue.showActive.
msl:Modelica.Blocks.Interaction.Show.BooleanValue.showActive a moont:MComponent ;
	 moont:identifier "showActive";
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interaction.Show.BooleanValue.activePort moont:connectedTo msl:Modelica.Blocks.Interaction.Show.BooleanValue.showActive.
msl:Modelica.Blocks.Interaction.Show rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of blocks to show variables in a diagram animation"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interaction.
msl:Modelica.Blocks.Interaction.Show moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.Interaction rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of user interaction blocks to input and to show variables in a diagram animation"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.Interaction moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.Interfaces.BooleanInput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.SI2SO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "2 Single Input / 1 Single Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.SI2SO moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.SI2SO moont:hasPart msl:Modelica.Blocks.Interfaces.SI2SO.y.
msl:Modelica.Blocks.Interfaces.SI2SO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.SI2SO moont:hasPart msl:Modelica.Blocks.Interfaces.SI2SO.u1.
msl:Modelica.Blocks.Interfaces.SI2SO.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Connector of Real input signal 1"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.SI2SO moont:hasPart msl:Modelica.Blocks.Interfaces.SI2SO.u2.
msl:Modelica.Blocks.Interfaces.SI2SO.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Connector of Real input signal 2"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.partialBooleanBlockIcon rdfs:subClassOf moont:MBlock;
	 moont:stringComment "This icon will be removed in future Modelica versions, use Modelica.Blocks.Icons.PartialBooleanBlock instead."^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.partialBooleanBlockIcon moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.partialBooleanSI rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with 1 input Boolean signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.partialBooleanSI moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Interfaces.partialBooleanSI moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSI.u.
msl:Modelica.Blocks.Interfaces.partialBooleanSI.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.IntegerSIBooleanSO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Integer Input Boolean Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.IntegerSIBooleanSO moont:extends msl:Modelica.Blocks.Icons.BooleanBlock.
msl:Modelica.Blocks.Interfaces.IntegerSIBooleanSO moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerSIBooleanSO.y.
msl:Modelica.Blocks.Interfaces.IntegerSIBooleanSO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.IntegerSIBooleanSO moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerSIBooleanSO.u.
msl:Modelica.Blocks.Interfaces.IntegerSIBooleanSO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Integer input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerInput.
msl:Modelica.Blocks.Interfaces rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of connectors and partial models for input/output blocks"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.Interfaces moont:extends msl:Modelica.Icons.InterfacesPackage.
msl:Modelica.Blocks.Interfaces.PartialIntegerSISO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with a IntegerInput and an IntegerOutput signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.PartialIntegerSISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialIntegerSISO.u.
msl:Modelica.Blocks.Interfaces.PartialIntegerSISO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Integer input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerInput.
msl:Modelica.Blocks.Interfaces.PartialIntegerSISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialIntegerSISO.y.
msl:Modelica.Blocks.Interfaces.PartialIntegerSISO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Integer output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.Interfaces.MIMOs rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multiple Input Multiple Output continuous control block with same number of inputs and outputs"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.MIMOs moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.MIMOs moont:hasPart msl:Modelica.Blocks.Interfaces.MIMOs.n.
msl:Modelica.Blocks.Interfaces.MIMOs.n a moont:MParameterComponent;
	 moont:identifier "n";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of inputs (_gleich_ number of outputs)"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MIMOs moont:hasPart msl:Modelica.Blocks.Interfaces.MIMOs.y.
msl:Modelica.Blocks.Interfaces.MIMOs.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.MIMOs moont:hasPart msl:Modelica.Blocks.Interfaces.MIMOs.u.
msl:Modelica.Blocks.Interfaces.MIMOs.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.SendInteger rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Obsolete block to send Integer signal to bus"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.
msl:Modelica.Blocks.Interfaces.Adaptors.SendInteger moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.Adaptors.SendInteger moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.SendInteger.u.
msl:Modelica.Blocks.Interfaces.Adaptors.SendInteger.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Input signal to be send to bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerInput.
msl:Modelica.Blocks.Interfaces.Adaptors.SendInteger moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.SendInteger.toBus.
msl:Modelica.Blocks.Interfaces.Adaptors.SendInteger.toBus a moont:MComponent ;
	 moont:identifier "toBus";
	 moont:stringComment "Output signal to be connected to bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.Interfaces.PartialRealMISO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with a RealVectorInput and a RealOutput signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.PartialRealMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialRealMISO.nu.
msl:Modelica.Blocks.Interfaces.PartialRealMISO.nu a moont:MParameterComponent;
	 moont:identifier "nu";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of input connections"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_0"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialRealMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialRealMISO.significantDigits.
msl:Modelica.Blocks.Interfaces.PartialRealMISO.significantDigits a moont:MParameterComponent;
	 moont:identifier "significantDigits";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of significant digits to be shown in dynamic diagram layer for y"^^xsd:string;
	 moont:modification "(min_gleich_1)_gleich_3"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialRealMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialRealMISO.y.
msl:Modelica.Blocks.Interfaces.PartialRealMISO.y a moont:MComponent ;
	 moont:identifier "y";
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.PartialRealMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialRealMISO.u.
msl:Modelica.Blocks.Interfaces.PartialRealMISO.u a moont:MComponent ;
	 moont:identifier "u";
	 a msl:Modelica.Blocks.Interfaces.RealVectorInput.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveBoolean rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Obsolete block to receive Boolean signal from bus"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveBoolean moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveBoolean moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveBoolean.fromBus.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveBoolean.fromBus a moont:MComponent ;
	 moont:identifier "fromBus";
	 moont:stringComment "To be connected with signal on bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveBoolean moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveBoolean.y.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveBoolean.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Output signal to be received from bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.SO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Single Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.SO moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.SO moont:hasPart msl:Modelica.Blocks.Interfaces.SO.y.
msl:Modelica.Blocks.Interfaces.SO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.BooleanSISO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Single Input Single Output control block with signals of type Boolean"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.BooleanSISO moont:extends msl:Modelica.Blocks.Icons.BooleanBlock.
msl:Modelica.Blocks.Interfaces.BooleanSISO moont:hasPart msl:Modelica.Blocks.Interfaces.BooleanSISO.u.
msl:Modelica.Blocks.Interfaces.BooleanSISO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.BooleanSISO moont:hasPart msl:Modelica.Blocks.Interfaces.BooleanSISO.y.
msl:Modelica.Blocks.Interfaces.BooleanSISO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.partialBooleanSISO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with 1 input and 1 output Boolean signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.partialBooleanSISO moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Interfaces.partialBooleanSISO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSISO.u.
msl:Modelica.Blocks.Interfaces.partialBooleanSISO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.partialBooleanSISO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSISO.y.
msl:Modelica.Blocks.Interfaces.partialBooleanSISO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.IntegerMO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multiple Integer Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.IntegerMO moont:extends msl:Modelica.Blocks.Icons.IntegerBlock.
msl:Modelica.Blocks.Interfaces.IntegerMO moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerMO.nout.
msl:Modelica.Blocks.Interfaces.IntegerMO.nout a moont:MParameterComponent;
	 moont:identifier "nout";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of outputs"^^xsd:string;
	 moont:modification "(min_gleich_1)_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Interfaces.IntegerMO moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerMO.y.
msl:Modelica.Blocks.Interfaces.IntegerMO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Integer output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.Interfaces.SVcontrol rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Single-Variable continuous controller"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.SVcontrol moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.SVcontrol moont:hasPart msl:Modelica.Blocks.Interfaces.SVcontrol.y.
msl:Modelica.Blocks.Interfaces.SVcontrol.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of actuator output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.SVcontrol moont:hasPart msl:Modelica.Blocks.Interfaces.SVcontrol.u_m.
msl:Modelica.Blocks.Interfaces.SVcontrol.u_m a moont:MComponent ;
	 moont:identifier "u_m";
	 moont:stringComment "Connector of measurement input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.SVcontrol moont:hasPart msl:Modelica.Blocks.Interfaces.SVcontrol.u_s.
msl:Modelica.Blocks.Interfaces.SVcontrol.u_s a moont:MComponent ;
	 moont:identifier "u_s";
	 moont:stringComment "Connector of setpoint input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.RealVectorInput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with 2 input and 1 output Boolean signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.u1.
msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Connector of first Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.u2.
msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Connector of second Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.y.
msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.BooleanBlockIcon rdfs:subClassOf moont:MBlock;
	 moont:stringComment "This icon will be removed in future Modelica versions, use Modelica.Blocks.Icons.BooleanBlock instead."^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.BooleanBlockIcon moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.IntegerBlockIcon rdfs:subClassOf moont:MBlock;
	 moont:stringComment "This icon will be removed in future Modelica versions, use Modelica.Blocks.Icons.IntegerBlock instead."^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.IntegerBlockIcon moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveReal rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Obsolete block to receive Real signal from bus"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveReal moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveReal moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveReal.fromBus.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveReal.fromBus a moont:MComponent ;
	 moont:identifier "fromBus";
	 moont:stringComment "To be connected with signal on bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveReal moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveReal.y.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveReal.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Output signal to be received from bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.partialBooleanComparison rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with 2 Real input and 1 Boolean output signal (the result of a comparison of the two Real inputs)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.partialBooleanComparison moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanComparison.u1.
msl:Modelica.Blocks.Interfaces.partialBooleanComparison.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Connector of first Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.partialBooleanComparison moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanComparison.y.
msl:Modelica.Blocks.Interfaces.partialBooleanComparison.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.partialBooleanComparison moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanComparison.u2.
msl:Modelica.Blocks.Interfaces.partialBooleanComparison.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Connector of second Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block to compare the Real input u with a threshold and provide the result as 1 Boolean output signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.threshold.
msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.threshold a moont:MParameterComponent;
	 moont:identifier "threshold";
	 moont:type xsd:Real;
	 moont:stringComment "Comparison with respect to threshold"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.u.
msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.y.
msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Functions for adaptors"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions moont:extends msl:Modelica.Icons.FunctionsPackage.
msl:Modelica.Blocks.Interfaces.MO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multiple Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.MO moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.MO moont:hasPart msl:Modelica.Blocks.Interfaces.MO.nout.
msl:Modelica.Blocks.Interfaces.MO.nout a moont:MParameterComponent;
	 moont:identifier "nout";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of outputs"^^xsd:string;
	 moont:modification "(min_gleich_1)_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Interfaces.MO moont:hasPart msl:Modelica.Blocks.Interfaces.MO.y.
msl:Modelica.Blocks.Interfaces.MO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.MIMO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multiple Input Multiple Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.MIMO moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.MIMO moont:hasPart msl:Modelica.Blocks.Interfaces.MIMO.nin.
msl:Modelica.Blocks.Interfaces.MIMO.nin a moont:MParameterComponent;
	 moont:identifier "nin";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of inputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MIMO moont:hasPart msl:Modelica.Blocks.Interfaces.MIMO.nout.
msl:Modelica.Blocks.Interfaces.MIMO.nout a moont:MParameterComponent;
	 moont:identifier "nout";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of outputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MIMO moont:hasPart msl:Modelica.Blocks.Interfaces.MIMO.u.
msl:Modelica.Blocks.Interfaces.MIMO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.MIMO moont:hasPart msl:Modelica.Blocks.Interfaces.MIMO.y.
msl:Modelica.Blocks.Interfaces.MIMO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.MI2MO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "2 Multiple Input / Multiple Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.MI2MO moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.MI2MO moont:hasPart msl:Modelica.Blocks.Interfaces.MI2MO.n.
msl:Modelica.Blocks.Interfaces.MI2MO.n a moont:MParameterComponent;
	 moont:identifier "n";
	 moont:type xsd:Integer;
	 moont:stringComment "Dimension of input and output vectors."^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MI2MO moont:hasPart msl:Modelica.Blocks.Interfaces.MI2MO.u1.
msl:Modelica.Blocks.Interfaces.MI2MO.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Connector 1 of Real input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.MI2MO moont:hasPart msl:Modelica.Blocks.Interfaces.MI2MO.u2.
msl:Modelica.Blocks.Interfaces.MI2MO.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Connector 2 of Real input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.MI2MO moont:hasPart msl:Modelica.Blocks.Interfaces.MI2MO.y.
msl:Modelica.Blocks.Interfaces.MI2MO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs rdfs:subClassOf moont:MBlock;
	 moont:stringComment "2 Multiple Input / Boolean Multiple Output block with same signal lengths"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs moont:extends msl:Modelica.Blocks.Icons.BooleanBlock.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs moont:hasPart msl:Modelica.Blocks.Interfaces.MI2BooleanMOs.n.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs.n a moont:MParameterComponent;
	 moont:identifier "n";
	 moont:type xsd:Integer;
	 moont:stringComment "Dimension of input and output vectors."^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs moont:hasPart msl:Modelica.Blocks.Interfaces.MI2BooleanMOs.u1.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Connector 1 of Boolean input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs moont:hasPart msl:Modelica.Blocks.Interfaces.MI2BooleanMOs.y.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs moont:hasPart msl:Modelica.Blocks.Interfaces.MI2BooleanMOs.u2.
msl:Modelica.Blocks.Interfaces.MI2BooleanMOs.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Connector 2 of Boolean input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.SI2BooleanSO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "2 Single Input / Boolean Single Output block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.SI2BooleanSO moont:extends msl:Modelica.Blocks.Icons.BooleanBlock.
msl:Modelica.Blocks.Interfaces.SI2BooleanSO moont:hasPart msl:Modelica.Blocks.Interfaces.SI2BooleanSO.y.
msl:Modelica.Blocks.Interfaces.SI2BooleanSO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.SI2BooleanSO moont:hasPart msl:Modelica.Blocks.Interfaces.SI2BooleanSO.u1.
msl:Modelica.Blocks.Interfaces.SI2BooleanSO.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Connector 1 of Boolean input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.SI2BooleanSO moont:hasPart msl:Modelica.Blocks.Interfaces.SI2BooleanSO.u2.
msl:Modelica.Blocks.Interfaces.SI2BooleanSO.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Connector 2 of Boolean input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.PartialIntegerMISO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with an IntegerVectorInput and an IntegerOutput signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.PartialIntegerMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialIntegerMISO.nu.
msl:Modelica.Blocks.Interfaces.PartialIntegerMISO.nu a moont:MParameterComponent;
	 moont:identifier "nu";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of input connections"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_0"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialIntegerMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialIntegerMISO.u.
msl:Modelica.Blocks.Interfaces.PartialIntegerMISO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Vector of Integer input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerVectorInput.
msl:Modelica.Blocks.Interfaces.PartialIntegerMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialIntegerMISO.y.
msl:Modelica.Blocks.Interfaces.PartialIntegerMISO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Integer output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveInteger rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Obsolete block to receive Integer signal from bus"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveInteger moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveInteger moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveInteger.fromBus.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveInteger.fromBus a moont:MComponent ;
	 moont:identifier "fromBus";
	 moont:stringComment "To be connected with signal on bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerInput.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveInteger moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveInteger.y.
msl:Modelica.Blocks.Interfaces.Adaptors.ReceiveInteger.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Output signal to be received from bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.SendBoolean rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Obsolete block to send Boolean signal to bus"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.
msl:Modelica.Blocks.Interfaces.Adaptors.SendBoolean moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.Adaptors.SendBoolean moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.SendBoolean.u.
msl:Modelica.Blocks.Interfaces.Adaptors.SendBoolean.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Input signal to be send to bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.Adaptors.SendBoolean moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.SendBoolean.toBus.
msl:Modelica.Blocks.Interfaces.Adaptors.SendBoolean.toBus a moont:MComponent ;
	 moont:identifier "toBus";
	 moont:stringComment "Output signal to be connected to bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.Adaptors rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Package with adaptors (especially useful for FMUs)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.Adaptors moont:extends msl:Modelica.Icons.InterfacesPackage.
msl:Modelica.Blocks.Interfaces.DiscreteBlock rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Base class of discrete control blocks"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.DiscreteBlock moont:extends msl:Modelica.Blocks.Icons.DiscreteBlock.
msl:Modelica.Blocks.Interfaces.DiscreteBlock moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteBlock.startTime.
msl:Modelica.Blocks.Interfaces.DiscreteBlock.startTime a moont:MParameterComponent;
	 moont:identifier "startTime";
	 moont:type msl:SI.Time;
	 moont:stringComment "First sample time instant"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.DiscreteBlock moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteBlock.samplePeriod.
msl:Modelica.Blocks.Interfaces.DiscreteBlock.samplePeriod a moont:MParameterComponent;
	 moont:identifier "samplePeriod";
	 moont:type msl:SI.Time;
	 moont:stringComment "Sample period of component"^^xsd:string;
	 moont:modification "(min_gleich_100*Modelica.Constants.eps,start_gleich_0.1)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.DiscreteBlock moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteBlock.firstTrigger.
msl:Modelica.Blocks.Interfaces.DiscreteBlock.firstTrigger a moont:MComponent ;
	 moont:identifier "firstTrigger";
	 moont:stringComment "Rising edge signals first sample instant"^^xsd:string;
	 a msl:Boolean.
msl:Modelica.Blocks.Interfaces.DiscreteBlock.firstTrigger.start moont:modification "false"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.DiscreteBlock.firstTrigger.fixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.DiscreteBlock moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteBlock.sampleTrigger.
msl:Modelica.Blocks.Interfaces.DiscreteBlock.sampleTrigger a moont:MComponent ;
	 moont:identifier "sampleTrigger";
	 moont:stringComment "True, if sample time instant"^^xsd:string;
	 a msl:Boolean.
msl:Modelica.Blocks.Interfaces.DiscreteSISO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Single Input Single Output discrete control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.DiscreteSISO moont:extends msl:Modelica.Blocks.Interfaces.DiscreteBlock.
msl:Modelica.Blocks.Interfaces.DiscreteSISO moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteSISO.y.
msl:Modelica.Blocks.Interfaces.DiscreteSISO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.DiscreteSISO moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteSISO.u.
msl:Modelica.Blocks.Interfaces.DiscreteSISO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.partialBooleanSO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with 1 output Boolean signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.partialBooleanSO moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Interfaces.partialBooleanSO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSO.y.
msl:Modelica.Blocks.Interfaces.partialBooleanSO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.RealOutput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.IntegerOutput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.IntegerInput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1 rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return 1st derivative (der of state1)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.Functions.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1 moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1.u.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Required values for state and der(s)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1.sder1.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1.sder1 a moont:MComponent ;
	 moont:identifier "sder1";
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1.dummy.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1.dummy a moont:MComponent ;
	 moont:identifier "dummy";
	 moont:stringComment "Just to have one input signal that should be differentiated to avoid possible problems in the Modelica tool (is not used)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1.dummy_der.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1der1.dummy_der a moont:MComponent ;
	 moont:identifier "dummy_der";
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor rdfs:subClassOf moont:MModel;
	 moont:stringComment "Signal adaptor for a connector with flow, 1st derivative of flow, and 2nd derivative of flow as inputs and_  potential, 1st derivative of potential, and 2nd derivative of potential as outputs (especially useful for FMUs)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_p.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_p a moont:MParameterComponent;
	 moont:identifier "Name_p";
	 moont:type msl:String;
	 moont:stringComment "Name of potential variable"^^xsd:string;
	 moont:modification "_gleich_\"p"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_fder.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_fder a moont:MParameterComponent;
	 moont:identifier "Name_fder";
	 moont:type msl:String;
	 moont:stringComment "Name of 1st derivative of flow variable"^^xsd:string;
	 moont:modification "_gleich_\"der(f)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.use_pder2.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.use_pder2 a moont:MParameterComponent;
	 moont:identifier "use_pder2";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use output for 2nd derivative of potential (only if 1st derivate is used, too)"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.use_pder.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.use_pder a moont:MParameterComponent;
	 moont:identifier "use_pder";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use output for 1st derivative of potential"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_fder2.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_fder2 a moont:MParameterComponent;
	 moont:identifier "Name_fder2";
	 moont:type msl:String;
	 moont:stringComment "Name of 2nd derivative of flow variable"^^xsd:string;
	 moont:modification "_gleich_\"der2(f)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.use_fder.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.use_fder a moont:MParameterComponent;
	 moont:identifier "use_fder";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use input for 1st derivative of flow"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.use_fder2.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.use_fder2 a moont:MParameterComponent;
	 moont:identifier "use_fder2";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use input for 2nd derivative of flow (only if 1st derivate is used, too)"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_f.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_f a moont:MParameterComponent;
	 moont:identifier "Name_f";
	 moont:type msl:String;
	 moont:stringComment "Name of flow variable"^^xsd:string;
	 moont:modification "_gleich_\"f"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_pder.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_pder a moont:MParameterComponent;
	 moont:identifier "Name_pder";
	 moont:type msl:String;
	 moont:stringComment "Name of 1st derivative of potential variable"^^xsd:string;
	 moont:modification "_gleich_\"der(p)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_pder2.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.Name_pder2 a moont:MParameterComponent;
	 moont:identifier "Name_pder2";
	 moont:type msl:String;
	 moont:stringComment "Name of 2nd derivative of potential variable"^^xsd:string;
	 moont:modification "_gleich_\"der2(p)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.f.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.f a moont:MComponent ;
	 moont:identifier "f";
	 moont:stringComment "Input for flow"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.y1.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.y1 a moont:MComponent ;
	 moont:identifier "y1";
	 moont:stringComment "Optional 1st derivative of output"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.y.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "output signal"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.y2.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.y2 a moont:MComponent ;
	 moont:identifier "y2";
	 moont:stringComment "Optional 2nd derivative of output"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.pder.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.pder a moont:MComponent ;
	 moont:identifier "pder";
	 moont:stringComment "Optional output for der(potential)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.pder2.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.pder2 a moont:MComponent ;
	 moont:identifier "pder2";
	 moont:stringComment "Optional output for der2(potential)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.u.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "input signal"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.fder2.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.fder2 a moont:MComponent ;
	 moont:identifier "fder2";
	 moont:stringComment "Optional input for der2(flow)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.p.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.p a moont:MComponent ;
	 moont:identifier "p";
	 moont:stringComment "Output for potential"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.fder.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.fder a moont:MComponent ;
	 moont:identifier "fder";
	 moont:stringComment "Optional input for der(flow)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.u2.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Optional 2nd derivative of input"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.u1.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Optional 1st derivative of input"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.y1 moont:connectedTo msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.pder.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.y2 moont:connectedTo msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.pder2.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.fder moont:connectedTo msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.u1.
msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.fder2 moont:connectedTo msl:Modelica.Blocks.Interfaces.Adaptors.FlowToPotentialAdaptor.u2.
msl:Modelica.Blocks.Interfaces.Adaptors.SendReal rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Obsolete block to send Real signal to bus"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.
msl:Modelica.Blocks.Interfaces.Adaptors.SendReal moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.Adaptors.SendReal moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.SendReal.toBus.
msl:Modelica.Blocks.Interfaces.Adaptors.SendReal.toBus a moont:MComponent ;
	 moont:identifier "toBus";
	 moont:stringComment "Output signal to be connected to bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.SendReal moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.SendReal.u.
msl:Modelica.Blocks.Interfaces.Adaptors.SendReal.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Input signal to be send to bus"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.SISO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Single Input Single Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.SISO moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.SISO moont:hasPart msl:Modelica.Blocks.Interfaces.SISO.y.
msl:Modelica.Blocks.Interfaces.SISO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.SISO moont:hasPart msl:Modelica.Blocks.Interfaces.SISO.u.
msl:Modelica.Blocks.Interfaces.SISO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.MISO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multiple Input Single Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.MISO moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.MISO moont:hasPart msl:Modelica.Blocks.Interfaces.MISO.nin.
msl:Modelica.Blocks.Interfaces.MISO.nin a moont:MParameterComponent;
	 moont:identifier "nin";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of inputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MISO moont:hasPart msl:Modelica.Blocks.Interfaces.MISO.y.
msl:Modelica.Blocks.Interfaces.MISO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.MISO moont:hasPart msl:Modelica.Blocks.Interfaces.MISO.u.
msl:Modelica.Blocks.Interfaces.MISO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1 rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return state (with one derivative)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.Functions.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1 moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1.u.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Required values for state and der(s)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1.s.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1.s a moont:MComponent ;
	 moont:identifier "s";
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1.dummy.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state1.dummy a moont:MComponent ;
	 moont:identifier "dummy";
	 moont:stringComment "Just to have one input signal that should be differentiated to avoid possible problems in the Modelica tool (is not used)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.BooleanOutput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.DiscreteMIMOs rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multiple Input Multiple Output discrete control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.DiscreteMIMOs moont:extends msl:Modelica.Blocks.Interfaces.DiscreteBlock.
msl:Modelica.Blocks.Interfaces.DiscreteMIMOs moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteMIMOs.n.
msl:Modelica.Blocks.Interfaces.DiscreteMIMOs.n a moont:MParameterComponent;
	 moont:identifier "n";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of inputs (_gleich_ number of outputs)"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.DiscreteMIMOs moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteMIMOs.y.
msl:Modelica.Blocks.Interfaces.DiscreteMIMOs.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.DiscreteMIMOs moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteMIMOs.u.
msl:Modelica.Blocks.Interfaces.DiscreteMIMOs.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with 3 input and 1 output Boolean signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO.u3.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO.u3 a moont:MComponent ;
	 moont:identifier "u3";
	 moont:stringComment "Connector of third Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO.u1.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Connector of first Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO.y.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO.u2.
msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Connector of second Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.BooleanSignalSource rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Base class for Boolean signal sources"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.BooleanSignalSource moont:extends msl:Modelica.Blocks.Icons.BooleanBlock.
msl:Modelica.Blocks.Interfaces.BooleanSignalSource moont:hasPart msl:Modelica.Blocks.Interfaces.BooleanSignalSource.y.
msl:Modelica.Blocks.Interfaces.BooleanSignalSource.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.DiscreteBlockIcon rdfs:subClassOf moont:MBlock;
	 moont:stringComment "This icon will be removed in future Modelica versions, use Modelica.Blocks.Icons.DiscreteBlock instead."^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.DiscreteBlockIcon moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Interfaces.MVdiscrete rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Discrete Multi-Variable controller"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.MVdiscrete moont:extends msl:Modelica.Blocks.Interfaces.DiscreteBlock.
msl:Modelica.Blocks.Interfaces.MVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.nu_m.
msl:Modelica.Blocks.Interfaces.MVdiscrete.nu_m a moont:MParameterComponent;
	 moont:identifier "nu_m";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of measurement inputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.ny.
msl:Modelica.Blocks.Interfaces.MVdiscrete.ny a moont:MParameterComponent;
	 moont:identifier "ny";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of actuator outputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.nu_s.
msl:Modelica.Blocks.Interfaces.MVdiscrete.nu_s a moont:MParameterComponent;
	 moont:identifier "nu_s";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of setpoint inputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.y.
msl:Modelica.Blocks.Interfaces.MVdiscrete.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Actuator output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.MVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_s.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_s a moont:MComponent ;
	 moont:identifier "sampler_s";
	 a msl:Modelica.Blocks.Discrete.Sampler.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_s.eachfinalsamplePeriod moont:modification "samplePeriod"^^xsd:String.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_s.eachfinalstartTime moont:modification "startTime"^^xsd:String.
msl:Modelica.Blocks.Interfaces.MVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.u_m.
msl:Modelica.Blocks.Interfaces.MVdiscrete.u_m a moont:MComponent ;
	 moont:identifier "u_m";
	 moont:stringComment "Measurement input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.MVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_m.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_m a moont:MComponent ;
	 moont:identifier "sampler_m";
	 a msl:Modelica.Blocks.Discrete.Sampler.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_m.eachfinalsamplePeriod moont:modification "samplePeriod"^^xsd:String.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_m.eachfinalstartTime moont:modification "startTime"^^xsd:String.
msl:Modelica.Blocks.Interfaces.MVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.u_s.
msl:Modelica.Blocks.Interfaces.MVdiscrete.u_s a moont:MComponent ;
	 moont:identifier "u_s";
	 moont:stringComment "Setpoint input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.MVdiscrete.u_s moont:connectedTo msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_s.u.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_s moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_s.u.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_s.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_s.u moont:identifier "u".
msl:Modelica.Blocks.Interfaces.MVdiscrete.u_m moont:connectedTo msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_m.u.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_m moont:hasPart msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_m.u.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_m.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Interfaces.MVdiscrete.sampler_m.u moont:identifier "u".
msl:Modelica.Blocks.Interfaces.BooleanVectorInput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.PartialConversionBlock rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block defining the interface for conversion blocks"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.PartialConversionBlock moont:hasPart msl:Modelica.Blocks.Interfaces.PartialConversionBlock.u.
msl:Modelica.Blocks.Interfaces.PartialConversionBlock.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signal to be converted"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.PartialConversionBlock moont:hasPart msl:Modelica.Blocks.Interfaces.PartialConversionBlock.y.
msl:Modelica.Blocks.Interfaces.PartialConversionBlock.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal containing input signal u in another unit"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.RealVectorOutput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.IntegerVectorInput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.BooleanMIMOs rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multiple Input Multiple Output continuous control block with same number of inputs and outputs of Boolean type"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.BooleanMIMOs moont:extends msl:Modelica.Blocks.Icons.BooleanBlock.
msl:Modelica.Blocks.Interfaces.BooleanMIMOs moont:hasPart msl:Modelica.Blocks.Interfaces.BooleanMIMOs.n.
msl:Modelica.Blocks.Interfaces.BooleanMIMOs.n a moont:MParameterComponent;
	 moont:identifier "n";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of inputs (_gleich_ number of outputs)"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.BooleanMIMOs moont:hasPart msl:Modelica.Blocks.Interfaces.BooleanMIMOs.u.
msl:Modelica.Blocks.Interfaces.BooleanMIMOs.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Boolean input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.BooleanMIMOs moont:hasPart msl:Modelica.Blocks.Interfaces.BooleanMIMOs.y.
msl:Modelica.Blocks.Interfaces.BooleanMIMOs.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.PartialBooleanMISO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with a BooleanVectorInput and a BooleanOutput signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.PartialBooleanMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.nu.
msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.nu a moont:MParameterComponent;
	 moont:identifier "nu";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of input connections"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_0"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialBooleanMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.y.
msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.PartialBooleanMISO moont:hasPart msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.u.
msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Vector of Boolean input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanVectorInput.
msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multiple Integer Input Multiple Boolean Output continuous control block with same number of inputs and outputs"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs moont:extends msl:Modelica.Blocks.Icons.BooleanBlock.
msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs.n.
msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs.n a moont:MParameterComponent;
	 moont:identifier "n";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of inputs (_gleich_ number of outputs)"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs.u.
msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Integer input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerInput.
msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs.y.
msl:Modelica.Blocks.Interfaces.IntegerMIBooleanMOs.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial block with a BooleanInput and a BooleanOutput signal and a small block icon"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small moont:hasPart msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small.u.
msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small moont:hasPart msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small.y.
msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.partialBooleanSource rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial source block (has 1 output Boolean signal and an appropriate default icon)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.partialBooleanSource moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Interfaces.partialBooleanSource moont:hasPart msl:Modelica.Blocks.Interfaces.partialBooleanSource.y.
msl:Modelica.Blocks.Interfaces.partialBooleanSource.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Boolean output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Interfaces.SignalSource rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Base class for continuous signal source"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.SignalSource moont:extends msl:Modelica.Blocks.Interfaces.SO.
msl:Modelica.Blocks.Interfaces.SignalSource moont:hasPart msl:Modelica.Blocks.Interfaces.SignalSource.startTime.
msl:Modelica.Blocks.Interfaces.SignalSource.startTime a moont:MParameterComponent;
	 moont:identifier "startTime";
	 moont:type msl:SIunits.Time;
	 moont:stringComment "Output y _gleich_ offset for time < startTime"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.SignalSource moont:hasPart msl:Modelica.Blocks.Interfaces.SignalSource.offset.
msl:Modelica.Blocks.Interfaces.SignalSource.offset a moont:MParameterComponent;
	 moont:identifier "offset";
	 moont:type xsd:Real;
	 moont:stringComment "Offset of output signal y"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor rdfs:subClassOf moont:MModel;
	 moont:stringComment "Signal adaptor for a connector with potential, 1st derivative of potential, and 2nd derivative of potential as inputs and_  flow, 1st derivative of flow, and 2nd derivative of flow as outputs (especially useful for FMUs)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.use_fder2.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.use_fder2 a moont:MParameterComponent;
	 moont:identifier "use_fder2";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use output for 2nd derivative of flow (only if 1st derivate is used, too)"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.use_pder.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.use_pder a moont:MParameterComponent;
	 moont:identifier "use_pder";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use input for 1st derivative of potential"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_p.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_p a moont:MParameterComponent;
	 moont:identifier "Name_p";
	 moont:type msl:String;
	 moont:stringComment "Name of potential variable"^^xsd:string;
	 moont:modification "_gleich_\"p"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.use_fder.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.use_fder a moont:MParameterComponent;
	 moont:identifier "use_fder";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use output for 1st derivative of flow"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_pder2.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_pder2 a moont:MParameterComponent;
	 moont:identifier "Name_pder2";
	 moont:type msl:String;
	 moont:stringComment "Name of 2nd derivative of potential variable"^^xsd:string;
	 moont:modification "_gleich_\"der2(p)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_pder.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_pder a moont:MParameterComponent;
	 moont:identifier "Name_pder";
	 moont:type msl:String;
	 moont:stringComment "Name of 1st derivative of potential variable"^^xsd:string;
	 moont:modification "_gleich_\"der(p)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_f.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_f a moont:MParameterComponent;
	 moont:identifier "Name_f";
	 moont:type msl:String;
	 moont:stringComment "Name of flow variable"^^xsd:string;
	 moont:modification "_gleich_\"f"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_fder.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_fder a moont:MParameterComponent;
	 moont:identifier "Name_fder";
	 moont:type msl:String;
	 moont:stringComment "Name of 1st derivative of flow variable"^^xsd:string;
	 moont:modification "_gleich_\"der(f)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_fder2.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.Name_fder2 a moont:MParameterComponent;
	 moont:identifier "Name_fder2";
	 moont:type msl:String;
	 moont:stringComment "Name of 2nd derivative of flow variable"^^xsd:string;
	 moont:modification "_gleich_\"der2(f)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.use_pder2.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.use_pder2 a moont:MParameterComponent;
	 moont:identifier "use_pder2";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use input for 2nd derivative of potential (only if 1st derivate is used, too)"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.u2.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Optional 2nd derivative of input"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.u.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "input signal"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.fder.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.fder a moont:MComponent ;
	 moont:identifier "fder";
	 moont:stringComment "Optional output for der(flow)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.y.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "output signal"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.fder2.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.fder2 a moont:MComponent ;
	 moont:identifier "fder2";
	 moont:stringComment "Optional output for der2(flow)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.u1.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Optional 1st derivative of input"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.pder.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.pder a moont:MComponent ;
	 moont:identifier "pder";
	 moont:stringComment "Optional input for der(potential)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.f.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.f a moont:MComponent ;
	 moont:identifier "f";
	 moont:stringComment "Output for flow"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.pder2.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.pder2 a moont:MComponent ;
	 moont:identifier "pder2";
	 moont:stringComment "Optional input for der2(potential)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.y2.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.y2 a moont:MComponent ;
	 moont:identifier "y2";
	 moont:stringComment "Optional 2nd derivative of output"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.p.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.p a moont:MComponent ;
	 moont:identifier "p";
	 moont:stringComment "Input for potential"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.y1.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.y1 a moont:MComponent ;
	 moont:identifier "y1";
	 moont:stringComment "Optional 1st derivative of output"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.y1 moont:connectedTo msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.fder.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.y2 moont:connectedTo msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.fder2.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.pder moont:connectedTo msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.u1.
msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.pder2 moont:connectedTo msl:Modelica.Blocks.Interfaces.Adaptors.PotentialToFlowAdaptor.u2.
msl:Modelica.Blocks.Interfaces.MVcontrol rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multi-Variable continuous controller"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.MVcontrol moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.MVcontrol moont:hasPart msl:Modelica.Blocks.Interfaces.MVcontrol.nu_m.
msl:Modelica.Blocks.Interfaces.MVcontrol.nu_m a moont:MParameterComponent;
	 moont:identifier "nu_m";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of measurement inputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MVcontrol moont:hasPart msl:Modelica.Blocks.Interfaces.MVcontrol.ny.
msl:Modelica.Blocks.Interfaces.MVcontrol.ny a moont:MParameterComponent;
	 moont:identifier "ny";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of actuator outputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MVcontrol moont:hasPart msl:Modelica.Blocks.Interfaces.MVcontrol.nu_s.
msl:Modelica.Blocks.Interfaces.MVcontrol.nu_s a moont:MParameterComponent;
	 moont:identifier "nu_s";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of setpoint inputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.MVcontrol moont:hasPart msl:Modelica.Blocks.Interfaces.MVcontrol.y.
msl:Modelica.Blocks.Interfaces.MVcontrol.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of actuator output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.MVcontrol moont:hasPart msl:Modelica.Blocks.Interfaces.MVcontrol.u_m.
msl:Modelica.Blocks.Interfaces.MVcontrol.u_m a moont:MComponent ;
	 moont:identifier "u_m";
	 moont:stringComment "Connector of measurement input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.MVcontrol moont:hasPart msl:Modelica.Blocks.Interfaces.MVcontrol.u_s.
msl:Modelica.Blocks.Interfaces.MVcontrol.u_s a moont:MComponent ;
	 moont:identifier "u_s";
	 moont:stringComment "Connector of setpoint input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.IntegerSO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Single Integer Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.IntegerSO moont:extends msl:Modelica.Blocks.Icons.IntegerBlock.
msl:Modelica.Blocks.Interfaces.IntegerSO moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerSO.y.
msl:Modelica.Blocks.Interfaces.IntegerSO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Integer output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.Interfaces.SIMO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Single Input Multiple Output continuous control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.SIMO moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Interfaces.SIMO moont:hasPart msl:Modelica.Blocks.Interfaces.SIMO.nout.
msl:Modelica.Blocks.Interfaces.SIMO.nout a moont:MParameterComponent;
	 moont:identifier "nout";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of outputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.SIMO moont:hasPart msl:Modelica.Blocks.Interfaces.SIMO.u.
msl:Modelica.Blocks.Interfaces.SIMO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.SIMO moont:hasPart msl:Modelica.Blocks.Interfaces.SIMO.y.
msl:Modelica.Blocks.Interfaces.SIMO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Multiple Input Multiple Output discrete control block"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO moont:extends msl:Modelica.Blocks.Interfaces.DiscreteBlock.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteMIMO.nout.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO.nout a moont:MParameterComponent;
	 moont:identifier "nout";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of outputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteMIMO.nin.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO.nin a moont:MParameterComponent;
	 moont:identifier "nin";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of inputs"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteMIMO.u.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO moont:hasPart msl:Modelica.Blocks.Interfaces.DiscreteMIMO.y.
msl:Modelica.Blocks.Interfaces.DiscreteMIMO.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signals"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.RealInput rdfs:subClassOf moont:MConnector;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1 rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return 1st derivative (der of state2)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.Functions.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1 moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1.dummy.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1.dummy a moont:MComponent ;
	 moont:identifier "dummy";
	 moont:stringComment "Just to have one input signal that should be differentiated to avoid possible problems in the Modelica tool (is not used)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1.dummy_der.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1.dummy_der a moont:MComponent ;
	 moont:identifier "dummy_der";
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1.sder1.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1.sder1 a moont:MComponent ;
	 moont:identifier "sder1";
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1.u.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der1.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Required values for state and der(s)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.IntegerSignalSource rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Base class for continuous Integer signal source"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.IntegerSignalSource moont:extends msl:Modelica.Blocks.Interfaces.IntegerSO.
msl:Modelica.Blocks.Interfaces.IntegerSignalSource moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerSignalSource.offset.
msl:Modelica.Blocks.Interfaces.IntegerSignalSource.offset a moont:MParameterComponent;
	 moont:identifier "offset";
	 moont:type xsd:Integer;
	 moont:stringComment "Offset of output signal y"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.IntegerSignalSource moont:hasPart msl:Modelica.Blocks.Interfaces.IntegerSignalSource.startTime.
msl:Modelica.Blocks.Interfaces.IntegerSignalSource.startTime a moont:MParameterComponent;
	 moont:identifier "startTime";
	 moont:type msl:SI.Time;
	 moont:stringComment "Output y _gleich_ offset for time < startTime"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2 rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return 2nd derivative (der of state2der1)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.Functions.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2 moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.u.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Required values for state and der(s)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.dummy_der.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.dummy_der a moont:MComponent ;
	 moont:identifier "dummy_der";
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.dummy_der2.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.dummy_der2 a moont:MComponent ;
	 moont:identifier "dummy_der2";
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.dummy.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.dummy a moont:MComponent ;
	 moont:identifier "dummy";
	 moont:stringComment "Just to have one input signal that should be differentiated to avoid possible problems in the Modelica tool (is not used)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.sder2.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2der2.sder2 a moont:MComponent ;
	 moont:identifier "sder2";
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.PartialNoise rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Partial noise generator"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:extends msl:Modelica.Blocks.Interfaces.SO.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.enableNoise.
msl:Modelica.Blocks.Interfaces.PartialNoise.enableNoise a moont:MParameterComponent;
	 moont:identifier "enableNoise";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_true: y _gleich_ noise, otherwise y _gleich_ y_off"^^xsd:string;
	 moont:modification "_gleich_globalSeed.enableNoise"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.useGlobalSeed.
msl:Modelica.Blocks.Interfaces.PartialNoise.useGlobalSeed a moont:MParameterComponent;
	 moont:identifier "useGlobalSeed";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true: use global seed, otherwise ignore it"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.y_off.
msl:Modelica.Blocks.Interfaces.PartialNoise.y_off a moont:MParameterComponent;
	 moont:identifier "y_off";
	 moont:type xsd:Real;
	 moont:stringComment "y _gleich_ y_off if enableNoise_gleich_false (or time<startTime, see below)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.samplePeriod.
msl:Modelica.Blocks.Interfaces.PartialNoise.samplePeriod a moont:MParameterComponent;
	 moont:identifier "samplePeriod";
	 moont:type msl:Modelica.SIunits.Period;
	 moont:stringComment "Period for sampling the raw random numbers"^^xsd:string;
	 moont:modification "(start_gleich_0.01)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.fixedLocalSeed.
msl:Modelica.Blocks.Interfaces.PartialNoise.fixedLocalSeed a moont:MParameterComponent;
	 moont:identifier "fixedLocalSeed";
	 moont:type xsd:Integer;
	 moont:stringComment "Local seed (any Integer number)"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.localSeed.
msl:Modelica.Blocks.Interfaces.PartialNoise.localSeed a moont:MParameterComponent;
	 moont:identifier "localSeed";
	 moont:type xsd:Integer;
	 moont:stringComment "The actual localSeed"^^xsd:string;
	 moont:modification "(fixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.useAutomaticLocalSeed.
msl:Modelica.Blocks.Interfaces.PartialNoise.useAutomaticLocalSeed a moont:MParameterComponent;
	 moont:identifier "useAutomaticLocalSeed";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true: use automatic local seed, otherwise use fixedLocalSeed"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.generateNoise.
msl:Modelica.Blocks.Interfaces.PartialNoise.generateNoise a moont:MParameterComponent;
	 moont:identifier "generateNoise";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true if noise shall be generated, otherwise no noise"^^xsd:string;
	 moont:modification "_gleich_enableNoiseandglobalSeed.enableNoise"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.startTime.
msl:Modelica.Blocks.Interfaces.PartialNoise.startTime a moont:MParameterComponent;
	 moont:identifier "startTime";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Start time for sampling the raw random numbers"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.actualGlobalSeed.
msl:Modelica.Blocks.Interfaces.PartialNoise.actualGlobalSeed a moont:MParameterComponent;
	 moont:identifier "actualGlobalSeed";
	 moont:type xsd:Integer;
	 moont:stringComment "The global seed, which is actually used"^^xsd:string;
	 moont:modification "_gleich_ifuseGlobalSeedthenglobalSeed.seedelse0"^^xsd:string.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.state.
msl:Modelica.Blocks.Interfaces.PartialNoise.state a moont:MComponent ;
	 moont:identifier "state";
	 moont:stringComment "Internal state of random number generator"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.r_raw.
msl:Modelica.Blocks.Interfaces.PartialNoise.r_raw a moont:MComponent ;
	 moont:identifier "r_raw";
	 moont:stringComment "Uniform random number in the range (0,1_"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.globalSeed.
msl:Modelica.Blocks.Interfaces.PartialNoise.globalSeed a moont:MComponent ;
	 moont:identifier "globalSeed";
	 moont:stringComment "Definition of global seed via inner/outer"^^xsd:string;
	 a msl:Modelica.Blocks.Noise.GlobalSeed.
msl:Modelica.Blocks.Interfaces.PartialNoise moont:hasPart msl:Modelica.Blocks.Interfaces.PartialNoise.r.
msl:Modelica.Blocks.Interfaces.PartialNoise.r a moont:MComponent ;
	 moont:identifier "r";
	 moont:stringComment "Random number according to the desired distribution"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.SVdiscrete rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Discrete Single-Variable controller"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.SVdiscrete moont:extends msl:Modelica.Blocks.Interfaces.DiscreteBlock.
msl:Modelica.Blocks.Interfaces.SVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_m.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_m a moont:MComponent ;
	 moont:identifier "sampler_m";
	 a msl:Modelica.Blocks.Discrete.Sampler.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_m.finalsamplePeriod moont:modification "samplePeriod"^^xsd:String.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_m.finalstartTime moont:modification "startTime"^^xsd:String.
msl:Modelica.Blocks.Interfaces.SVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.SVdiscrete.y.
msl:Modelica.Blocks.Interfaces.SVdiscrete.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Scalar actuator output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Interfaces.SVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_s.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_s a moont:MComponent ;
	 moont:identifier "sampler_s";
	 a msl:Modelica.Blocks.Discrete.Sampler.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_s.finalsamplePeriod moont:modification "samplePeriod"^^xsd:String.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_s.finalstartTime moont:modification "startTime"^^xsd:String.
msl:Modelica.Blocks.Interfaces.SVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.SVdiscrete.u_s.
msl:Modelica.Blocks.Interfaces.SVdiscrete.u_s a moont:MComponent ;
	 moont:identifier "u_s";
	 moont:stringComment "Scalar setpoint input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.SVdiscrete moont:hasPart msl:Modelica.Blocks.Interfaces.SVdiscrete.u_m.
msl:Modelica.Blocks.Interfaces.SVdiscrete.u_m a moont:MComponent ;
	 moont:identifier "u_m";
	 moont:stringComment "Scalar measurement input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Interfaces.SVdiscrete.u_s moont:connectedTo msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_s.u.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_s moont:hasPart msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_s.u.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_s.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_s.u moont:identifier "u".
msl:Modelica.Blocks.Interfaces.SVdiscrete.u_m moont:connectedTo msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_m.u.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_m moont:hasPart msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_m.u.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_m.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Interfaces.SVdiscrete.sampler_m.u moont:identifier "u".
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2 rdfs:subClassOf moont:MFunction;
	 moont:stringComment "Return state (with two derivatives)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces.Adaptors.Functions.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2 moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2.u.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Required values for state and der(s)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2.s.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2.s a moont:MComponent ;
	 moont:identifier "s";
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2 moont:hasPart msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2.dummy.
msl:Modelica.Blocks.Interfaces.Adaptors.Functions.state2.dummy a moont:MComponent ;
	 moont:identifier "dummy";
	 moont:stringComment "Just to have one input signal that should be differentiated to avoid possible problems in the Modelica tool (is not used)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Interfaces.BlockIcon rdfs:subClassOf moont:MBlock;
	 moont:stringComment "This icon will be removed in future Modelica versions, use Modelica.Blocks.Icons.Block instead."^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Interfaces;
	 moont:isPartial "true"^^xsd:boolean.
msl:Modelica.Blocks.Interfaces.BlockIcon moont:extends msl:Modelica.Icons.ObsoleteModel.
msl:Modelica.Blocks.Logical.Edge rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if the input u has a rising edge (y _gleich_ edge(u))"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Edge moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSISO.
msl:Modelica.Blocks.Logical.Edge moont:hasPart msl:Modelica.Blocks.Logical.Edge.pre_u_start.
msl:Modelica.Blocks.Logical.Edge.pre_u_start a moont:MParameterComponent;
	 moont:identifier "pre_u_start";
	 moont:type xsd:Boolean;
	 moont:stringComment "Start value of pre(u) at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Logical.FallingEdge rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if the input u has a falling edge (y _gleich_ edge(not u))"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.FallingEdge moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSISO.
msl:Modelica.Blocks.Logical.FallingEdge moont:hasPart msl:Modelica.Blocks.Logical.FallingEdge.pre_u_start.
msl:Modelica.Blocks.Logical.FallingEdge.pre_u_start a moont:MParameterComponent;
	 moont:identifier "pre_u_start";
	 moont:type xsd:Boolean;
	 moont:stringComment "Start value of pre(u) at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Logical.FallingEdge moont:hasPart msl:Modelica.Blocks.Logical.FallingEdge.not_u.
msl:Modelica.Blocks.Logical.FallingEdge.not_u a moont:MComponent ;
	 moont:identifier "not_u";
	 a msl:Boolean.
msl:Modelica.Blocks.Logical.LessEqual rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if input u1 is less or equal than input u2"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.LessEqual moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanComparison.
msl:Modelica.Blocks.Logical.GreaterThreshold rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if input u is greater than threshold"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.GreaterThreshold moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.
msl:Modelica.Blocks.Logical.ZeroCrossing rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Trigger zero crossing of input u"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.ZeroCrossing moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSO.
msl:Modelica.Blocks.Logical.ZeroCrossing moont:hasPart msl:Modelica.Blocks.Logical.ZeroCrossing.u.
msl:Modelica.Blocks.Logical.ZeroCrossing.u a moont:MComponent ;
	 moont:identifier "u";
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Logical.ZeroCrossing moont:hasPart msl:Modelica.Blocks.Logical.ZeroCrossing.disable.
msl:Modelica.Blocks.Logical.ZeroCrossing.disable a moont:MComponent ;
	 moont:identifier "disable";
	 a msl:Boolean.
msl:Modelica.Blocks.Logical.ZeroCrossing moont:hasPart msl:Modelica.Blocks.Logical.ZeroCrossing.u_pos.
msl:Modelica.Blocks.Logical.ZeroCrossing.u_pos a moont:MComponent ;
	 moont:identifier "u_pos";
	 a msl:Boolean.
msl:Modelica.Blocks.Logical.ZeroCrossing moont:hasPart msl:Modelica.Blocks.Logical.ZeroCrossing.enable.
msl:Modelica.Blocks.Logical.ZeroCrossing.enable a moont:MComponent ;
	 moont:identifier "enable";
	 moont:stringComment "Zero input crossing is triggered if the enable input signal is true"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Logical.RSFlipFlop rdfs:subClassOf moont:MBlock;
	 moont:stringComment "A basic RS Flip Flop"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.RSFlipFlop moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Logical.RSFlipFlop moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.Qini.
msl:Modelica.Blocks.Logical.RSFlipFlop.Qini a moont:MParameterComponent;
	 moont:identifier "Qini";
	 moont:type xsd:Boolean;
	 moont:stringComment "Start value of Q at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Logical.RSFlipFlop moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.R.
msl:Modelica.Blocks.Logical.RSFlipFlop.R a moont:MComponent ;
	 moont:identifier "R";
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Logical.RSFlipFlop moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.Q.
msl:Modelica.Blocks.Logical.RSFlipFlop.Q a moont:MComponent ;
	 moont:identifier "Q";
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Logical.RSFlipFlop moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.S.
msl:Modelica.Blocks.Logical.RSFlipFlop.S a moont:MComponent ;
	 moont:identifier "S";
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Logical.RSFlipFlop moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.pre.
msl:Modelica.Blocks.Logical.RSFlipFlop.pre a moont:MComponent ;
	 moont:identifier "pre";
	 a msl:Modelica.Blocks.Logical.Pre.
msl:Modelica.Blocks.Logical.RSFlipFlop.pre.pre_u_start moont:modification "not(Qini)"^^xsd:String.
msl:Modelica.Blocks.Logical.RSFlipFlop moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.QI.
msl:Modelica.Blocks.Logical.RSFlipFlop.QI a moont:MComponent ;
	 moont:identifier "QI";
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Logical.RSFlipFlop moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1 a moont:MComponent ;
	 moont:identifier "nor1";
	 a msl:Modelica.Blocks.Logical.Nor.
msl:Modelica.Blocks.Logical.RSFlipFlop moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.nor.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor a moont:MComponent ;
	 moont:identifier "nor";
	 a msl:Modelica.Blocks.Logical.Nor.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1 moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.y.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.y moont:identifier "y".
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.y moont:connectedTo msl:Modelica.Blocks.Logical.RSFlipFlop.nor.u2.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.nor.u2.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor.u2 moont:identifier "u2".
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1 moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.y.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.y moont:identifier "y".
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.y moont:connectedTo msl:Modelica.Blocks.Logical.RSFlipFlop.Q.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.nor.y.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor.y moont:identifier "y".
msl:Modelica.Blocks.Logical.RSFlipFlop.nor.y moont:connectedTo msl:Modelica.Blocks.Logical.RSFlipFlop.pre.u.
msl:Modelica.Blocks.Logical.RSFlipFlop.pre moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.pre.u.
msl:Modelica.Blocks.Logical.RSFlipFlop.pre.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.pre.u moont:identifier "u".
msl:Modelica.Blocks.Logical.RSFlipFlop.pre moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.pre.y.
msl:Modelica.Blocks.Logical.RSFlipFlop.pre.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.pre.y moont:identifier "y".
msl:Modelica.Blocks.Logical.RSFlipFlop.pre.y moont:connectedTo msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.u1.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1 moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.u1.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.u1 moont:identifier "u1".
msl:Modelica.Blocks.Logical.RSFlipFlop.pre moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.pre.y.
msl:Modelica.Blocks.Logical.RSFlipFlop.pre.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.pre.y moont:identifier "y".
msl:Modelica.Blocks.Logical.RSFlipFlop.pre.y moont:connectedTo msl:Modelica.Blocks.Logical.RSFlipFlop.QI.
msl:Modelica.Blocks.Logical.RSFlipFlop.S moont:connectedTo msl:Modelica.Blocks.Logical.RSFlipFlop.nor.u1.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.nor.u1.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor.u1 moont:identifier "u1".
msl:Modelica.Blocks.Logical.RSFlipFlop.R moont:connectedTo msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.u2.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1 moont:hasPart msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.u2.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Logical.RSFlipFlop.nor1.u2 moont:identifier "u2".
msl:Modelica.Blocks.Logical.Nor rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _nor_: y _gleich_ not (u1 or u2)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Nor moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.
msl:Modelica.Blocks.Logical.GreaterEqualThreshold rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if input u is greater or equal than threshold"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.GreaterEqualThreshold moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.
msl:Modelica.Blocks.Logical.Less rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if input u1 is less than input u2"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Less moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanComparison.
msl:Modelica.Blocks.Logical.Timer rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Timer measuring the time from the time instant where the Boolean input became true"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Timer moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Logical.Timer moont:hasPart msl:Modelica.Blocks.Logical.Timer.entryTime.
msl:Modelica.Blocks.Logical.Timer.entryTime a moont:MComponent ;
	 moont:identifier "entryTime";
	 moont:stringComment "Time instant when u became true"^^xsd:string;
	 a msl:Modelica.SIunits.Time.
msl:Modelica.Blocks.Logical.Timer moont:hasPart msl:Modelica.Blocks.Logical.Timer.u.
msl:Modelica.Blocks.Logical.Timer.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Logical.Timer moont:hasPart msl:Modelica.Blocks.Logical.Timer.y.
msl:Modelica.Blocks.Logical.Timer.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Logical.TerminateSimulation rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Terminate simulation if condition is fulfilled"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.TerminateSimulation moont:hasPart msl:Modelica.Blocks.Logical.TerminateSimulation.terminationText.
msl:Modelica.Blocks.Logical.TerminateSimulation.terminationText a moont:MParameterComponent;
	 moont:identifier "terminationText";
	 moont:type msl:String;
	 moont:stringComment "Text that will be displayed when simulation is terminated"^^xsd:string;
	 moont:modification "_gleich_\"... End condition reached"^^xsd:string.
msl:Modelica.Blocks.Logical.TerminateSimulation moont:hasPart msl:Modelica.Blocks.Logical.TerminateSimulation.condition.
msl:Modelica.Blocks.Logical.TerminateSimulation.condition a moont:MComponent ;
	 moont:identifier "condition";
	 moont:stringComment "Terminate simulation when condition becomes true"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Logical.GreaterEqual rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if input u1 is greater or equal than input u2"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.GreaterEqual moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanComparison.
msl:Modelica.Blocks.Logical.Not rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _not_: y _gleich_ not u"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Not moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSISO.
msl:Modelica.Blocks.Logical.Xor rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _xor_: y _gleich_ u1 xor u2"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Xor moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.
msl:Modelica.Blocks.Logical.LessEqualThreshold rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if input u is less or equal than threshold"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.LessEqualThreshold moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.
msl:Modelica.Blocks.Logical.Switch rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Switch between two Real signals"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Switch moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Logical.Switch moont:hasPart msl:Modelica.Blocks.Logical.Switch.u2.
msl:Modelica.Blocks.Logical.Switch.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Connector of Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Logical.Switch moont:hasPart msl:Modelica.Blocks.Logical.Switch.u1.
msl:Modelica.Blocks.Logical.Switch.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Connector of first Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Logical.Switch moont:hasPart msl:Modelica.Blocks.Logical.Switch.u3.
msl:Modelica.Blocks.Logical.Switch.u3 a moont:MComponent ;
	 moont:identifier "u3";
	 moont:stringComment "Connector of second Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Logical.Switch moont:hasPart msl:Modelica.Blocks.Logical.Switch.y.
msl:Modelica.Blocks.Logical.Switch.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Logical.Or rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _or_: y _gleich_ u1 or u2"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Or moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.
msl:Modelica.Blocks.Logical rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of components with Boolean input and output signals"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.Logical moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.Logical.Pre rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Breaks algebraic loops by an infinitesimal small time delay (y _gleich_ pre(u): event iteration continues until u _gleich_ pre(u))"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Pre moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSISO.
msl:Modelica.Blocks.Logical.Pre moont:hasPart msl:Modelica.Blocks.Logical.Pre.pre_u_start.
msl:Modelica.Blocks.Logical.Pre.pre_u_start a moont:MParameterComponent;
	 moont:identifier "pre_u_start";
	 moont:type xsd:Boolean;
	 moont:stringComment "Start value of pre(u) at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Logical.LogicalSwitch rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical Switch"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.LogicalSwitch moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSI3SO.
msl:Modelica.Blocks.Logical.Nand rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _nand_: y _gleich_ not (u1 and u2)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Nand moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.
msl:Modelica.Blocks.Logical.OnOffController rdfs:subClassOf moont:MBlock;
	 moont:stringComment "On-off controller"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.OnOffController moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Logical.OnOffController moont:hasPart msl:Modelica.Blocks.Logical.OnOffController.bandwidth.
msl:Modelica.Blocks.Logical.OnOffController.bandwidth a moont:MParameterComponent;
	 moont:identifier "bandwidth";
	 moont:type xsd:Real;
	 moont:stringComment "Bandwidth around reference signal"^^xsd:string;
	 moont:modification "(start_gleich_0.1)"^^xsd:string.
msl:Modelica.Blocks.Logical.OnOffController moont:hasPart msl:Modelica.Blocks.Logical.OnOffController.pre_y_start.
msl:Modelica.Blocks.Logical.OnOffController.pre_y_start a moont:MParameterComponent;
	 moont:identifier "pre_y_start";
	 moont:type xsd:Boolean;
	 moont:stringComment "Value of pre(y) at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Logical.OnOffController moont:hasPart msl:Modelica.Blocks.Logical.OnOffController.reference.
msl:Modelica.Blocks.Logical.OnOffController.reference a moont:MComponent ;
	 moont:identifier "reference";
	 moont:stringComment "Connector of Real input signal used as reference signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Logical.OnOffController moont:hasPart msl:Modelica.Blocks.Logical.OnOffController.u.
msl:Modelica.Blocks.Logical.OnOffController.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signal used as measurement signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Logical.OnOffController moont:hasPart msl:Modelica.Blocks.Logical.OnOffController.y.
msl:Modelica.Blocks.Logical.OnOffController.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal used as actuator signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Logical.And rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _and_: y _gleich_ u1 and u2"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.And moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSI2SO.
msl:Modelica.Blocks.Logical.Greater rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if input u1 is greater than input u2"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Greater moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanComparison.
msl:Modelica.Blocks.Logical.LessThreshold rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if input u is less than threshold"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.LessThreshold moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanThresholdComparison.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Triggered trapezoid generator"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:hasPart msl:Modelica.Blocks.Logical.TriggeredTrapezoid.amplitude.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid.amplitude a moont:MParameterComponent;
	 moont:identifier "amplitude";
	 moont:type xsd:Real;
	 moont:stringComment "Amplitude of trapezoid"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:hasPart msl:Modelica.Blocks.Logical.TriggeredTrapezoid.rising.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid.rising a moont:MParameterComponent;
	 moont:identifier "rising";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Rising duration of trapezoid"^^xsd:string;
	 moont:modification "(finalmin_gleich_0)_gleich_0"^^xsd:string.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:hasPart msl:Modelica.Blocks.Logical.TriggeredTrapezoid.falling.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid.falling a moont:MParameterComponent;
	 moont:identifier "falling";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Falling duration of trapezoid"^^xsd:string;
	 moont:modification "(finalmin_gleich_0)_gleich_rising"^^xsd:string.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:hasPart msl:Modelica.Blocks.Logical.TriggeredTrapezoid.offset.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid.offset a moont:MParameterComponent;
	 moont:identifier "offset";
	 moont:type xsd:Real;
	 moont:stringComment "Offset of output signal"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:hasPart msl:Modelica.Blocks.Logical.TriggeredTrapezoid.T.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid.T a moont:MComponent ;
	 moont:identifier "T";
	 moont:stringComment "Predicted time of output reaching endValue"^^xsd:string;
	 a msl:Modelica.SIunits.Time.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:hasPart msl:Modelica.Blocks.Logical.TriggeredTrapezoid.y.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:hasPart msl:Modelica.Blocks.Logical.TriggeredTrapezoid.u.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Boolean input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:hasPart msl:Modelica.Blocks.Logical.TriggeredTrapezoid.rate.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid.rate a moont:MComponent ;
	 moont:identifier "rate";
	 moont:stringComment "Current rising/falling rate"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid moont:hasPart msl:Modelica.Blocks.Logical.TriggeredTrapezoid.endValue.
msl:Modelica.Blocks.Logical.TriggeredTrapezoid.endValue a moont:MComponent ;
	 moont:identifier "endValue";
	 moont:stringComment "Value of y at time of recent edge"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Logical.Hysteresis rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Transform Real to Boolean signal with Hysteresis"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Hysteresis moont:extends msl:Modelica.Blocks.Icons.PartialBooleanBlock.
msl:Modelica.Blocks.Logical.Hysteresis moont:hasPart msl:Modelica.Blocks.Logical.Hysteresis.uLow.
msl:Modelica.Blocks.Logical.Hysteresis.uLow a moont:MParameterComponent;
	 moont:identifier "uLow";
	 moont:type xsd:Real;
	 moont:stringComment "if y_gleich_true and u<_gleich_uLow, switch to y_gleich_false"^^xsd:string;
	 moont:modification "(start_gleich_0)"^^xsd:string.
msl:Modelica.Blocks.Logical.Hysteresis moont:hasPart msl:Modelica.Blocks.Logical.Hysteresis.uHigh.
msl:Modelica.Blocks.Logical.Hysteresis.uHigh a moont:MParameterComponent;
	 moont:identifier "uHigh";
	 moont:type xsd:Real;
	 moont:stringComment "if y_gleich_false and u>_gleich_uHigh, switch to y_gleich_true"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Logical.Hysteresis moont:hasPart msl:Modelica.Blocks.Logical.Hysteresis.pre_y_start.
msl:Modelica.Blocks.Logical.Hysteresis.pre_y_start a moont:MParameterComponent;
	 moont:identifier "pre_y_start";
	 moont:type xsd:Boolean;
	 moont:stringComment "Value of pre(y) at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Logical.Hysteresis moont:hasPart msl:Modelica.Blocks.Logical.Hysteresis.y.
msl:Modelica.Blocks.Logical.Hysteresis.y a moont:MComponent ;
	 moont:identifier "y";
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Logical.Hysteresis moont:hasPart msl:Modelica.Blocks.Logical.Hysteresis.u.
msl:Modelica.Blocks.Logical.Hysteresis.u a moont:MComponent ;
	 moont:identifier "u";
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Logical.Change rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if the input u has a rising or falling edge (y _gleich_ change(u))"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Logical.
msl:Modelica.Blocks.Logical.Change moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSISO.
msl:Modelica.Blocks.Logical.Change moont:hasPart msl:Modelica.Blocks.Logical.Change.pre_u_start.
msl:Modelica.Blocks.Logical.Change.pre_u_start a moont:MParameterComponent;
	 moont:identifier "pre_u_start";
	 moont:type xsd:Boolean;
	 moont:stringComment "Start value of pre(u) at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Math.Sinh rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the hyperbolic sine of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Sinh moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.LinearDependency rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output a linear combination of the two inputs"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.LinearDependency moont:extends msl:Modelica.Blocks.Interfaces.SI2SO.
msl:Modelica.Blocks.Math.LinearDependency moont:hasPart msl:Modelica.Blocks.Math.LinearDependency.k2.
msl:Modelica.Blocks.Math.LinearDependency.k2 a moont:MParameterComponent;
	 moont:identifier "k2";
	 moont:type xsd:Real;
	 moont:stringComment "u2 dependency"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.LinearDependency moont:hasPart msl:Modelica.Blocks.Math.LinearDependency.y0.
msl:Modelica.Blocks.Math.LinearDependency.y0 a moont:MParameterComponent;
	 moont:identifier "y0";
	 moont:type xsd:Real;
	 moont:stringComment "Initial value"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.LinearDependency moont:hasPart msl:Modelica.Blocks.Math.LinearDependency.k1.
msl:Modelica.Blocks.Math.LinearDependency.k1 a moont:MParameterComponent;
	 moont:identifier "k1";
	 moont:type xsd:Real;
	 moont:stringComment "u1 dependency"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Add rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the sum of the two inputs"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Add moont:extends msl:Modelica.Blocks.Interfaces.SI2SO.
msl:Modelica.Blocks.Math.Add moont:hasPart msl:Modelica.Blocks.Math.Add.k2.
msl:Modelica.Blocks.Math.Add.k2 a moont:MParameterComponent;
	 moont:identifier "k2";
	 moont:type xsd:Real;
	 moont:stringComment "Gain of input signal 2"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Add moont:hasPart msl:Modelica.Blocks.Math.Add.k1.
msl:Modelica.Blocks.Math.Add.k1 a moont:MParameterComponent;
	 moont:identifier "k1";
	 moont:type xsd:Real;
	 moont:stringComment "Gain of input signal 1"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Math.UnitConversions.To_kmh rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from metre per second to kilometre per hour"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_kmh moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.RealToBoolean rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert Real to Boolean signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.RealToBoolean moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSO.
msl:Modelica.Blocks.Math.RealToBoolean moont:hasPart msl:Modelica.Blocks.Math.RealToBoolean.threshold.
msl:Modelica.Blocks.Math.RealToBoolean.threshold a moont:MParameterComponent;
	 moont:identifier "threshold";
	 moont:type xsd:Real;
	 moont:stringComment "Output signal y is true, if input u >_gleich_ threshold"^^xsd:string;
	 moont:modification "0.5"^^xsd:Real.
msl:Modelica.Blocks.Math.RealToBoolean moont:hasPart msl:Modelica.Blocks.Math.RealToBoolean.u.
msl:Modelica.Blocks.Math.RealToBoolean.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.Sign rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the sign of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Sign moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.Sign moont:hasPart msl:Modelica.Blocks.Math.Sign.generateEvent.
msl:Modelica.Blocks.Math.Sign.generateEvent a moont:MParameterComponent;
	 moont:identifier "generateEvent";
	 moont:type xsd:Boolean;
	 moont:stringComment "Choose whether events shall be generated"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Math.MinMax rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the minimum and the maximum element of the input vector"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.MinMax moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Math.MinMax moont:hasPart msl:Modelica.Blocks.Math.MinMax.nu.
msl:Modelica.Blocks.Math.MinMax.nu a moont:MParameterComponent;
	 moont:identifier "nu";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of input connections"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_0"^^xsd:string.
msl:Modelica.Blocks.Math.MinMax moont:hasPart msl:Modelica.Blocks.Math.MinMax.yMax.
msl:Modelica.Blocks.Math.MinMax.yMax a moont:MComponent ;
	 moont:identifier "yMax";
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.MinMax moont:hasPart msl:Modelica.Blocks.Math.MinMax.u.
msl:Modelica.Blocks.Math.MinMax.u a moont:MComponent ;
	 moont:identifier "u";
	 a msl:Modelica.Blocks.Interfaces.RealVectorInput.
msl:Modelica.Blocks.Math.MinMax moont:hasPart msl:Modelica.Blocks.Math.MinMax.yMin.
msl:Modelica.Blocks.Math.MinMax.yMin a moont:MComponent ;
	 moont:identifier "yMin";
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.UnitConversions.To_rpm rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from radian per second to revolutions per minute"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_rpm moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Conversion blocks to convert between SI and non-SI unit signals"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.UnitConversions moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.Math.Cos rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the cosine of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Cos moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.Add3 rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the sum of the three inputs"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Add3 moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Math.Add3 moont:hasPart msl:Modelica.Blocks.Math.Add3.k1.
msl:Modelica.Blocks.Math.Add3.k1 a moont:MParameterComponent;
	 moont:identifier "k1";
	 moont:type xsd:Real;
	 moont:stringComment "Gain of input signal 1"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Add3 moont:hasPart msl:Modelica.Blocks.Math.Add3.k3.
msl:Modelica.Blocks.Math.Add3.k3 a moont:MParameterComponent;
	 moont:identifier "k3";
	 moont:type xsd:Real;
	 moont:stringComment "Gain of input signal 3"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Add3 moont:hasPart msl:Modelica.Blocks.Math.Add3.k2.
msl:Modelica.Blocks.Math.Add3.k2 a moont:MParameterComponent;
	 moont:identifier "k2";
	 moont:type xsd:Real;
	 moont:stringComment "Gain of input signal 2"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Add3 moont:hasPart msl:Modelica.Blocks.Math.Add3.u3.
msl:Modelica.Blocks.Math.Add3.u3 a moont:MComponent ;
	 moont:identifier "u3";
	 moont:stringComment "Connector of Real input signal 3"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.Add3 moont:hasPart msl:Modelica.Blocks.Math.Add3.u2.
msl:Modelica.Blocks.Math.Add3.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Connector of Real input signal 2"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.Add3 moont:hasPart msl:Modelica.Blocks.Math.Add3.y.
msl:Modelica.Blocks.Math.Add3.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.Add3 moont:hasPart msl:Modelica.Blocks.Math.Add3.u1.
msl:Modelica.Blocks.Math.Add3.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Connector of Real input signal 1"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.Tanh rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the hyperbolic tangent of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Tanh moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.InverseBlockConstraints rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Construct inverse model by requiring that two inputs and two outputs are identical"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.InverseBlockConstraints moont:hasPart msl:Modelica.Blocks.Math.InverseBlockConstraints.y1.
msl:Modelica.Blocks.Math.InverseBlockConstraints.y1 a moont:MComponent ;
	 moont:identifier "y1";
	 moont:stringComment "Output signal 1 (y1 _gleich_ y2)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.InverseBlockConstraints moont:hasPart msl:Modelica.Blocks.Math.InverseBlockConstraints.y2.
msl:Modelica.Blocks.Math.InverseBlockConstraints.y2 a moont:MComponent ;
	 moont:identifier "y2";
	 moont:stringComment "Output signal 2 (y1 _gleich_ y2)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.InverseBlockConstraints moont:hasPart msl:Modelica.Blocks.Math.InverseBlockConstraints.u1.
msl:Modelica.Blocks.Math.InverseBlockConstraints.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 moont:stringComment "Input signal 1 (u1 _gleich_ u2)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.InverseBlockConstraints moont:hasPart msl:Modelica.Blocks.Math.InverseBlockConstraints.u2.
msl:Modelica.Blocks.Math.InverseBlockConstraints.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 moont:stringComment "Input signal 2 (u1 _gleich_ u2)"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.Atan2 rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output atan(u1/u2) of the inputs u1 and u2"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Atan2 moont:extends msl:Modelica.Blocks.Interfaces.SI2SO.
msl:Modelica.Blocks.Math.UnitConversions.From_kmh rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from kilometre per hour to metre per second"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_kmh moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.To_hour rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from second to hour"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_hour moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.Max rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Pass through the largest signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Max moont:extends msl:Modelica.Blocks.Interfaces.SI2SO.
msl:Modelica.Blocks.Math.BooleanChange rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Indicates Boolean signal changing"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.BooleanChange moont:extends msl:Modelica.Blocks.Interfaces.BooleanSISO.
msl:Modelica.Blocks.Math.RootMeanSquare rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Calculate root mean square over period 1/f"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.RootMeanSquare moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.RootMeanSquare moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.f.
msl:Modelica.Blocks.Math.RootMeanSquare.f a moont:MParameterComponent;
	 moont:identifier "f";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Base frequency"^^xsd:string;
	 moont:modification "(start_gleich_50)"^^xsd:string.
msl:Modelica.Blocks.Math.RootMeanSquare moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.x0.
msl:Modelica.Blocks.Math.RootMeanSquare.x0 a moont:MParameterComponent;
	 moont:identifier "x0";
	 moont:type xsd:Real;
	 moont:stringComment "Start value of integrator state"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.RootMeanSquare moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1.
msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1 a moont:MComponent ;
	 moont:identifier "sqrt1";
	 a msl:Modelica.Blocks.Math.Sqrt.
msl:Modelica.Blocks.Math.RootMeanSquare moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.mean.
msl:Modelica.Blocks.Math.RootMeanSquare.mean a moont:MComponent ;
	 moont:identifier "mean";
	 a msl:Modelica.Blocks.Math.Mean.
msl:Modelica.Blocks.Math.RootMeanSquare.mean.finalf moont:modification "f"^^xsd:String.
msl:Modelica.Blocks.Math.RootMeanSquare.mean.finalyGreaterOrEqualZero moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Math.RootMeanSquare.mean.finalx0 moont:modification "x0"^^xsd:String.
msl:Modelica.Blocks.Math.RootMeanSquare moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.product.
msl:Modelica.Blocks.Math.RootMeanSquare.product a moont:MComponent ;
	 moont:identifier "product";
	 a msl:Modelica.Blocks.Math.MultiProduct.
msl:Modelica.Blocks.Math.RootMeanSquare.product.nu moont:modification "2.0"^^xsd:Real.
msl:Modelica.Blocks.Math.RootMeanSquare.product moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.product.y.
msl:Modelica.Blocks.Math.RootMeanSquare.product.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RootMeanSquare.product.y moont:identifier "y".
msl:Modelica.Blocks.Math.RootMeanSquare.product.y moont:connectedTo msl:Modelica.Blocks.Math.RootMeanSquare.mean.u.
msl:Modelica.Blocks.Math.RootMeanSquare.mean moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.mean.u.
msl:Modelica.Blocks.Math.RootMeanSquare.mean.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RootMeanSquare.mean.u moont:identifier "u".
msl:Modelica.Blocks.Math.RootMeanSquare.mean moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.mean.y.
msl:Modelica.Blocks.Math.RootMeanSquare.mean.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RootMeanSquare.mean.y moont:identifier "y".
msl:Modelica.Blocks.Math.RootMeanSquare.mean.y moont:connectedTo msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1.u.
msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1 moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1.u.
msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1.u moont:identifier "u".
msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1 moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1.y.
msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1.y moont:identifier "y".
msl:Modelica.Blocks.Math.RootMeanSquare.sqrt1.y moont:connectedTo msl:Modelica.Blocks.Math.RootMeanSquare.y.
msl:Modelica.Blocks.Math.RootMeanSquare.u moont:connectedTo msl:Modelica.Blocks.Math.RootMeanSquare.product.u_1.
msl:Modelica.Blocks.Math.RootMeanSquare.product moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.product.u_1.
msl:Modelica.Blocks.Math.RootMeanSquare.product.u_1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RootMeanSquare.product.u_1 moont:identifier "u_1".
msl:Modelica.Blocks.Math.RootMeanSquare.u moont:connectedTo msl:Modelica.Blocks.Math.RootMeanSquare.product.u_2.
msl:Modelica.Blocks.Math.RootMeanSquare.product moont:hasPart msl:Modelica.Blocks.Math.RootMeanSquare.product.u_2.
msl:Modelica.Blocks.Math.RootMeanSquare.product.u_2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RootMeanSquare.product.u_2 moont:identifier "u_2".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the total harmonic distortion (THD)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.useFirstHarmonic.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.useFirstHarmonic a moont:MParameterComponent;
	 moont:identifier "useFirstHarmonic";
	 moont:type xsd:Boolean;
	 moont:stringComment "THD with respect to first harmonic, if true; otherwise with respect to total RMS"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.f.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.f a moont:MParameterComponent;
	 moont:identifier "f";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Base frequency"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1 a moont:MComponent ;
	 moont:identifier "switch1";
	 a msl:Modelica.Blocks.Logical.Switch.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic a moont:MComponent ;
	 moont:identifier "harmonic";
	 a msl:Modelica.Blocks.Math.Harmonic.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.finalf moont:modification "f"^^xsd:String.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.finalk moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.finalx0Cos moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.finalx0Sin moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras a moont:MComponent ;
	 moont:identifier "pythagoras";
	 a msl:Modelica.Blocks.Math.Pythagoras.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.u1IsHypotenuse moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.booleanExpression.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.booleanExpression a moont:MComponent ;
	 moont:identifier "booleanExpression";
	 a msl:Modelica.Blocks.Sources.BooleanExpression.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.booleanExpression.finaly moont:modification "notuseFirstHarmonic"^^xsd:String.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold a moont:MComponent ;
	 moont:identifier "greaterThreshold";
	 a msl:Modelica.Blocks.Logical.GreaterThreshold.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter a moont:MComponent ;
	 moont:identifier "limiter";
	 a msl:Modelica.Blocks.Nonlinear.Limiter.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.uMin moont:modification "Modelica.Constants.eps"^^xsd:String.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.uMax moont:modification "Modelica.Constants.inf"^^xsd:String.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid a moont:MComponent ;
	 moont:identifier "andValid";
	 a msl:Modelica.Blocks.Logical.And.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare a moont:MComponent ;
	 moont:identifier "rootMeanSquare";
	 a msl:Modelica.Blocks.Math.RootMeanSquare.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.finalf moont:modification "f"^^xsd:String.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.finalx0 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.valid.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.valid a moont:MComponent ;
	 moont:identifier "valid";
	 moont:stringComment "True, if output y is valid"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division a moont:MComponent ;
	 moont:identifier "division";
	 a msl:Modelica.Blocks.Math.Division.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.u moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.u.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.u.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.u moont:identifier "u".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.u moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.u.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.u.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.u moont:identifier "u".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms moont:identifier "y_rms".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold.u.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold.u.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold.u moont:identifier "u".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.y moont:identifier "y".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.y moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.u1.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.u1 moont:identifier "u1".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.u1 moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.y moont:identifier "y".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.y moont:identifier "y".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.y moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.u1.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.u1.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.u1 moont:identifier "u1".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.valid.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.valid a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.valid moont:identifier "valid".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.valid moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.u1.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.u1.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.u1 moont:identifier "u1".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold.y moont:identifier "y".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.greaterThreshold.y moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.u2.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.u2.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.u2 moont:identifier "u2".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.y moont:identifier "y".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.andValid.y moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.valid.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.y moont:identifier "y".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.y moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.u2.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.u2.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.division.u2 moont:identifier "u2".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms moont:identifier "y_rms".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.u2.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.u2.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.pythagoras.u2 moont:identifier "u2".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1 moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u1.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u1 moont:identifier "u1".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u1 moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.rootMeanSquare.y moont:identifier "y".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms moont:identifier "y_rms".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.harmonic.y_rms moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u3.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1 moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u3.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u3 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u3 moont:identifier "u3".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.booleanExpression moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.booleanExpression.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.booleanExpression.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.booleanExpression.y moont:identifier "y".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.booleanExpression.y moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u2.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1 moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u2.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.u2 moont:identifier "u2".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1 moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.y.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.y moont:identifier "y".
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.switch1.y moont:connectedTo msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.u.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter moont:hasPart msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.u.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.TotalHarmonicDistortion.limiter.u moont:identifier "u".
msl:Modelica.Blocks.Math rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of Real mathematical functions as input/output blocks"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.Math moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.Math.ContinuousMean rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Calculates the empirical expectation (mean) value of its input signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.ContinuousMean moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Math.ContinuousMean moont:hasPart msl:Modelica.Blocks.Math.ContinuousMean.t_0.
msl:Modelica.Blocks.Math.ContinuousMean.t_0 a moont:MParameterComponent;
	 moont:identifier "t_0";
	 moont:type xsd:Real;
	 moont:stringComment "Start time"^^xsd:string;
	 moont:modification "(fixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Math.ContinuousMean moont:hasPart msl:Modelica.Blocks.Math.ContinuousMean.t_eps.
msl:Modelica.Blocks.Math.ContinuousMean.t_eps a moont:MParameterComponent;
	 moont:identifier "t_eps";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Mean value calculation starts at startTime + t_eps"^^xsd:string;
	 moont:modification "(min_gleich_100*Modelica.Constants.eps)_gleich_1e-7"^^xsd:string.
msl:Modelica.Blocks.Math.ContinuousMean moont:hasPart msl:Modelica.Blocks.Math.ContinuousMean.y.
msl:Modelica.Blocks.Math.ContinuousMean.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Expectation (mean) value of the input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.ContinuousMean moont:hasPart msl:Modelica.Blocks.Math.ContinuousMean.mu.
msl:Modelica.Blocks.Math.ContinuousMean.mu a moont:MComponent ;
	 moont:identifier "mu";
	 moont:stringComment "Internal integrator variable"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Math.ContinuousMean moont:hasPart msl:Modelica.Blocks.Math.ContinuousMean.u.
msl:Modelica.Blocks.Math.ContinuousMean.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Noisy input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.UnitConversions.From_day rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from day to second"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_day moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.Log10 rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the base 10 logarithm of the input (input > 0 required)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Log10 moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.MatrixGain rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the product of a gain matrix with the input signal vector"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.MatrixGain moont:extends msl:Modelica.Blocks.Interfaces.MIMO.
msl:Modelica.Blocks.Math.MatrixGain moont:hasPart msl:Modelica.Blocks.Math.MatrixGain.K.
msl:Modelica.Blocks.Math.MatrixGain.K a moont:MParameterComponent;
	 moont:identifier "K";
	 moont:type xsd:Real;
	 moont:stringComment "Gain matrix which is multiplied with the input"^^xsd:string;
	 moont:modification "_gleich__1,0;0,1_"^^xsd:string.
msl:Modelica.Blocks.Math.Exp rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the exponential (base e) of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Exp moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.Product rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output product of the two inputs"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Product moont:extends msl:Modelica.Blocks.Interfaces.SI2SO.
msl:Modelica.Blocks.Math.Gain rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the product of a gain value with the input signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Gain moont:hasPart msl:Modelica.Blocks.Math.Gain.k.
msl:Modelica.Blocks.Math.Gain.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Gain value multiplied with input signal"^^xsd:string;
	 moont:modification "(start_gleich_1,unit_gleich_\"1\")"^^xsd:string.
msl:Modelica.Blocks.Math.Gain moont:hasPart msl:Modelica.Blocks.Math.Gain.u.
msl:Modelica.Blocks.Math.Gain.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Input signal connector"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.Gain moont:hasPart msl:Modelica.Blocks.Math.Gain.y.
msl:Modelica.Blocks.Math.Gain.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Output signal connector"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.Log rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the logarithm (default base e) of the input (input > 0 required)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Log moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.Log moont:hasPart msl:Modelica.Blocks.Math.Log.base.
msl:Modelica.Blocks.Math.Log.base a moont:MParameterComponent;
	 moont:identifier "base";
	 moont:type xsd:Real;
	 moont:stringComment "Base of logarithm"^^xsd:string;
	 moont:modification "_gleich_Modelica.Constants.e"^^xsd:string.
msl:Modelica.Blocks.Math.RectifiedMean rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Calculate rectified mean over period 1/f"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.RectifiedMean moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.RectifiedMean moont:hasPart msl:Modelica.Blocks.Math.RectifiedMean.f.
msl:Modelica.Blocks.Math.RectifiedMean.f a moont:MParameterComponent;
	 moont:identifier "f";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Base frequency"^^xsd:string;
	 moont:modification "(start_gleich_50)"^^xsd:string.
msl:Modelica.Blocks.Math.RectifiedMean moont:hasPart msl:Modelica.Blocks.Math.RectifiedMean.x0.
msl:Modelica.Blocks.Math.RectifiedMean.x0 a moont:MParameterComponent;
	 moont:identifier "x0";
	 moont:type xsd:Real;
	 moont:stringComment "Start value of integrator state"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.RectifiedMean moont:hasPart msl:Modelica.Blocks.Math.RectifiedMean.abs1.
msl:Modelica.Blocks.Math.RectifiedMean.abs1 a moont:MComponent ;
	 moont:identifier "abs1";
	 a msl:Modelica.Blocks.Math.Abs.
msl:Modelica.Blocks.Math.RectifiedMean moont:hasPart msl:Modelica.Blocks.Math.RectifiedMean.mean.
msl:Modelica.Blocks.Math.RectifiedMean.mean a moont:MComponent ;
	 moont:identifier "mean";
	 a msl:Modelica.Blocks.Math.Mean.
msl:Modelica.Blocks.Math.RectifiedMean.mean.finalf moont:modification "f"^^xsd:String.
msl:Modelica.Blocks.Math.RectifiedMean.mean.finalx0 moont:modification "x0"^^xsd:String.
msl:Modelica.Blocks.Math.RectifiedMean.u moont:connectedTo msl:Modelica.Blocks.Math.RectifiedMean.abs1.u.
msl:Modelica.Blocks.Math.RectifiedMean.abs1 moont:hasPart msl:Modelica.Blocks.Math.RectifiedMean.abs1.u.
msl:Modelica.Blocks.Math.RectifiedMean.abs1.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RectifiedMean.abs1.u moont:identifier "u".
msl:Modelica.Blocks.Math.RectifiedMean.abs1 moont:hasPart msl:Modelica.Blocks.Math.RectifiedMean.abs1.y.
msl:Modelica.Blocks.Math.RectifiedMean.abs1.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RectifiedMean.abs1.y moont:identifier "y".
msl:Modelica.Blocks.Math.RectifiedMean.abs1.y moont:connectedTo msl:Modelica.Blocks.Math.RectifiedMean.mean.u.
msl:Modelica.Blocks.Math.RectifiedMean.mean moont:hasPart msl:Modelica.Blocks.Math.RectifiedMean.mean.u.
msl:Modelica.Blocks.Math.RectifiedMean.mean.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RectifiedMean.mean.u moont:identifier "u".
msl:Modelica.Blocks.Math.RectifiedMean.mean moont:hasPart msl:Modelica.Blocks.Math.RectifiedMean.mean.y.
msl:Modelica.Blocks.Math.RectifiedMean.mean.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.RectifiedMean.mean.y moont:identifier "y".
msl:Modelica.Blocks.Math.RectifiedMean.mean.y moont:connectedTo msl:Modelica.Blocks.Math.RectifiedMean.y.
msl:Modelica.Blocks.Math.Tan rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the tangent of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Tan moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.Sqrt rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the square root of the input (input >_gleich_ 0 required)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Sqrt moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.BooleanToReal rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert Boolean to Real signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.BooleanToReal moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSI.
msl:Modelica.Blocks.Math.BooleanToReal moont:hasPart msl:Modelica.Blocks.Math.BooleanToReal.realFalse.
msl:Modelica.Blocks.Math.BooleanToReal.realFalse a moont:MParameterComponent;
	 moont:identifier "realFalse";
	 moont:type xsd:Real;
	 moont:stringComment "Output signal for false Boolean input"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.BooleanToReal moont:hasPart msl:Modelica.Blocks.Math.BooleanToReal.realTrue.
msl:Modelica.Blocks.Math.BooleanToReal.realTrue a moont:MParameterComponent;
	 moont:identifier "realTrue";
	 moont:type xsd:Real;
	 moont:stringComment "Output signal for true Boolean input"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Math.BooleanToReal moont:hasPart msl:Modelica.Blocks.Math.BooleanToReal.y.
msl:Modelica.Blocks.Math.BooleanToReal.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.Sum rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the sum of the elements of the input vector"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Sum moont:extends msl:Modelica.Blocks.Interfaces.MISO.
msl:Modelica.Blocks.Math.Sum moont:hasPart msl:Modelica.Blocks.Math.Sum.k.
msl:Modelica.Blocks.Math.Sum.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Optional: sum coefficients"^^xsd:string;
	 moont:modification "_gleich_ones(nin)"^^xsd:string.
msl:Modelica.Blocks.Math.UnitConversions.To_litre rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from cubic metre to litre"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_litre moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.To_minute rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from second to minute"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_minute moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.From_degF rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from degFahrenheit to Kelvin"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_degF moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.Pythagoras rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Determines the hypotenuse or leg of a right triangle"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Pythagoras moont:extends msl:Modelica.Blocks.Interfaces.SI2SO.
msl:Modelica.Blocks.Math.Pythagoras moont:hasPart msl:Modelica.Blocks.Math.Pythagoras.u1IsHypotenuse.
msl:Modelica.Blocks.Math.Pythagoras.u1IsHypotenuse a moont:MParameterComponent;
	 moont:identifier "u1IsHypotenuse";
	 moont:type xsd:Boolean;
	 moont:stringComment "If true, u1 is the hypotenuse and y is one leg"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Math.Pythagoras moont:hasPart msl:Modelica.Blocks.Math.Pythagoras.y2.
msl:Modelica.Blocks.Math.Pythagoras.y2 a moont:MComponent ;
	 moont:identifier "y2";
	 moont:stringComment "Square of y"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Math.Pythagoras moont:hasPart msl:Modelica.Blocks.Math.Pythagoras.valid.
msl:Modelica.Blocks.Math.Pythagoras.valid a moont:MComponent ;
	 moont:identifier "valid";
	 moont:stringComment "Is true, if y is a valid result"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.Math.Power rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the power to a base of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Power moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.Power moont:hasPart msl:Modelica.Blocks.Math.Power.base.
msl:Modelica.Blocks.Math.Power.base a moont:MParameterComponent;
	 moont:identifier "base";
	 moont:type xsd:Real;
	 moont:stringComment "Base of power"^^xsd:string;
	 moont:modification "_gleich_Modelica.Constants.e"^^xsd:string.
msl:Modelica.Blocks.Math.Power moont:hasPart msl:Modelica.Blocks.Math.Power.useExp.
msl:Modelica.Blocks.Math.Power.useExp a moont:MParameterComponent;
	 moont:identifier "useExp";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use exp function in implementation"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Math.Min rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Pass through the smallest signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Min moont:extends msl:Modelica.Blocks.Interfaces.SI2SO.
msl:Modelica.Blocks.Math.IntegerChange rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Indicates integer signal changing"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.IntegerChange moont:extends msl:Modelica.Blocks.Interfaces.IntegerSIBooleanSO.
msl:Modelica.Blocks.Math.UnitConversions.From_litre rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from litre to cubic metre"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_litre moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.To_bar rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from Pascal to bar"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_bar moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.To_degRk rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from Kelvin to degRankine"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_degRk moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.Division rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output first input divided by second input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Division moont:extends msl:Modelica.Blocks.Interfaces.SI2SO.
msl:Modelica.Blocks.Math.MultiProduct rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Product of Reals: y _gleich_ u_1_*u_2_* ... *u_n_"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.MultiProduct moont:extends msl:Modelica.Blocks.Interfaces.PartialRealMISO.
msl:Modelica.Blocks.Math.UnitConversions.To_degC rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from Kelvin to degCelsius"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_degC moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.Mean rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Calculate mean over period 1/f"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Mean moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.Mean moont:hasPart msl:Modelica.Blocks.Math.Mean.f.
msl:Modelica.Blocks.Math.Mean.f a moont:MParameterComponent;
	 moont:identifier "f";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Base frequency"^^xsd:string;
	 moont:modification "(start_gleich_50)"^^xsd:string.
msl:Modelica.Blocks.Math.Mean moont:hasPart msl:Modelica.Blocks.Math.Mean.x0.
msl:Modelica.Blocks.Math.Mean.x0 a moont:MParameterComponent;
	 moont:identifier "x0";
	 moont:type xsd:Real;
	 moont:stringComment "Start value of integrator state"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Mean moont:hasPart msl:Modelica.Blocks.Math.Mean.yGreaterOrEqualZero.
msl:Modelica.Blocks.Math.Mean.yGreaterOrEqualZero a moont:MParameterComponent;
	 moont:identifier "yGreaterOrEqualZero";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_true, if output y is guaranteed to be >_gleich_ 0 for the exact solution"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Math.Mean moont:hasPart msl:Modelica.Blocks.Math.Mean.t0.
msl:Modelica.Blocks.Math.Mean.t0 a moont:MParameterComponent;
	 moont:identifier "t0";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Start time of simulation"^^xsd:string;
	 moont:modification "(fixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Math.Mean moont:hasPart msl:Modelica.Blocks.Math.Mean.x.
msl:Modelica.Blocks.Math.Mean.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "Integrator state"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Math.UnitConversions.From_minute rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from minute to second"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_minute moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.StandardDeviation rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Calculates the empirical standard deviation of its input signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.StandardDeviation moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Math.StandardDeviation moont:hasPart msl:Modelica.Blocks.Math.StandardDeviation.t_eps.
msl:Modelica.Blocks.Math.StandardDeviation.t_eps a moont:MParameterComponent;
	 moont:identifier "t_eps";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Standard deviation calculation starts at startTime + t_eps"^^xsd:string;
	 moont:modification "(min_gleich_100*Modelica.Constants.eps)_gleich_1e-7"^^xsd:string.
msl:Modelica.Blocks.Math.StandardDeviation moont:hasPart msl:Modelica.Blocks.Math.StandardDeviation.y.
msl:Modelica.Blocks.Math.StandardDeviation.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Standard deviation of the input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.StandardDeviation moont:hasPart msl:Modelica.Blocks.Math.StandardDeviation.sqrt1.
msl:Modelica.Blocks.Math.StandardDeviation.sqrt1 a moont:MComponent ;
	 moont:identifier "sqrt1";
	 a msl:Modelica.Blocks.Math.Sqrt.
msl:Modelica.Blocks.Math.StandardDeviation moont:hasPart msl:Modelica.Blocks.Math.StandardDeviation.variance.
msl:Modelica.Blocks.Math.StandardDeviation.variance a moont:MComponent ;
	 moont:identifier "variance";
	 a msl:Modelica.Blocks.Math.Variance.
msl:Modelica.Blocks.Math.StandardDeviation.variance.t_eps moont:modification "t_eps"^^xsd:String.
msl:Modelica.Blocks.Math.StandardDeviation moont:hasPart msl:Modelica.Blocks.Math.StandardDeviation.u.
msl:Modelica.Blocks.Math.StandardDeviation.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Noisy input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.StandardDeviation.variance moont:hasPart msl:Modelica.Blocks.Math.StandardDeviation.variance.u.
msl:Modelica.Blocks.Math.StandardDeviation.variance.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.StandardDeviation.variance.u moont:identifier "u".
msl:Modelica.Blocks.Math.StandardDeviation.variance.u moont:connectedTo msl:Modelica.Blocks.Math.StandardDeviation.u.
msl:Modelica.Blocks.Math.StandardDeviation.sqrt1 moont:hasPart msl:Modelica.Blocks.Math.StandardDeviation.sqrt1.u.
msl:Modelica.Blocks.Math.StandardDeviation.sqrt1.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.StandardDeviation.sqrt1.u moont:identifier "u".
msl:Modelica.Blocks.Math.StandardDeviation.sqrt1.u moont:connectedTo msl:Modelica.Blocks.Math.StandardDeviation.variance.y.
msl:Modelica.Blocks.Math.StandardDeviation.variance moont:hasPart msl:Modelica.Blocks.Math.StandardDeviation.variance.y.
msl:Modelica.Blocks.Math.StandardDeviation.variance.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.StandardDeviation.variance.y moont:identifier "y".
msl:Modelica.Blocks.Math.StandardDeviation.sqrt1 moont:hasPart msl:Modelica.Blocks.Math.StandardDeviation.sqrt1.y.
msl:Modelica.Blocks.Math.StandardDeviation.sqrt1.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.StandardDeviation.sqrt1.y moont:identifier "y".
msl:Modelica.Blocks.Math.StandardDeviation.sqrt1.y moont:connectedTo msl:Modelica.Blocks.Math.StandardDeviation.y.
msl:Modelica.Blocks.Math.Acos rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the arc cosine of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Acos moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.UnitConversions.From_rpm rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from revolutions per minute to radian per second"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_rpm moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.Abs rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the absolute value of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Abs moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.Abs moont:hasPart msl:Modelica.Blocks.Math.Abs.generateEvent.
msl:Modelica.Blocks.Math.Abs.generateEvent a moont:MParameterComponent;
	 moont:identifier "generateEvent";
	 moont:type xsd:Boolean;
	 moont:stringComment "Choose whether events shall be generated"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Math.UnitConversions.From_degRk rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from degRankine to Kelvin"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_degRk moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.From_deg rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from degree to radian"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_deg moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.BooleanToInteger rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert Boolean to Integer signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.BooleanToInteger moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSI.
msl:Modelica.Blocks.Math.BooleanToInteger moont:hasPart msl:Modelica.Blocks.Math.BooleanToInteger.integerTrue.
msl:Modelica.Blocks.Math.BooleanToInteger.integerTrue a moont:MParameterComponent;
	 moont:identifier "integerTrue";
	 moont:type xsd:Integer;
	 moont:stringComment "Output signal for true Boolean input"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Math.BooleanToInteger moont:hasPart msl:Modelica.Blocks.Math.BooleanToInteger.integerFalse.
msl:Modelica.Blocks.Math.BooleanToInteger.integerFalse a moont:MParameterComponent;
	 moont:identifier "integerFalse";
	 moont:type xsd:Integer;
	 moont:stringComment "Output signal for false Boolean input"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.BooleanToInteger moont:hasPart msl:Modelica.Blocks.Math.BooleanToInteger.y.
msl:Modelica.Blocks.Math.BooleanToInteger.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Integer output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.Math.RealFFT rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Sampling and FFT of input u"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.RealFFT moont:extends msl:Modelica.Blocks.Interfaces.DiscreteBlock.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.f_res.
msl:Modelica.Blocks.Math.RealFFT.f_res a moont:MParameterComponent;
	 moont:identifier "f_res";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Frequency resolution"^^xsd:string;
.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.resultFileName.
msl:Modelica.Blocks.Math.RealFFT.resultFileName a moont:MParameterComponent;
	 moont:identifier "resultFileName";
	 moont:type msl:String;
	 moont:stringComment "Result file: f, abs, arg"^^xsd:string;
	 moont:modification "_gleich_\"realFFT.mat"^^xsd:string.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.nf.
msl:Modelica.Blocks.Math.RealFFT.nf a moont:MParameterComponent;
	 moont:identifier "nf";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of frequency points"^^xsd:string;
	 moont:modification "_gleich_max(1,min(integer(ceil(f_max/f_res))+1,div(ns,2)))"^^xsd:string.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.ns.
msl:Modelica.Blocks.Math.RealFFT.ns a moont:MParameterComponent;
	 moont:identifier "ns";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of samples"^^xsd:string;
	 moont:modification "_gleich_Modelica.Math.FastFourierTransform.realFFTsamplePoints(f_max,f_res,f_max_factor_gleich_5)"^^xsd:string.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.f_max.
msl:Modelica.Blocks.Math.RealFFT.f_max a moont:MParameterComponent;
	 moont:identifier "f_max";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Maximum frequency of interest"^^xsd:string;
.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.arg.
msl:Modelica.Blocks.Math.RealFFT.arg a moont:MComponent ;
	 moont:identifier "arg";
	 moont:stringComment "FFT phases"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Math.RealFFT.arg.start moont:modification "zeros(nf)"^^xsd:String.
msl:Modelica.Blocks.Math.RealFFT.arg.eachfixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.abs.
msl:Modelica.Blocks.Math.RealFFT.abs a moont:MComponent ;
	 moont:identifier "abs";
	 moont:stringComment "FFT amplitudes"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Math.RealFFT.abs.start moont:modification "zeros(nf)"^^xsd:String.
msl:Modelica.Blocks.Math.RealFFT.abs.eachfixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.u.
msl:Modelica.Blocks.Math.RealFFT.u a moont:MComponent ;
	 moont:identifier "u";
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.buf.
msl:Modelica.Blocks.Math.RealFFT.buf a moont:MComponent ;
	 moont:identifier "buf";
	 moont:stringComment "Input buffer"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Math.RealFFT.buf.start moont:modification "zeros(ns)"^^xsd:String.
msl:Modelica.Blocks.Math.RealFFT.buf.eachfixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.info.
msl:Modelica.Blocks.Math.RealFFT.info a moont:MComponent ;
	 moont:identifier "info";
	 moont:stringComment "Information flag from FFT computation"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Math.RealFFT.info.start moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.RealFFT.info.fixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Math.RealFFT moont:hasPart msl:Modelica.Blocks.Math.RealFFT.iTick.
msl:Modelica.Blocks.Math.RealFFT.iTick a moont:MComponent ;
	 moont:identifier "iTick";
	 moont:stringComment "Sample ticks"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Math.RealFFT.iTick.start moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.RealFFT.iTick.fixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.Math.Asin rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the arc sine of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Asin moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.MultiSwitch rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Set Real expression that is associated with the first active input signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.MultiSwitch moont:hasPart msl:Modelica.Blocks.Math.MultiSwitch.precision.
msl:Modelica.Blocks.Math.MultiSwitch.precision a moont:MParameterComponent;
	 moont:identifier "precision";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of significant digits to be shown in dynamic diagram layer for y"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_3"^^xsd:string.
msl:Modelica.Blocks.Math.MultiSwitch moont:hasPart msl:Modelica.Blocks.Math.MultiSwitch.nu.
msl:Modelica.Blocks.Math.MultiSwitch.nu a moont:MParameterComponent;
	 moont:identifier "nu";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of input connections"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_0"^^xsd:string.
msl:Modelica.Blocks.Math.MultiSwitch moont:hasPart msl:Modelica.Blocks.Math.MultiSwitch.y_default.
msl:Modelica.Blocks.Math.MultiSwitch.y_default a moont:MParameterComponent;
	 moont:identifier "y_default";
	 moont:type xsd:Real;
	 moont:stringComment "Default value of output y if all u_i_ _gleich_ false"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.MultiSwitch moont:hasPart msl:Modelica.Blocks.Math.MultiSwitch.u.
msl:Modelica.Blocks.Math.MultiSwitch.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Set y _gleich_ expr_i_, if u_i_ _gleich_ true"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanVectorInput.
msl:Modelica.Blocks.Math.MultiSwitch moont:hasPart msl:Modelica.Blocks.Math.MultiSwitch.expr.
msl:Modelica.Blocks.Math.MultiSwitch.expr a moont:MComponent ;
	 moont:identifier "expr";
	 moont:stringComment "y _gleich_ if u_i_ then expr_i_ else y_default (time varying)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Math.MultiSwitch moont:hasPart msl:Modelica.Blocks.Math.MultiSwitch.y.
msl:Modelica.Blocks.Math.MultiSwitch.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Output depending on expression"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.MultiSwitch moont:hasPart msl:Modelica.Blocks.Math.MultiSwitch.firstActiveIndex.
msl:Modelica.Blocks.Math.MultiSwitch.firstActiveIndex a moont:MComponent ;
	 moont:identifier "firstActiveIndex";
	 a msl:Integer.
msl:Modelica.Blocks.Math.Cosh rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the hyperbolic cosine of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Cosh moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.MultiSum rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Sum of Reals: y _gleich_ k_1_*u_1_ + k_2_*u_2_ + ... + k_n_*u_n_"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.MultiSum moont:extends msl:Modelica.Blocks.Interfaces.PartialRealMISO.
msl:Modelica.Blocks.Math.MultiSum moont:hasPart msl:Modelica.Blocks.Math.MultiSum.k.
msl:Modelica.Blocks.Math.MultiSum.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Real;
	 moont:stringComment "Input gains"^^xsd:string;
	 moont:modification "_gleich_fill(1,nu)"^^xsd:string.
msl:Modelica.Blocks.Math.UnitConversions.To_kWh rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from Joule to kilo Watt hour"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_kWh moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.Edge rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Indicates rising edge of Boolean signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Edge moont:extends msl:Modelica.Blocks.Interfaces.BooleanSISO.
msl:Modelica.Blocks.Math.UnitConversions.From_bar rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from bar to Pascal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_bar moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.IntegerToBoolean rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert Integer to Boolean signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.IntegerToBoolean moont:extends msl:Modelica.Blocks.Interfaces.partialBooleanSO.
msl:Modelica.Blocks.Math.IntegerToBoolean moont:hasPart msl:Modelica.Blocks.Math.IntegerToBoolean.threshold.
msl:Modelica.Blocks.Math.IntegerToBoolean.threshold a moont:MParameterComponent;
	 moont:identifier "threshold";
	 moont:type xsd:Integer;
	 moont:stringComment "Output signal y is true, if input u >_gleich_ threshold"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Math.IntegerToBoolean moont:hasPart msl:Modelica.Blocks.Math.IntegerToBoolean.u.
msl:Modelica.Blocks.Math.IntegerToBoolean.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Integer input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerInput.
msl:Modelica.Blocks.Math.Sin rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the sine of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Sin moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.IntegerToReal rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert Integer to Real signals"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.IntegerToReal moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Math.IntegerToReal moont:hasPart msl:Modelica.Blocks.Math.IntegerToReal.y.
msl:Modelica.Blocks.Math.IntegerToReal.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Real output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.IntegerToReal moont:hasPart msl:Modelica.Blocks.Math.IntegerToReal.u.
msl:Modelica.Blocks.Math.IntegerToReal.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Integer input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerInput.
msl:Modelica.Blocks.Math.UnitConversions.To_gps rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from kilogram per second to gram per second"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_gps moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.RectangularToPolar rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert rectangular coordinates to polar coordinates"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.RectangularToPolar moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Math.RectangularToPolar moont:hasPart msl:Modelica.Blocks.Math.RectangularToPolar.y_abs.
msl:Modelica.Blocks.Math.RectangularToPolar.y_abs a moont:MComponent ;
	 moont:identifier "y_abs";
	 moont:stringComment "Length of polar representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.RectangularToPolar moont:hasPart msl:Modelica.Blocks.Math.RectangularToPolar.u_re.
msl:Modelica.Blocks.Math.RectangularToPolar.u_re a moont:MComponent ;
	 moont:identifier "u_re";
	 moont:stringComment "Real part of rectangular representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.RectangularToPolar moont:hasPart msl:Modelica.Blocks.Math.RectangularToPolar.u_im.
msl:Modelica.Blocks.Math.RectangularToPolar.u_im a moont:MComponent ;
	 moont:identifier "u_im";
	 moont:stringComment "Imaginary part of rectangular representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.RectangularToPolar moont:hasPart msl:Modelica.Blocks.Math.RectangularToPolar.y_arg.
msl:Modelica.Blocks.Math.RectangularToPolar.y_arg a moont:MComponent ;
	 moont:identifier "y_arg";
	 moont:stringComment "Angle of polar representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.RectangularToPolar.y_arg.unit moont:modification "rad"^^xsd:Real.
msl:Modelica.Blocks.Math.Harmonic rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Calculate harmonic over period 1/f"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Harmonic moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.f.
msl:Modelica.Blocks.Math.Harmonic.f a moont:MParameterComponent;
	 moont:identifier "f";
	 moont:type msl:Modelica.SIunits.Frequency;
	 moont:stringComment "Base frequency"^^xsd:string;
	 moont:modification "(start_gleich_50)"^^xsd:string.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.x0Sin.
msl:Modelica.Blocks.Math.Harmonic.x0Sin a moont:MParameterComponent;
	 moont:identifier "x0Sin";
	 moont:type xsd:Real;
	 moont:stringComment "Start value of sin integrator state"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.k.
msl:Modelica.Blocks.Math.Harmonic.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Integer;
	 moont:stringComment "Order of harmonic"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.useConjugateComplex.
msl:Modelica.Blocks.Math.Harmonic.useConjugateComplex a moont:MParameterComponent;
	 moont:identifier "useConjugateComplex";
	 moont:type xsd:Boolean;
	 moont:stringComment "Gives conjugate complex result if true"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.x0Cos.
msl:Modelica.Blocks.Math.Harmonic.x0Cos a moont:MParameterComponent;
	 moont:identifier "x0Cos";
	 moont:type xsd:Real;
	 moont:stringComment "Start value of cos integrator state"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.sin1.
msl:Modelica.Blocks.Math.Harmonic.sin1 a moont:MComponent ;
	 moont:identifier "sin1";
	 a msl:Modelica.Blocks.Sources.Cosine.
msl:Modelica.Blocks.Math.Harmonic.sin1.finalamplitude moont:modification "sqrt(2)"^^xsd:String.
msl:Modelica.Blocks.Math.Harmonic.sin1.finalfreqHz moont:modification "k*f"^^xsd:String.
msl:Modelica.Blocks.Math.Harmonic.sin1.finalphase moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar a moont:MComponent ;
	 moont:identifier "rectangularToPolar";
	 a msl:Modelica.Blocks.Math.RectangularToPolar.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.y_arg.
msl:Modelica.Blocks.Math.Harmonic.y_arg a moont:MComponent ;
	 moont:identifier "y_arg";
	 moont:stringComment "Angle of polar representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.Harmonic.y_arg.unit moont:modification "rad"^^xsd:Real.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.sin2.
msl:Modelica.Blocks.Math.Harmonic.sin2 a moont:MComponent ;
	 moont:identifier "sin2";
	 a msl:Modelica.Blocks.Sources.Sine.
msl:Modelica.Blocks.Math.Harmonic.sin2.finalamplitude moont:modification "sqrt(2)"^^xsd:String.
msl:Modelica.Blocks.Math.Harmonic.sin2.finalphase moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Harmonic.sin2.finalfreqHz moont:modification "k*f"^^xsd:String.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.mean1.
msl:Modelica.Blocks.Math.Harmonic.mean1 a moont:MComponent ;
	 moont:identifier "mean1";
	 a msl:Modelica.Blocks.Math.Mean.
msl:Modelica.Blocks.Math.Harmonic.mean1.finalf moont:modification "f"^^xsd:String.
msl:Modelica.Blocks.Math.Harmonic.mean1.finalx0 moont:modification "x0Cos"^^xsd:String.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.u.
msl:Modelica.Blocks.Math.Harmonic.u a moont:MComponent ;
	 moont:identifier "u";
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.y_rms.
msl:Modelica.Blocks.Math.Harmonic.y_rms a moont:MComponent ;
	 moont:identifier "y_rms";
	 moont:stringComment "Root mean square of polar representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.gain.
msl:Modelica.Blocks.Math.Harmonic.gain a moont:MComponent ;
	 moont:identifier "gain";
	 a msl:Modelica.Blocks.Math.Gain.
msl:Modelica.Blocks.Math.Harmonic.gain.finalk moont:modification "ifuseConjugateComplexthen-1else1"^^xsd:String.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.mean2.
msl:Modelica.Blocks.Math.Harmonic.mean2 a moont:MComponent ;
	 moont:identifier "mean2";
	 a msl:Modelica.Blocks.Math.Mean.
msl:Modelica.Blocks.Math.Harmonic.mean2.finalf moont:modification "f"^^xsd:String.
msl:Modelica.Blocks.Math.Harmonic.mean2.finalx0 moont:modification "x0Sin"^^xsd:String.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.product1.
msl:Modelica.Blocks.Math.Harmonic.product1 a moont:MComponent ;
	 moont:identifier "product1";
	 a msl:Modelica.Blocks.Math.MultiProduct.
msl:Modelica.Blocks.Math.Harmonic.product1.nu moont:modification "2.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Harmonic moont:hasPart msl:Modelica.Blocks.Math.Harmonic.product2.
msl:Modelica.Blocks.Math.Harmonic.product2 a moont:MComponent ;
	 moont:identifier "product2";
	 a msl:Modelica.Blocks.Math.MultiProduct.
msl:Modelica.Blocks.Math.Harmonic.product2.nu moont:modification "2.0"^^xsd:Real.
msl:Modelica.Blocks.Math.Harmonic.product2 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.product2.y.
msl:Modelica.Blocks.Math.Harmonic.product2.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.product2.y moont:identifier "y".
msl:Modelica.Blocks.Math.Harmonic.product2.y moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.mean2.u.
msl:Modelica.Blocks.Math.Harmonic.mean2 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.mean2.u.
msl:Modelica.Blocks.Math.Harmonic.mean2.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.mean2.u moont:identifier "u".
msl:Modelica.Blocks.Math.Harmonic.product1 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.product1.y.
msl:Modelica.Blocks.Math.Harmonic.product1.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.product1.y moont:identifier "y".
msl:Modelica.Blocks.Math.Harmonic.product1.y moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.mean1.u.
msl:Modelica.Blocks.Math.Harmonic.mean1 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.mean1.u.
msl:Modelica.Blocks.Math.Harmonic.mean1.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.mean1.u moont:identifier "u".
msl:Modelica.Blocks.Math.Harmonic.mean1 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.mean1.y.
msl:Modelica.Blocks.Math.Harmonic.mean1.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.mean1.y moont:identifier "y".
msl:Modelica.Blocks.Math.Harmonic.mean1.y moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.u_re.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar moont:hasPart msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.u_re.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.u_re a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.u_re moont:identifier "u_re".
msl:Modelica.Blocks.Math.Harmonic.mean2 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.mean2.y.
msl:Modelica.Blocks.Math.Harmonic.mean2.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.mean2.y moont:identifier "y".
msl:Modelica.Blocks.Math.Harmonic.mean2.y moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.u_im.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar moont:hasPart msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.u_im.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.u_im a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.u_im moont:identifier "u_im".
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar moont:hasPart msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.y_abs.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.y_abs a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.y_abs moont:identifier "y_abs".
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.y_abs moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.y_rms.
msl:Modelica.Blocks.Math.Harmonic.sin1 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.sin1.y.
msl:Modelica.Blocks.Math.Harmonic.sin1.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.sin1.y moont:identifier "y".
msl:Modelica.Blocks.Math.Harmonic.sin1.y moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.product1.u_1.
msl:Modelica.Blocks.Math.Harmonic.product1 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.product1.u_1.
msl:Modelica.Blocks.Math.Harmonic.product1.u_1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.product1.u_1 moont:identifier "u_1".
msl:Modelica.Blocks.Math.Harmonic.u moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.product1.u_2.
msl:Modelica.Blocks.Math.Harmonic.product1 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.product1.u_2.
msl:Modelica.Blocks.Math.Harmonic.product1.u_2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.product1.u_2 moont:identifier "u_2".
msl:Modelica.Blocks.Math.Harmonic.u moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.product2.u_1.
msl:Modelica.Blocks.Math.Harmonic.product2 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.product2.u_1.
msl:Modelica.Blocks.Math.Harmonic.product2.u_1 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.product2.u_1 moont:identifier "u_1".
msl:Modelica.Blocks.Math.Harmonic.sin2 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.sin2.y.
msl:Modelica.Blocks.Math.Harmonic.sin2.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.sin2.y moont:identifier "y".
msl:Modelica.Blocks.Math.Harmonic.sin2.y moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.product2.u_2.
msl:Modelica.Blocks.Math.Harmonic.product2 moont:hasPart msl:Modelica.Blocks.Math.Harmonic.product2.u_2.
msl:Modelica.Blocks.Math.Harmonic.product2.u_2 a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.product2.u_2 moont:identifier "u_2".
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar moont:hasPart msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.y_arg.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.y_arg a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.y_arg moont:identifier "y_arg".
msl:Modelica.Blocks.Math.Harmonic.rectangularToPolar.y_arg moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.gain.u.
msl:Modelica.Blocks.Math.Harmonic.gain moont:hasPart msl:Modelica.Blocks.Math.Harmonic.gain.u.
msl:Modelica.Blocks.Math.Harmonic.gain.u a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.gain.u moont:identifier "u".
msl:Modelica.Blocks.Math.Harmonic.gain moont:hasPart msl:Modelica.Blocks.Math.Harmonic.gain.y.
msl:Modelica.Blocks.Math.Harmonic.gain.y a moont:MConnectorComponent.
msl:Modelica.Blocks.Math.Harmonic.gain.y moont:identifier "y".
msl:Modelica.Blocks.Math.Harmonic.gain.y moont:connectedTo msl:Modelica.Blocks.Math.Harmonic.y_arg.
msl:Modelica.Blocks.Math.UnitConversions.From_degC rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from degCelsius to Kelvin"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_degC moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.To_day rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from second to day"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_day moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.From_hour rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from hour to second"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_hour moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.Variance rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Calculates the empirical variance of its input signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Variance moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Math.Variance moont:hasPart msl:Modelica.Blocks.Math.Variance.t_eps.
msl:Modelica.Blocks.Math.Variance.t_eps a moont:MParameterComponent;
	 moont:identifier "t_eps";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Variance calculation starts at startTime + t_eps"^^xsd:string;
	 moont:modification "(min_gleich_100*Modelica.Constants.eps)_gleich_1e-7"^^xsd:string.
msl:Modelica.Blocks.Math.Variance moont:hasPart msl:Modelica.Blocks.Math.Variance.t_0.
msl:Modelica.Blocks.Math.Variance.t_0 a moont:MParameterComponent;
	 moont:identifier "t_0";
	 moont:type xsd:Real;
	 moont:stringComment "Start time"^^xsd:string;
	 moont:modification "(fixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Math.Variance moont:hasPart msl:Modelica.Blocks.Math.Variance.y.
msl:Modelica.Blocks.Math.Variance.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Variance of the input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.Variance moont:hasPart msl:Modelica.Blocks.Math.Variance.mu.
msl:Modelica.Blocks.Math.Variance.mu a moont:MComponent ;
	 moont:identifier "mu";
	 moont:stringComment "Mean value (state variable)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Math.Variance moont:hasPart msl:Modelica.Blocks.Math.Variance.var.
msl:Modelica.Blocks.Math.Variance.var a moont:MComponent ;
	 moont:identifier "var";
	 moont:stringComment "Variance (state variable)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Math.Variance moont:hasPart msl:Modelica.Blocks.Math.Variance.u.
msl:Modelica.Blocks.Math.Variance.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Noisy input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.Feedback rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output difference between commanded and feedback input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Feedback moont:hasPart msl:Modelica.Blocks.Math.Feedback.u1.
msl:Modelica.Blocks.Math.Feedback.u1 a moont:MComponent ;
	 moont:identifier "u1";
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.Feedback moont:hasPart msl:Modelica.Blocks.Math.Feedback.y.
msl:Modelica.Blocks.Math.Feedback.y a moont:MComponent ;
	 moont:identifier "y";
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.Feedback moont:hasPart msl:Modelica.Blocks.Math.Feedback.u2.
msl:Modelica.Blocks.Math.Feedback.u2 a moont:MComponent ;
	 moont:identifier "u2";
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.UnitConversions.To_deg rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from radian to degree"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_deg moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.From_kWh rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from kilo Watt hour to Joule"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_kWh moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.Atan rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output the arc tangent of the input"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.Atan moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.UnitConversions.To_degF rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from Kelvin to degFahrenheit"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.To_degF moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.UnitConversions.From_gps rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert from gram per second to kilogram per second"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.UnitConversions.
msl:Modelica.Blocks.Math.UnitConversions.From_gps moont:extends msl:Modelica.Blocks.Interfaces.PartialConversionBlock.
msl:Modelica.Blocks.Math.RealToInteger rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert Real to Integer signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.RealToInteger moont:extends msl:Modelica.Blocks.Icons.IntegerBlock.
msl:Modelica.Blocks.Math.RealToInteger moont:hasPart msl:Modelica.Blocks.Math.RealToInteger.u.
msl:Modelica.Blocks.Math.RealToInteger.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Connector of Real input signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.RealToInteger moont:hasPart msl:Modelica.Blocks.Math.RealToInteger.y.
msl:Modelica.Blocks.Math.RealToInteger.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Connector of Integer output signal"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.Math.PolarToRectangular rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Convert polar coordinates to rectangular coordinates"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.PolarToRectangular moont:extends msl:Modelica.Blocks.Icons.Block.
msl:Modelica.Blocks.Math.PolarToRectangular moont:hasPart msl:Modelica.Blocks.Math.PolarToRectangular.u_abs.
msl:Modelica.Blocks.Math.PolarToRectangular.u_abs a moont:MComponent ;
	 moont:identifier "u_abs";
	 moont:stringComment "Length of polar representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.PolarToRectangular moont:hasPart msl:Modelica.Blocks.Math.PolarToRectangular.y_im.
msl:Modelica.Blocks.Math.PolarToRectangular.y_im a moont:MComponent ;
	 moont:identifier "y_im";
	 moont:stringComment "Imaginary part of rectangular representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.PolarToRectangular moont:hasPart msl:Modelica.Blocks.Math.PolarToRectangular.y_re.
msl:Modelica.Blocks.Math.PolarToRectangular.y_re a moont:MComponent ;
	 moont:identifier "y_re";
	 moont:stringComment "Real part of rectangular representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealOutput.
msl:Modelica.Blocks.Math.PolarToRectangular moont:hasPart msl:Modelica.Blocks.Math.PolarToRectangular.u_arg.
msl:Modelica.Blocks.Math.PolarToRectangular.u_arg a moont:MComponent ;
	 moont:identifier "u_arg";
	 moont:stringComment "Angle of polar representation"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Math.PolarToRectangular.u_arg.unit moont:modification "rad"^^xsd:Real.
msl:Modelica.Blocks.Math.WrapAngle rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Wrap angle to interval _-pi,pi_ or _0,2*pi_"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Math.
msl:Modelica.Blocks.Math.WrapAngle moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Math.WrapAngle moont:hasPart msl:Modelica.Blocks.Math.WrapAngle.positiveRange.
msl:Modelica.Blocks.Math.WrapAngle.positiveRange a moont:MParameterComponent;
	 moont:identifier "positiveRange";
	 moont:type xsd:Boolean;
	 moont:stringComment "Use only positive output range, if true"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.MathBoolean.Or rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _or_: y _gleich_ u_1_ or u_2_ or ... or u_nu_"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.Or moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.
msl:Modelica.Blocks.MathBoolean.OnDelay rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Delay a rising edge of the input, but do not delay a falling edge."^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.OnDelay moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small.
msl:Modelica.Blocks.MathBoolean.OnDelay moont:hasPart msl:Modelica.Blocks.MathBoolean.OnDelay.delayTime.
msl:Modelica.Blocks.MathBoolean.OnDelay.delayTime a moont:MParameterComponent;
	 moont:identifier "delayTime";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Delay time"^^xsd:string;
.
msl:Modelica.Blocks.MathBoolean.OnDelay moont:hasPart msl:Modelica.Blocks.MathBoolean.OnDelay.t_next.
msl:Modelica.Blocks.MathBoolean.OnDelay.t_next a moont:MComponent ;
	 moont:identifier "t_next";
	 a msl:Modelica.SIunits.Time.
msl:Modelica.Blocks.MathBoolean.OnDelay moont:hasPart msl:Modelica.Blocks.MathBoolean.OnDelay.delaySignal.
msl:Modelica.Blocks.MathBoolean.OnDelay.delaySignal a moont:MComponent ;
	 moont:identifier "delaySignal";
	 a msl:Boolean.
msl:Modelica.Blocks.MathBoolean.OnDelay.delaySignal.start moont:modification "false"^^xsd:boolean.
msl:Modelica.Blocks.MathBoolean.OnDelay.delaySignal.fixed moont:modification "true"^^xsd:boolean.
msl:Modelica.Blocks.MathBoolean.Not rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _not_: y _gleich_ not u"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.Not moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small.
msl:Modelica.Blocks.MathBoolean.Xor rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _xor_: y _gleich_ oneTrue(u)  (y is true, if exactly one element of u is true, otherwise it is false)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.Xor moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.
msl:Modelica.Blocks.MathBoolean.Nand rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _nand_: y _gleich_ not ( u_1_ and u_2_ and ... and u_nu_ )"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.Nand moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.
msl:Modelica.Blocks.MathBoolean rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of Boolean mathematical functions as input/output blocks"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.MathBoolean moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.MathBoolean.RisingEdge rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if the input u has a rising edge, otherwise it is false (y _gleich_ edge(u))"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.RisingEdge moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small.
msl:Modelica.Blocks.MathBoolean.RisingEdge moont:hasPart msl:Modelica.Blocks.MathBoolean.RisingEdge.pre_u_start.
msl:Modelica.Blocks.MathBoolean.RisingEdge.pre_u_start a moont:MParameterComponent;
	 moont:identifier "pre_u_start";
	 moont:type xsd:Boolean;
	 moont:stringComment "Value of pre(u) at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.MathBoolean.MultiSwitch rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Set Boolean expression that is associated with the first active input signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathBoolean.MultiSwitch.nu.
msl:Modelica.Blocks.MathBoolean.MultiSwitch.nu a moont:MParameterComponent;
	 moont:identifier "nu";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of input connections"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_0"^^xsd:string.
msl:Modelica.Blocks.MathBoolean.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathBoolean.MultiSwitch.use_pre_as_default.
msl:Modelica.Blocks.MathBoolean.MultiSwitch.use_pre_as_default a moont:MParameterComponent;
	 moont:identifier "use_pre_as_default";
	 moont:type xsd:Boolean;
	 moont:stringComment "set true to hold last value as default (y_default _gleich_ pre(y))"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.MathBoolean.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathBoolean.MultiSwitch.y_default.
msl:Modelica.Blocks.MathBoolean.MultiSwitch.y_default a moont:MParameterComponent;
	 moont:identifier "y_default";
	 moont:type xsd:Boolean;
	 moont:stringComment "Default value of output y if all u_i_ _gleich_ false"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.MathBoolean.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathBoolean.MultiSwitch.u.
msl:Modelica.Blocks.MathBoolean.MultiSwitch.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Set y _gleich_ expr_i_, if u_i_ _gleich_ true"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanVectorInput.
msl:Modelica.Blocks.MathBoolean.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathBoolean.MultiSwitch.y.
msl:Modelica.Blocks.MathBoolean.MultiSwitch.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Output depending on expression"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.MathBoolean.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathBoolean.MultiSwitch.expr.
msl:Modelica.Blocks.MathBoolean.MultiSwitch.expr a moont:MComponent ;
	 moont:identifier "expr";
	 moont:stringComment "y _gleich_ if u_i_ then expr_i_ else y_default (time varying)"^^xsd:string;
	 a msl:Boolean.
msl:Modelica.Blocks.MathBoolean.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathBoolean.MultiSwitch.firstActiveIndex.
msl:Modelica.Blocks.MathBoolean.MultiSwitch.firstActiveIndex a moont:MComponent ;
	 moont:identifier "firstActiveIndex";
	 a msl:Integer.
msl:Modelica.Blocks.MathBoolean.FallingEdge rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if the input u has a falling edge, otherwise it is false (y _gleich_ edge(not u))"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.FallingEdge moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small.
msl:Modelica.Blocks.MathBoolean.FallingEdge moont:hasPart msl:Modelica.Blocks.MathBoolean.FallingEdge.pre_u_start.
msl:Modelica.Blocks.MathBoolean.FallingEdge.pre_u_start a moont:MParameterComponent;
	 moont:identifier "pre_u_start";
	 moont:type xsd:Boolean;
	 moont:stringComment "Value of pre(u) at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.MathBoolean.FallingEdge moont:hasPart msl:Modelica.Blocks.MathBoolean.FallingEdge.not_u.
msl:Modelica.Blocks.MathBoolean.FallingEdge.not_u a moont:MComponent ;
	 moont:identifier "not_u";
	 a msl:Boolean.
msl:Modelica.Blocks.MathBoolean.ChangingEdge rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Output y is true, if the input u has either a rising or a falling edge and otherwise it is false (y_gleich_change(u))"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.ChangingEdge moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanSISO_small.
msl:Modelica.Blocks.MathBoolean.ChangingEdge moont:hasPart msl:Modelica.Blocks.MathBoolean.ChangingEdge.pre_u_start.
msl:Modelica.Blocks.MathBoolean.ChangingEdge.pre_u_start a moont:MParameterComponent;
	 moont:identifier "pre_u_start";
	 moont:type xsd:Boolean;
	 moont:stringComment "Value of pre(u) at initial time"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.MathBoolean.And rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _and_: y _gleich_ u_1_ and u_2_ and ... and u_nu_"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.And moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.
msl:Modelica.Blocks.MathBoolean.Nor rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Logical _nor_: y _gleich_ not ( u_1_ or u_2_ or ... or u_nu_ )"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathBoolean.
msl:Modelica.Blocks.MathBoolean.Nor moont:extends msl:Modelica.Blocks.Interfaces.PartialBooleanMISO.
msl:Modelica.Blocks.MathInteger.Sum rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Sum of Integers: y _gleich_ k_1_*u_1_ + k_2_*u_2_ + ... + k_n_*u_n_"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathInteger.
msl:Modelica.Blocks.MathInteger.Sum moont:extends msl:Modelica.Blocks.Interfaces.PartialIntegerMISO.
msl:Modelica.Blocks.MathInteger.Sum moont:hasPart msl:Modelica.Blocks.MathInteger.Sum.k.
msl:Modelica.Blocks.MathInteger.Sum.k a moont:MParameterComponent;
	 moont:identifier "k";
	 moont:type xsd:Integer;
	 moont:stringComment "Input gains"^^xsd:string;
	 moont:modification "_gleich_fill(1,nu)"^^xsd:string.
msl:Modelica.Blocks.MathInteger.Product rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Product of Integer: y _gleich_ u_1_*u_2_* ... *u_n_"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathInteger.
msl:Modelica.Blocks.MathInteger.Product moont:extends msl:Modelica.Blocks.Interfaces.PartialIntegerMISO.
msl:Modelica.Blocks.MathInteger.TriggeredAdd rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Add input to previous value of output, if rising edge of trigger port"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathInteger.
msl:Modelica.Blocks.MathInteger.TriggeredAdd moont:extends msl:Modelica.Blocks.Interfaces.PartialIntegerSISO.
msl:Modelica.Blocks.MathInteger.TriggeredAdd moont:hasPart msl:Modelica.Blocks.MathInteger.TriggeredAdd.y_start.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Integer;
	 moont:stringComment "Initial and reset value of y if set port is not used"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.MathInteger.TriggeredAdd moont:hasPart msl:Modelica.Blocks.MathInteger.TriggeredAdd.use_set.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.use_set a moont:MParameterComponent;
	 moont:identifier "use_set";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_true, if set port enabled and used as default value when reset"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.MathInteger.TriggeredAdd moont:hasPart msl:Modelica.Blocks.MathInteger.TriggeredAdd.use_reset.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.use_reset a moont:MParameterComponent;
	 moont:identifier "use_reset";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_true, if reset port enabled"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.MathInteger.TriggeredAdd moont:hasPart msl:Modelica.Blocks.MathInteger.TriggeredAdd.trigger.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.trigger a moont:MComponent ;
	 moont:identifier "trigger";
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.MathInteger.TriggeredAdd moont:hasPart msl:Modelica.Blocks.MathInteger.TriggeredAdd.set.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.set a moont:MComponent ;
	 moont:identifier "set";
	 a msl:Modelica.Blocks.Interfaces.IntegerInput.
msl:Modelica.Blocks.MathInteger.TriggeredAdd moont:hasPart msl:Modelica.Blocks.MathInteger.TriggeredAdd.local_set.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.local_set a moont:MComponent ;
	 moont:identifier "local_set";
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.MathInteger.TriggeredAdd moont:hasPart msl:Modelica.Blocks.MathInteger.TriggeredAdd.reset.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.reset a moont:MComponent ;
	 moont:identifier "reset";
	 a msl:Modelica.Blocks.Interfaces.BooleanInput.
msl:Modelica.Blocks.MathInteger.TriggeredAdd moont:hasPart msl:Modelica.Blocks.MathInteger.TriggeredAdd.local_reset.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.local_reset a moont:MComponent ;
	 moont:identifier "local_reset";
	 a msl:Modelica.Blocks.Interfaces.BooleanOutput.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.reset moont:connectedTo msl:Modelica.Blocks.MathInteger.TriggeredAdd.local_reset.
msl:Modelica.Blocks.MathInteger.TriggeredAdd.set moont:connectedTo msl:Modelica.Blocks.MathInteger.TriggeredAdd.local_set.
msl:Modelica.Blocks.MathInteger rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of Integer mathematical functions as input/output blocks"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.MathInteger moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.MathInteger.MultiSwitch rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Set Integer expression that is associated with the first active input signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.MathInteger.
msl:Modelica.Blocks.MathInteger.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathInteger.MultiSwitch.use_pre_as_default.
msl:Modelica.Blocks.MathInteger.MultiSwitch.use_pre_as_default a moont:MParameterComponent;
	 moont:identifier "use_pre_as_default";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, y holds its last value if all u_i__gleich_false, otherwise y_gleich_y_default"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.MathInteger.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathInteger.MultiSwitch.y_default.
msl:Modelica.Blocks.MathInteger.MultiSwitch.y_default a moont:MParameterComponent;
	 moont:identifier "y_default";
	 moont:type xsd:Integer;
	 moont:stringComment "Default value of output y if use_pre_as_default_gleich_false, as well as pre(y) at initial time"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.MathInteger.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathInteger.MultiSwitch.nu.
msl:Modelica.Blocks.MathInteger.MultiSwitch.nu a moont:MParameterComponent;
	 moont:identifier "nu";
	 moont:type xsd:Integer;
	 moont:stringComment "Number of input connections"^^xsd:string;
	 moont:modification "(min_gleich_0)_gleich_0"^^xsd:string.
msl:Modelica.Blocks.MathInteger.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathInteger.MultiSwitch.y.
msl:Modelica.Blocks.MathInteger.MultiSwitch.y a moont:MComponent ;
	 moont:identifier "y";
	 moont:stringComment "Output depending on expression"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.IntegerOutput.
msl:Modelica.Blocks.MathInteger.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathInteger.MultiSwitch.expr.
msl:Modelica.Blocks.MathInteger.MultiSwitch.expr a moont:MComponent ;
	 moont:identifier "expr";
	 moont:stringComment "y _gleich_ if u_i_ then expr_i_ elseif use_pre_as_default then pre(y) else y_default"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.MathInteger.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathInteger.MultiSwitch.u.
msl:Modelica.Blocks.MathInteger.MultiSwitch.u a moont:MComponent ;
	 moont:identifier "u";
	 moont:stringComment "Set y _gleich_ expr_i_, if u_i_ _gleich_ true"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.BooleanVectorInput.
msl:Modelica.Blocks.MathInteger.MultiSwitch moont:hasPart msl:Modelica.Blocks.MathInteger.MultiSwitch.firstActiveIndex.
msl:Modelica.Blocks.MathInteger.MultiSwitch.firstActiveIndex a moont:MComponent ;
	 moont:identifier "firstActiveIndex";
	 a msl:Integer.
msl:Modelica.Blocks.Noise.UniformNoise rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Noise generator with uniform distribution"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Noise.
msl:Modelica.Blocks.Noise.UniformNoise moont:extends msl:Modelica.Blocks.Interfaces.PartialNoise.
msl:Modelica.Blocks.Noise.UniformNoise moont:hasPart msl:Modelica.Blocks.Noise.UniformNoise.y_min.
msl:Modelica.Blocks.Noise.UniformNoise.y_min a moont:MParameterComponent;
	 moont:identifier "y_min";
	 moont:type xsd:Real;
	 moont:stringComment "Lower limit of y"^^xsd:string;
	 moont:modification "(start_gleich_0)"^^xsd:string.
msl:Modelica.Blocks.Noise.UniformNoise moont:hasPart msl:Modelica.Blocks.Noise.UniformNoise.y_max.
msl:Modelica.Blocks.Noise.UniformNoise.y_max a moont:MParameterComponent;
	 moont:identifier "y_max";
	 moont:type xsd:Real;
	 moont:stringComment "Upper limit of y"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Noise.NormalNoise rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Noise generator with normal distribution"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Noise.
msl:Modelica.Blocks.Noise.NormalNoise moont:extends msl:Modelica.Blocks.Interfaces.PartialNoise.
msl:Modelica.Blocks.Noise.NormalNoise moont:hasPart msl:Modelica.Blocks.Noise.NormalNoise.sigma.
msl:Modelica.Blocks.Noise.NormalNoise.sigma a moont:MParameterComponent;
	 moont:identifier "sigma";
	 moont:type xsd:Real;
	 moont:stringComment "Standard deviation of the normal distribution"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Noise.NormalNoise moont:hasPart msl:Modelica.Blocks.Noise.NormalNoise.mu.
msl:Modelica.Blocks.Noise.NormalNoise.mu a moont:MParameterComponent;
	 moont:identifier "mu";
	 moont:type xsd:Real;
	 moont:stringComment "Expectation (mean) value of the normal distribution"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Noise generator with truncated normal distribution"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Noise.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise moont:extends msl:Modelica.Blocks.Interfaces.PartialNoise.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise moont:hasPart msl:Modelica.Blocks.Noise.TruncatedNormalNoise.sigma.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise.sigma a moont:MParameterComponent;
	 moont:identifier "sigma";
	 moont:type xsd:Real;
	 moont:stringComment "Standard deviation of the normal distribution"^^xsd:string;
	 moont:modification "_gleich_(y_max-y_min)/6"^^xsd:string.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise moont:hasPart msl:Modelica.Blocks.Noise.TruncatedNormalNoise.mu.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise.mu a moont:MParameterComponent;
	 moont:identifier "mu";
	 moont:type xsd:Real;
	 moont:stringComment "Expectation (mean) value of the normal distribution"^^xsd:string;
	 moont:modification "_gleich_(y_max+y_min)/2"^^xsd:string.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise moont:hasPart msl:Modelica.Blocks.Noise.TruncatedNormalNoise.y_max.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise.y_max a moont:MParameterComponent;
	 moont:identifier "y_max";
	 moont:type xsd:Real;
	 moont:stringComment "Upper limit of y"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise moont:hasPart msl:Modelica.Blocks.Noise.TruncatedNormalNoise.y_min.
msl:Modelica.Blocks.Noise.TruncatedNormalNoise.y_min a moont:MParameterComponent;
	 moont:identifier "y_min";
	 moont:type xsd:Real;
	 moont:stringComment "Lower limit of y"^^xsd:string;
	 moont:modification "(start_gleich_0)"^^xsd:string.
msl:Modelica.Blocks.Noise.GlobalSeed rdfs:subClassOf moont:MModel;
	 moont:stringComment "Defines global settings for the blocks of sublibrary Noise, especially a global seed value is defined"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Noise.
msl:Modelica.Blocks.Noise.GlobalSeed moont:hasPart msl:Modelica.Blocks.Noise.GlobalSeed.fixedSeed.
msl:Modelica.Blocks.Noise.GlobalSeed.fixedSeed a moont:MParameterComponent;
	 moont:identifier "fixedSeed";
	 moont:type xsd:Integer;
	 moont:stringComment "Fixed global seed for random number generators (if useAutomaticSeed _gleich_ false)"^^xsd:string;
	 moont:modification "6.7867967E7"^^xsd:Real.
msl:Modelica.Blocks.Noise.GlobalSeed moont:hasPart msl:Modelica.Blocks.Noise.GlobalSeed.seed.
msl:Modelica.Blocks.Noise.GlobalSeed.seed a moont:MParameterComponent;
	 moont:identifier "seed";
	 moont:type xsd:Integer;
	 moont:stringComment "Actually used global seed"^^xsd:string;
	 moont:modification "(fixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Noise.GlobalSeed moont:hasPart msl:Modelica.Blocks.Noise.GlobalSeed.id_impure.
msl:Modelica.Blocks.Noise.GlobalSeed.id_impure a moont:MParameterComponent;
	 moont:identifier "id_impure";
	 moont:type xsd:Integer;
	 moont:stringComment "ID for impure random number generators Modelica.Math.Random.Utilities.impureXXX"^^xsd:string;
	 moont:modification "(fixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Noise.GlobalSeed moont:hasPart msl:Modelica.Blocks.Noise.GlobalSeed.enableNoise.
msl:Modelica.Blocks.Noise.GlobalSeed.enableNoise a moont:MParameterComponent;
	 moont:identifier "enableNoise";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if noise blocks generate noise as output; _gleich_ false, if they generate a constant output"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Noise.GlobalSeed moont:hasPart msl:Modelica.Blocks.Noise.GlobalSeed.useAutomaticSeed.
msl:Modelica.Blocks.Noise.GlobalSeed.useAutomaticSeed a moont:MParameterComponent;
	 moont:identifier "useAutomaticSeed";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, choose a seed by system time and process id; _gleich_ false, use fixedSeed"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Noise generator to produce band-limited white noise with normal distribution"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Noise.
msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise moont:extends msl:Modelica.Blocks.Interfaces.PartialNoise.
msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise moont:hasPart msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise.sigma.
msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise.sigma a moont:MParameterComponent;
	 moont:identifier "sigma";
	 moont:type xsd:Real;
	 moont:modification "_gleich_sqrt(noisePower/samplePeriod)"^^xsd:string.
msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise moont:hasPart msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise.mu.
msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise.mu a moont:MParameterComponent;
	 moont:identifier "mu";
	 moont:type xsd:Real;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise moont:hasPart msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise.noisePower.
msl:Modelica.Blocks.Noise.BandLimitedWhiteNoise.noisePower a moont:MParameterComponent;
	 moont:identifier "noisePower";
	 moont:type xsd:Real;
	 moont:stringComment "Power of white noise signal"^^xsd:string;
	 moont:modification "1.0"^^xsd:Real.
msl:Modelica.Blocks.Noise rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of noise blocks"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.Noise moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.Nonlinear.Limiter rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Limit the range of a signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Nonlinear.
msl:Modelica.Blocks.Nonlinear.Limiter moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Nonlinear.Limiter moont:hasPart msl:Modelica.Blocks.Nonlinear.Limiter.uMax.
msl:Modelica.Blocks.Nonlinear.Limiter.uMax a moont:MParameterComponent;
	 moont:identifier "uMax";
	 moont:type xsd:Real;
	 moont:stringComment "Upper limits of input signals"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.Limiter moont:hasPart msl:Modelica.Blocks.Nonlinear.Limiter.limitsAtInit.
msl:Modelica.Blocks.Nonlinear.Limiter.limitsAtInit a moont:MParameterComponent;
	 moont:identifier "limitsAtInit";
	 moont:type xsd:Boolean;
	 moont:stringComment "Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator)"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.Limiter moont:hasPart msl:Modelica.Blocks.Nonlinear.Limiter.strict.
msl:Modelica.Blocks.Nonlinear.Limiter.strict a moont:MParameterComponent;
	 moont:identifier "strict";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if strict limits with noEvent(..)"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.Limiter moont:hasPart msl:Modelica.Blocks.Nonlinear.Limiter.homotopyType.
msl:Modelica.Blocks.Nonlinear.Limiter.homotopyType a moont:MParameterComponent;
	 moont:identifier "homotopyType";
	 moont:type msl:Modelica.Blocks.Types.LimiterHomotopy;
	 moont:stringComment "Simplified model for homotopy-based initialization"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.LimiterHomotopy.Linear"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.Limiter moont:hasPart msl:Modelica.Blocks.Nonlinear.Limiter.uMin.
msl:Modelica.Blocks.Nonlinear.Limiter.uMin a moont:MParameterComponent;
	 moont:identifier "uMin";
	 moont:type xsd:Real;
	 moont:stringComment "Lower limits of input signals"^^xsd:string;
	 moont:modification "_gleich_-uMax"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.Limiter moont:hasPart msl:Modelica.Blocks.Nonlinear.Limiter.simplifiedExpr.
msl:Modelica.Blocks.Nonlinear.Limiter.simplifiedExpr a moont:MComponent ;
	 moont:identifier "simplifiedExpr";
	 moont:stringComment "Simplified expression for homotopy-based initialization"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear rdfs:subClassOf moont:MPackage;
	 moont:stringComment "Library of discontinuous or non-differentiable algebraic control blocks"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.
msl:Modelica.Blocks.Nonlinear moont:extends msl:Modelica.Icons.Package.
msl:Modelica.Blocks.Nonlinear.PadeDelay rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Pade approximation of delay block with fixed delayTime (use balance_gleich_true; this is not the default to be backwards compatible)"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Nonlinear.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.m.
msl:Modelica.Blocks.Nonlinear.PadeDelay.m a moont:MParameterComponent;
	 moont:identifier "m";
	 moont:type xsd:Integer;
	 moont:stringComment "Order of numerator (usually m_gleich_n, or m_gleich_n-1)"^^xsd:string;
	 moont:modification "(min_gleich_1,max_gleich_n)_gleich_n"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.b11.
msl:Modelica.Blocks.Nonlinear.PadeDelay.b11 a moont:MParameterComponent;
	 moont:identifier "b11";
	 moont:type xsd:Real;
	 moont:stringComment "_gleich_ B_1,1_"^^xsd:string;
	 moont:modification "(fixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.d.
msl:Modelica.Blocks.Nonlinear.PadeDelay.d a moont:MParameterComponent;
	 moont:identifier "d";
	 moont:type xsd:Real;
	 moont:stringComment "D matrix"^^xsd:string;
	 moont:modification "(fixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.n.
msl:Modelica.Blocks.Nonlinear.PadeDelay.n a moont:MParameterComponent;
	 moont:identifier "n";
	 moont:type xsd:Integer;
	 moont:stringComment "Order of Pade delay"^^xsd:string;
	 moont:modification "(min_gleich_1)_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.c.
msl:Modelica.Blocks.Nonlinear.PadeDelay.c a moont:MParameterComponent;
	 moont:identifier "c";
	 moont:type xsd:Real;
	 moont:stringComment "C row matrix"^^xsd:string;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.a1.
msl:Modelica.Blocks.Nonlinear.PadeDelay.a1 a moont:MParameterComponent;
	 moont:identifier "a1";
	 moont:type xsd:Real;
	 moont:stringComment "First row of A"^^xsd:string;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.delayTime.
msl:Modelica.Blocks.Nonlinear.PadeDelay.delayTime a moont:MParameterComponent;
	 moont:identifier "delayTime";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Delay time of output with respect to input signal"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.s.
msl:Modelica.Blocks.Nonlinear.PadeDelay.s a moont:MParameterComponent;
	 moont:identifier "s";
	 moont:type xsd:Real;
	 moont:stringComment "State scaling"^^xsd:string;
	 moont:modification "(eachfixed_gleich_false)"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.balance.
msl:Modelica.Blocks.Nonlinear.PadeDelay.balance a moont:MParameterComponent;
	 moont:identifier "balance";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if state space system is balanced (highly recommended), otherwise textbook version"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.PadeDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.x.
msl:Modelica.Blocks.Nonlinear.PadeDelay.x a moont:MComponent ;
	 moont:identifier "x";
	 moont:stringComment "State of transfer function from controller canonical form (balance_gleich_false), or balanced controller canonical form (balance_gleich_true)"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.VariableLimiter rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Limit the range of a signal with variable limits"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Nonlinear.
msl:Modelica.Blocks.Nonlinear.VariableLimiter moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Nonlinear.VariableLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.VariableLimiter.homotopyType.
msl:Modelica.Blocks.Nonlinear.VariableLimiter.homotopyType a moont:MParameterComponent;
	 moont:identifier "homotopyType";
	 moont:type msl:Modelica.Blocks.Types.VariableLimiterHomotopy;
	 moont:stringComment "Simplified model for homotopy-based initialization"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.VariableLimiterHomotopy.Linear"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.VariableLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.VariableLimiter.strict.
msl:Modelica.Blocks.Nonlinear.VariableLimiter.strict a moont:MParameterComponent;
	 moont:identifier "strict";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if strict limits with noEvent(..)"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.VariableLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.VariableLimiter.ySimplified.
msl:Modelica.Blocks.Nonlinear.VariableLimiter.ySimplified a moont:MParameterComponent;
	 moont:identifier "ySimplified";
	 moont:type xsd:Real;
	 moont:stringComment "Fixed value of output in simplified model"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Nonlinear.VariableLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.VariableLimiter.limitsAtInit.
msl:Modelica.Blocks.Nonlinear.VariableLimiter.limitsAtInit a moont:MParameterComponent;
	 moont:identifier "limitsAtInit";
	 moont:type xsd:Boolean;
	 moont:stringComment "Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator)"^^xsd:string;
	 moont:modification "_gleich_true"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.VariableLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.VariableLimiter.limit1.
msl:Modelica.Blocks.Nonlinear.VariableLimiter.limit1 a moont:MComponent ;
	 moont:identifier "limit1";
	 moont:stringComment "Connector of Real input signal used as maximum of input u"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Nonlinear.VariableLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.VariableLimiter.simplifiedExpr.
msl:Modelica.Blocks.Nonlinear.VariableLimiter.simplifiedExpr a moont:MComponent ;
	 moont:identifier "simplifiedExpr";
	 moont:stringComment "Simplified expression for homotopy-based initialization"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.VariableLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.VariableLimiter.limit2.
msl:Modelica.Blocks.Nonlinear.VariableLimiter.limit2 a moont:MComponent ;
	 moont:identifier "limit2";
	 moont:stringComment "Connector of Real input signal used as minimum of input u"^^xsd:string;
	 a msl:Modelica.Blocks.Interfaces.RealInput.
msl:Modelica.Blocks.Nonlinear.FixedDelay rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Delay block with fixed DelayTime"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Nonlinear.
msl:Modelica.Blocks.Nonlinear.FixedDelay moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Nonlinear.FixedDelay moont:hasPart msl:Modelica.Blocks.Nonlinear.FixedDelay.delayTime.
msl:Modelica.Blocks.Nonlinear.FixedDelay.delayTime a moont:MParameterComponent;
	 moont:identifier "delayTime";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Delay time of output with respect to input signal"^^xsd:string;
	 moont:modification "(start_gleich_1)"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter rdfs:subClassOf moont:MBlock;
	 moont:stringComment "Limits the slew rate of a signal"^^xsd:string;
	 moont:containedIn msl:Modelica.Blocks.Nonlinear.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter moont:extends msl:Modelica.Blocks.Interfaces.SISO.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.Td.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.Td a moont:MParameterComponent;
	 moont:identifier "Td";
	 moont:type msl:Modelica.SIunits.Time;
	 moont:stringComment "Derivative time constant"^^xsd:string;
	 moont:modification "(min_gleich_small)_gleich_0.001"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.y_start.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.y_start a moont:MParameterComponent;
	 moont:identifier "y_start";
	 moont:type xsd:Real;
	 moont:stringComment "Initial or guess value of output (_gleich_ state)"^^xsd:string;
	 moont:modification "0.0"^^xsd:Real.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.Rising.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.Rising a moont:MParameterComponent;
	 moont:identifier "Rising";
	 moont:type xsd:Real;
	 moont:stringComment "Maximum rising slew rate _+small..+inf) _1/s_"^^xsd:string;
	 moont:modification "(min_gleich_small)_gleich_1"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.initType.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.initType a moont:MParameterComponent;
	 moont:identifier "initType";
	 moont:type msl:Modelica.Blocks.Types.Init;
	 moont:stringComment "Type of initialization (SteadyState implies y _gleich_ u)"^^xsd:string;
	 moont:modification "_gleich_Modelica.Blocks.Types.Init.SteadyState"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.Falling.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.Falling a moont:MParameterComponent;
	 moont:identifier "Falling";
	 moont:type xsd:Real;
	 moont:stringComment "Maximum falling slew rate (-inf..-small_ _1/s_"^^xsd:string;
	 moont:modification "(max_gleich_-small)_gleich_-Rising"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.strict.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.strict a moont:MParameterComponent;
	 moont:identifier "strict";
	 moont:type xsd:Boolean;
	 moont:stringComment "_gleich_ true, if strict limits with noEvent(..)"^^xsd:string;
	 moont:modification "_gleich_false"^^xsd:string.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter moont:hasPart msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.val.
msl:Modelica.Blocks.Nonlinear.SlewRateLimiter.val a moont:MComponent ;
	 moont:identifier "val";
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 rdfs:subClassOf moont:MFunction;
	 moont:containedIn msl:Modelica.Blocks.Nonlinear.PadeDelay.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:extends msl:Modelica.Icons.Function.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.balance.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.balance a moont:MComponent ;
	 moont:identifier "balance";
	 a msl:Boolean.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.nm.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.nm a moont:MComponent ;
	 moont:identifier "nm";
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.A.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.A a moont:MComponent ;
	 moont:identifier "A";
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.a1.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.a1 a moont:MComponent ;
	 moont:identifier "a1";
	 moont:stringComment "First row of A"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.b11.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.b11 a moont:MComponent ;
	 moont:identifier "b11";
	 moont:stringComment "_gleich_ B_1,1_"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.d.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.d a moont:MComponent ;
	 moont:identifier "d";
	 moont:stringComment "D matrix"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.sx.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.sx a moont:MComponent ;
	 moont:identifier "sx";
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.bb.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.bb a moont:MComponent ;
	 moont:identifier "bb";
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.s.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.s a moont:MComponent ;
	 moont:identifier "s";
	 moont:stringComment "Scaling such that x_i_ _gleich_ s_i-1_*x_i-1_, i > 1"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.b.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.b a moont:MComponent ;
	 moont:identifier "b";
	 moont:stringComment "numerator coefficients of transfer function"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.C.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.C a moont:MComponent ;
	 moont:identifier "C";
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.m.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.m a moont:MComponent ;
	 moont:identifier "m";
	 moont:stringComment "order of numerator"^^xsd:string;
	 a msl:Integer.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.C2.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.C2 a moont:MComponent ;
	 moont:identifier "C2";
	 moont:stringComment "C matrix"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.nb.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.nb a moont:MComponent ;
	 moont:identifier "nb";
	 a msl:Integer.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.T.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.T a moont:MComponent ;
	 moont:identifier "T";
	 moont:stringComment "delay time"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.a.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.a a moont:MComponent ;
	 moont:identifier "a";
	 moont:stringComment "denominator coefficients of transfer function"^^xsd:string;
	 a msl:Real.
msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2 moont:hasPart msl:Modelica.Blocks.Nonlinear.PadeDelay.padeCoefficients2.